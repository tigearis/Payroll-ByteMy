# Shared GraphQL Fragments
# Common fragments used across domains to eliminate duplication

# Core User fragments - Used across auth, users, and permissions domains
fragment UserCore on users {
  id
  name
  email
  username
  role
  isActive
  isStaff
  clerkUserId
  createdAt
  updatedAt
}

fragment UserBasic on users {
  id
  name
  email
  role
  isActive
}

fragment UserWithManager on users {
  ...UserCore
  managerId
  managerUser {
    ...UserBasic
  }
}

# Core Role fragments - Used across auth and permissions domains
fragment RoleCore on roles {
  id
  name
  description
  displayName
  priority
  isSystemRole
  createdAt
}

# Core Permission fragments - Used across auth and permissions domains
fragment PermissionCore on permissions {
  id
  action
  description
  resourceId
  createdAt
  updatedAt
}

fragment PermissionWithResource on permissions {
  ...PermissionCore
  relatedResource {
    id
    name
    description
  }
}

# Core Client fragments - Used across clients and billing domains
fragment ClientCore on clients {
  id
  name
  contactEmail
  contactPerson
  contactPhone
  active
  createdAt
  updatedAt
}

fragment ClientBasic on clients {
  id
  name
  active
}

# Core Payroll fragments - moved to domains/payrolls/graphql/fragments.graphql to avoid duplication

# Core Resource fragments - Used across auth and permissions domains
fragment ResourceCore on resources {
  id
  name
  displayName
  description
  createdAt
  updatedAt
}

# Core User Role fragments - Used across auth and permissions domains
fragment UserRoleCore on userRoles {
  id
  userId
  roleId
  createdAt
  updatedAt
}

# Core Role Permission fragments - Used across auth and permissions domains
fragment RolePermissionCore on rolePermissions {
  id
  roleId
  permissionId
  conditions
  createdAt
  updatedAt
}

# Audit and timestamp patterns
fragment AuditFields on auditLogs {
  id
  eventTime
  action
  resourceType
  resourceId
  userId
  ipAddress
  userAgent
  success
  userEmail
  userRole
}
