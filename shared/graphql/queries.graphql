# Shared Queries
# Security Classification: MEDIUM - Dashboard and cross-domain data
# SOC2 Compliance: Aggregate data with no PII exposure

query GetDashboardStats {
  # Total clients count
  clients_aggregate: clientsAggregate {
    aggregate {
      count
    }
  }

  # Total payrolls count
  payrollsAggregate: payrollsAggregate {
    aggregate {
      count
    }
  }

  # Active payrolls (non-superseded)
  active_payrolls: payrollsAggregate(
    where: { supersededDate: { _isNull: true } }
  ) {
    aggregate {
      count
    }
  }

  # Processing queue (payrolls needing attention - can be refined later)
  processing_queue: payrollsAggregate(
    where: {
      supersededDate: { _isNull: true }
      status: { _in: ["Implementation"] }
    }
  ) {
    aggregate {
      count
    }
  }
}

query GetSystemStats {
  # Total counts for admin dashboard
  total_payrolls: payrollsAggregate {
    aggregate {
      count
    }
  }

  total_clients: clientsAggregate {
    aggregate {
      count
    }
  }

  total_users: usersAggregate {
    aggregate {
      count
    }
  }
}

query GetUpcomingPayrollsShared($from_date: date!, $limit: Int = 10) {
  payrolls(
    where: {
      supersededDate: { _isNull: true }
      payrollDates: { adjustedEftDate: { _gte: $from_date } }
    }
    orderBy: { payrollDatesAggregate: { min: { adjustedEftDate: ASC } } }
    limit: $limit
  ) {
    id
    name
    status
    client {
      id
      name
    }
    payrollDates(
      where: { adjustedEftDate: { _gte: $from_date } }
      orderBy: { adjustedEftDate: ASC }
      limit: 1
    ) {
      id
      adjustedEftDate
      processingDate
    }
  }
}

# Unified dashboard query combining stats and upcoming payrolls for optimal performance

query GetUnifiedDashboardData($from_date: date!, $limit: Int = 5) {
  # All dashboard statistics in one call
  clients_aggregate: clientsAggregate {
    aggregate {
      count
    }
  }

  payrollsAggregate: payrollsAggregate {
    aggregate {
      count
    }
  }

  active_payrolls: payrollsAggregate(
    where: { supersededDate: { _isNull: true } }
  ) {
    aggregate {
      count
    }
  }

  processing_queue: payrollsAggregate(
    where: { supersededDate: { _isNull: true } }
  ) {
    aggregate {
      count
    }
  }

  # Recent user activity count for dashboard insights
  active_users: usersAggregate(where: { isActive: { _eq: true } }) {
    aggregate {
      count
    }
  }

  # Upcoming payrolls with enhanced data for dashboard cards
  upcoming_payrolls: payrolls(
    where: {
      supersededDate: { _isNull: true }
      payrollDates: { adjustedEftDate: { _gte: $from_date } }
    }
    orderBy: { payrollDatesAggregate: { min: { adjustedEftDate: ASC } } }
    limit: $limit
  ) {
    id
    name
    status
    employeeCount
    client {
      id
      name
    }
    primaryConsultant {
      id
      name
    }
    payrollDates(
      where: { adjustedEftDate: { _gte: $from_date } }
      orderBy: { adjustedEftDate: ASC }
      limit: 1
    ) {
      id
      adjustedEftDate
      processingDate
    }
  }

  # Recent activity summary for quick insights
  recent_payroll_updates: payrolls(
    where: { supersededDate: { _isNull: true } }
    orderBy: { updatedAt: DESC }
    limit: 3
  ) {
    id
    name
    status
    updatedAt
    client {
      name
    }
  }
}

# Phase 2: Optimized queries to reduce over-fetching in list views

query GetDashboardStatsMinimal {
  # Minimal stats for quick dashboard loading
  clientCount: clientsAggregate {
    aggregate {
      count
    }
  }

  payrollCount: payrollsAggregate(
    where: { supersededDate: { _isNull: true } }
  ) {
    aggregate {
      count
    }
  }

  userCount: usersAggregate(where: { isActive: { _eq: true } }) {
    aggregate {
      count
    }
  }
}

query GetUpcomingPayrollsMinimal($from_date: date!, $limit: Int = 5) {
  # Minimal data for dashboard upcoming payrolls widget
  payrolls(
    where: {
      supersededDate: { _isNull: true }
      payrollDates: { adjustedEftDate: { _gte: $from_date } }
    }
    orderBy: { payrollDatesAggregate: { min: { adjustedEftDate: ASC } } }
    limit: $limit
  ) {
    id
    name
    status
    client {
      name
    }
    nextDate: payrollDates(
      where: { adjustedEftDate: { _gte: $from_date } }
      orderBy: { adjustedEftDate: ASC }
      limit: 1
    ) {
      adjustedEftDate
    }
  }
}

query GetRecentActivityMinimal($limit: Int = 10) {
  # Minimal recent activity for activity feed
  payrolls(
    where: { supersededDate: { _isNull: true } }
    orderBy: { updatedAt: DESC }
    limit: $limit
  ) {
    id
    name
    status
    updatedAt
    client {
      name
    }
  }
}

query GetQuickStatsOnly {
  # Only aggregated counts for very fast loading
  totals: payrollsAggregate(where: { supersededDate: { _isNull: true } }) {
    aggregate {
      count
    }
  }

  activeClients: clientsAggregate(where: { active: { _eq: true } }) {
    aggregate {
      count
    }
  }

  activeUsers: usersAggregate(where: { isActive: { _eq: true } }) {
    aggregate {
      count
    }
  }
}
