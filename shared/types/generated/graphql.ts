/* eslint-disable */
/**
 * THIS FILE IS AUTO-GENERATED - DO NOT EDIT MANUALLY
 * 
 * SOC2 Compliant GraphQL Operations
 * Security Classifications Applied:
 * - CRITICAL: Auth, user roles, financial data - Requires admin access + MFA
 * - HIGH: PII, client data, employee info - Requires role-based access
 * - MEDIUM: Internal business data - Requires authentication
 * - LOW: Public/aggregate data - Basic access control
 * 
 * Compliance Features:
 * ✓ Role-based access control (RBAC)
 * ✓ Audit logging integration
 * ✓ Data classification enforcement
 * ✓ Permission boundary validation
 * ✓ Automatic domain isolation and exports
 * ✓ Client Preset v4.8+ for optimal type safety
 * ✓ Zero type conflicts with modern codegen
 * 
 * Generated: 2025-07-30T05:11:58.877Z
 * Schema Version: Latest from Hasura
 * CodeGen Version: Client Preset v4.0
 */

import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** Scalar _Any */
  _Any: { input: any; output: any; }
  bigint: { input: string; output: string; }
  bpchar: { input: any; output: any; }
  date: { input: string; output: string; }
  inet: { input: any; output: any; }
  interval: { input: any; output: any; }
  invitation_status_enum: { input: any; output: any; }
  json: { input: any; output: any; }
  jsonb: { input: any; output: any; }
  leave_status_enum: { input: any; output: any; }
  name: { input: any; output: any; }
  numeric: { input: number; output: number; }
  payroll_cycle_type: { input: any; output: any; }
  payroll_date_type: { input: any; output: any; }
  payroll_status: { input: any; output: any; }
  permission_action: { input: any; output: any; }
  timestamp: { input: any; output: any; }
  timestamptz: { input: string; output: string; }
  user_position: { input: any; output: any; }
  user_role: { input: any; output: any; }
  user_status_enum: { input: any; output: any; }
  uuid: { input: string; output: string; }
};

export type AssignmentCalendarInput = {
  endDate: Scalars['String']['input'];
  startDate: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

export type AssignmentCalendarResponse = {
  __typename?: 'AssignmentCalendarResponse';
  calendarDays: Array<CalendarDay>;
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type AssignmentDetails = {
  __typename?: 'AssignmentDetails';
  clientName: Scalars['String']['output'];
  eftDate: Scalars['String']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  priority: Scalars['String']['output'];
  processingDaysBeforeEft: Scalars['Int']['output'];
  processingTime: Scalars['Float']['output'];
  status: Scalars['String']['output'];
};

export type AuditEventInput = {
  action: Scalars['String']['input'];
  ipAddress?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['json']['input']>;
  resourceId?: InputMaybe<Scalars['String']['input']>;
  resourceType: Scalars['String']['input'];
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userId: Scalars['String']['input'];
};

export type AuditEventResponse = {
  __typename?: 'AuditEventResponse';
  eventId?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** columns and relationships of "audit.user_access_summary" */
export type AuditUserAccessSummary = {
  __typename?: 'AuditUserAccessSummary';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isStaff?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['user_role']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "audit.user_access_summary" */
export type AuditUserAccessSummaryAggregate = {
  __typename?: 'AuditUserAccessSummaryAggregate';
  aggregate?: Maybe<AuditUserAccessSummaryAggregateFields>;
  nodes: Array<AuditUserAccessSummary>;
};

/** aggregate fields of "audit.user_access_summary" */
export type AuditUserAccessSummaryAggregateFields = {
  __typename?: 'AuditUserAccessSummaryAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<AuditUserAccessSummaryMaxFields>;
  min?: Maybe<AuditUserAccessSummaryMinFields>;
};


/** aggregate fields of "audit.user_access_summary" */
export type AuditUserAccessSummaryAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AuditUserAccessSummarySelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "audit.user_access_summary". All fields are combined with a logical 'AND'. */
export type AuditUserAccessSummaryBoolExp = {
  _and?: InputMaybe<Array<AuditUserAccessSummaryBoolExp>>;
  _not?: InputMaybe<AuditUserAccessSummaryBoolExp>;
  _or?: InputMaybe<Array<AuditUserAccessSummaryBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  email?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  isStaff?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  role?: InputMaybe<UserRoleComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** input type for inserting data into table "audit.user_access_summary" */
export type AuditUserAccessSummaryInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['user_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type AuditUserAccessSummaryMaxFields = {
  __typename?: 'AuditUserAccessSummaryMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['user_role']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type AuditUserAccessSummaryMinFields = {
  __typename?: 'AuditUserAccessSummaryMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['user_role']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "audit.user_access_summary" */
export type AuditUserAccessSummaryMutationResponse = {
  __typename?: 'AuditUserAccessSummaryMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AuditUserAccessSummary>;
};

/** Ordering options when selecting data from "audit.user_access_summary". */
export type AuditUserAccessSummaryOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  isStaff?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  role?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** select columns of table "audit.user_access_summary" */
export type AuditUserAccessSummarySelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'email'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isStaff'
  /** column name */
  | 'name'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "audit.user_access_summary" */
export type AuditUserAccessSummarySetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['user_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "audit_user_access_summary" */
export type AuditUserAccessSummaryStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: AuditUserAccessSummaryStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type AuditUserAccessSummaryStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['user_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

export type AuditUserAccessSummaryUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AuditUserAccessSummarySetInput>;
  /** filter the rows which have to be updated */
  where: AuditUserAccessSummaryBoolExp;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type BigintComparisonExp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type BooleanComparisonExp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

/** Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'. */
export type BpcharComparisonExp = {
  _eq?: InputMaybe<Scalars['bpchar']['input']>;
  _gt?: InputMaybe<Scalars['bpchar']['input']>;
  _gte?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['bpchar']['input']>;
  _in?: InputMaybe<Array<Scalars['bpchar']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['bpchar']['input']>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['bpchar']['input']>;
  _lt?: InputMaybe<Scalars['bpchar']['input']>;
  _lte?: InputMaybe<Scalars['bpchar']['input']>;
  _neq?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['bpchar']['input']>;
  _nin?: InputMaybe<Array<Scalars['bpchar']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['bpchar']['input']>;
};

export type CalendarDay = {
  __typename?: 'CalendarDay';
  adminTimeHours: Scalars['Float']['output'];
  assignments: Array<AssignmentDetails>;
  date: Scalars['String']['output'];
  isOverallocated: Scalars['Boolean']['output'];
  payrollCapacityHours: Scalars['Float']['output'];
  totalAssignedHours: Scalars['Float']['output'];
  utilization: Scalars['Int']['output'];
  workHours: Scalars['Float']['output'];
};

export type CapacitySummary = {
  __typename?: 'CapacitySummary';
  avgUtilization: Scalars['Int']['output'];
  overallocatedPeriods: Scalars['Int']['output'];
  periodsShown: Scalars['Int']['output'];
  totalAssigned: Scalars['Float']['output'];
  totalCapacity: Scalars['Float']['output'];
};

/** Client service agreements with effective rates */
export type ClientServicesWithRates = {
  __typename?: 'ClientServicesWithRates';
  agreementId?: Maybe<Scalars['uuid']['output']>;
  billingFrequency?: Maybe<Scalars['String']['output']>;
  billingUnit?: Maybe<Scalars['String']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  customRate?: Maybe<Scalars['numeric']['output']>;
  effectiveDate?: Maybe<Scalars['date']['output']>;
  effectiveRate?: Maybe<Scalars['numeric']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isEnabled?: Maybe<Scalars['Boolean']['output']>;
  serviceDescription?: Maybe<Scalars['String']['output']>;
  serviceId?: Maybe<Scalars['uuid']['output']>;
  serviceName?: Maybe<Scalars['String']['output']>;
  standardRate?: Maybe<Scalars['numeric']['output']>;
};

/** aggregated selection of "client_services_with_rates" */
export type ClientServicesWithRatesAggregate = {
  __typename?: 'ClientServicesWithRatesAggregate';
  aggregate?: Maybe<ClientServicesWithRatesAggregateFields>;
  nodes: Array<ClientServicesWithRates>;
};

/** aggregate fields of "client_services_with_rates" */
export type ClientServicesWithRatesAggregateFields = {
  __typename?: 'ClientServicesWithRatesAggregateFields';
  avg?: Maybe<ClientServicesWithRatesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientServicesWithRatesMaxFields>;
  min?: Maybe<ClientServicesWithRatesMinFields>;
  stddev?: Maybe<ClientServicesWithRatesStddevFields>;
  stddevPop?: Maybe<ClientServicesWithRatesStddevPopFields>;
  stddevSamp?: Maybe<ClientServicesWithRatesStddevSampFields>;
  sum?: Maybe<ClientServicesWithRatesSumFields>;
  varPop?: Maybe<ClientServicesWithRatesVarPopFields>;
  varSamp?: Maybe<ClientServicesWithRatesVarSampFields>;
  variance?: Maybe<ClientServicesWithRatesVarianceFields>;
};


/** aggregate fields of "client_services_with_rates" */
export type ClientServicesWithRatesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ClientServicesWithRatesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ClientServicesWithRatesAvgFields = {
  __typename?: 'ClientServicesWithRatesAvgFields';
  customRate?: Maybe<Scalars['Float']['output']>;
  effectiveRate?: Maybe<Scalars['Float']['output']>;
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "client_services_with_rates". All fields are combined with a logical 'AND'. */
export type ClientServicesWithRatesBoolExp = {
  _and?: InputMaybe<Array<ClientServicesWithRatesBoolExp>>;
  _not?: InputMaybe<ClientServicesWithRatesBoolExp>;
  _or?: InputMaybe<Array<ClientServicesWithRatesBoolExp>>;
  agreementId?: InputMaybe<UuidComparisonExp>;
  billingFrequency?: InputMaybe<StringComparisonExp>;
  billingUnit?: InputMaybe<StringComparisonExp>;
  category?: InputMaybe<StringComparisonExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  clientName?: InputMaybe<StringComparisonExp>;
  customRate?: InputMaybe<NumericComparisonExp>;
  effectiveDate?: InputMaybe<DateComparisonExp>;
  effectiveRate?: InputMaybe<NumericComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  isEnabled?: InputMaybe<BooleanComparisonExp>;
  serviceDescription?: InputMaybe<StringComparisonExp>;
  serviceId?: InputMaybe<UuidComparisonExp>;
  serviceName?: InputMaybe<StringComparisonExp>;
  standardRate?: InputMaybe<NumericComparisonExp>;
};

/** aggregate max on columns */
export type ClientServicesWithRatesMaxFields = {
  __typename?: 'ClientServicesWithRatesMaxFields';
  agreementId?: Maybe<Scalars['uuid']['output']>;
  billingFrequency?: Maybe<Scalars['String']['output']>;
  billingUnit?: Maybe<Scalars['String']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  customRate?: Maybe<Scalars['numeric']['output']>;
  effectiveDate?: Maybe<Scalars['date']['output']>;
  effectiveRate?: Maybe<Scalars['numeric']['output']>;
  serviceDescription?: Maybe<Scalars['String']['output']>;
  serviceId?: Maybe<Scalars['uuid']['output']>;
  serviceName?: Maybe<Scalars['String']['output']>;
  standardRate?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate min on columns */
export type ClientServicesWithRatesMinFields = {
  __typename?: 'ClientServicesWithRatesMinFields';
  agreementId?: Maybe<Scalars['uuid']['output']>;
  billingFrequency?: Maybe<Scalars['String']['output']>;
  billingUnit?: Maybe<Scalars['String']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  customRate?: Maybe<Scalars['numeric']['output']>;
  effectiveDate?: Maybe<Scalars['date']['output']>;
  effectiveRate?: Maybe<Scalars['numeric']['output']>;
  serviceDescription?: Maybe<Scalars['String']['output']>;
  serviceId?: Maybe<Scalars['uuid']['output']>;
  serviceName?: Maybe<Scalars['String']['output']>;
  standardRate?: Maybe<Scalars['numeric']['output']>;
};

/** Ordering options when selecting data from "client_services_with_rates". */
export type ClientServicesWithRatesOrderBy = {
  agreementId?: InputMaybe<OrderBy>;
  billingFrequency?: InputMaybe<OrderBy>;
  billingUnit?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  clientName?: InputMaybe<OrderBy>;
  customRate?: InputMaybe<OrderBy>;
  effectiveDate?: InputMaybe<OrderBy>;
  effectiveRate?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  isEnabled?: InputMaybe<OrderBy>;
  serviceDescription?: InputMaybe<OrderBy>;
  serviceId?: InputMaybe<OrderBy>;
  serviceName?: InputMaybe<OrderBy>;
  standardRate?: InputMaybe<OrderBy>;
};

/** select columns of table "client_services_with_rates" */
export type ClientServicesWithRatesSelectColumn =
  /** column name */
  | 'agreementId'
  /** column name */
  | 'billingFrequency'
  /** column name */
  | 'billingUnit'
  /** column name */
  | 'category'
  /** column name */
  | 'clientId'
  /** column name */
  | 'clientName'
  /** column name */
  | 'customRate'
  /** column name */
  | 'effectiveDate'
  /** column name */
  | 'effectiveRate'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isEnabled'
  /** column name */
  | 'serviceDescription'
  /** column name */
  | 'serviceId'
  /** column name */
  | 'serviceName'
  /** column name */
  | 'standardRate'
  | '%future added value';

/** aggregate stddev on columns */
export type ClientServicesWithRatesStddevFields = {
  __typename?: 'ClientServicesWithRatesStddevFields';
  customRate?: Maybe<Scalars['Float']['output']>;
  effectiveRate?: Maybe<Scalars['Float']['output']>;
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type ClientServicesWithRatesStddevPopFields = {
  __typename?: 'ClientServicesWithRatesStddevPopFields';
  customRate?: Maybe<Scalars['Float']['output']>;
  effectiveRate?: Maybe<Scalars['Float']['output']>;
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type ClientServicesWithRatesStddevSampFields = {
  __typename?: 'ClientServicesWithRatesStddevSampFields';
  customRate?: Maybe<Scalars['Float']['output']>;
  effectiveRate?: Maybe<Scalars['Float']['output']>;
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "client_services_with_rates" */
export type ClientServicesWithRatesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: ClientServicesWithRatesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientServicesWithRatesStreamCursorValueInput = {
  agreementId?: InputMaybe<Scalars['uuid']['input']>;
  billingFrequency?: InputMaybe<Scalars['String']['input']>;
  billingUnit?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  clientName?: InputMaybe<Scalars['String']['input']>;
  customRate?: InputMaybe<Scalars['numeric']['input']>;
  effectiveDate?: InputMaybe<Scalars['date']['input']>;
  effectiveRate?: InputMaybe<Scalars['numeric']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  serviceDescription?: InputMaybe<Scalars['String']['input']>;
  serviceId?: InputMaybe<Scalars['uuid']['input']>;
  serviceName?: InputMaybe<Scalars['String']['input']>;
  standardRate?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate sum on columns */
export type ClientServicesWithRatesSumFields = {
  __typename?: 'ClientServicesWithRatesSumFields';
  customRate?: Maybe<Scalars['numeric']['output']>;
  effectiveRate?: Maybe<Scalars['numeric']['output']>;
  standardRate?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate varPop on columns */
export type ClientServicesWithRatesVarPopFields = {
  __typename?: 'ClientServicesWithRatesVarPopFields';
  customRate?: Maybe<Scalars['Float']['output']>;
  effectiveRate?: Maybe<Scalars['Float']['output']>;
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type ClientServicesWithRatesVarSampFields = {
  __typename?: 'ClientServicesWithRatesVarSampFields';
  customRate?: Maybe<Scalars['Float']['output']>;
  effectiveRate?: Maybe<Scalars['Float']['output']>;
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ClientServicesWithRatesVarianceFields = {
  __typename?: 'ClientServicesWithRatesVarianceFields';
  customRate?: Maybe<Scalars['Float']['output']>;
  effectiveRate?: Maybe<Scalars['Float']['output']>;
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "consultant_capacity_overview" */
export type ConsultantCapacityOverview = {
  __typename?: 'ConsultantCapacityOverview';
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['numeric']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  usesDefaultAdminTime?: Maybe<Scalars['Boolean']['output']>;
  workDay?: Maybe<Scalars['String']['output']>;
  workHours?: Maybe<Scalars['numeric']['output']>;
};

/** aggregated selection of "consultant_capacity_overview" */
export type ConsultantCapacityOverviewAggregate = {
  __typename?: 'ConsultantCapacityOverviewAggregate';
  aggregate?: Maybe<ConsultantCapacityOverviewAggregateFields>;
  nodes: Array<ConsultantCapacityOverview>;
};

/** aggregate fields of "consultant_capacity_overview" */
export type ConsultantCapacityOverviewAggregateFields = {
  __typename?: 'ConsultantCapacityOverviewAggregateFields';
  avg?: Maybe<ConsultantCapacityOverviewAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ConsultantCapacityOverviewMaxFields>;
  min?: Maybe<ConsultantCapacityOverviewMinFields>;
  stddev?: Maybe<ConsultantCapacityOverviewStddevFields>;
  stddevPop?: Maybe<ConsultantCapacityOverviewStddevPopFields>;
  stddevSamp?: Maybe<ConsultantCapacityOverviewStddevSampFields>;
  sum?: Maybe<ConsultantCapacityOverviewSumFields>;
  varPop?: Maybe<ConsultantCapacityOverviewVarPopFields>;
  varSamp?: Maybe<ConsultantCapacityOverviewVarSampFields>;
  variance?: Maybe<ConsultantCapacityOverviewVarianceFields>;
};


/** aggregate fields of "consultant_capacity_overview" */
export type ConsultantCapacityOverviewAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ConsultantCapacityOverviewSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ConsultantCapacityOverviewAvgFields = {
  __typename?: 'ConsultantCapacityOverviewAvgFields';
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['Float']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "consultant_capacity_overview". All fields are combined with a logical 'AND'. */
export type ConsultantCapacityOverviewBoolExp = {
  _and?: InputMaybe<Array<ConsultantCapacityOverviewBoolExp>>;
  _not?: InputMaybe<ConsultantCapacityOverviewBoolExp>;
  _or?: InputMaybe<Array<ConsultantCapacityOverviewBoolExp>>;
  adminTimeHours?: InputMaybe<NumericComparisonExp>;
  adminTimePercentageActual?: InputMaybe<NumericComparisonExp>;
  defaultAdminTimePercentage?: InputMaybe<NumericComparisonExp>;
  email?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  payrollCapacityHours?: InputMaybe<NumericComparisonExp>;
  position?: InputMaybe<UserPositionComparisonExp>;
  usesDefaultAdminTime?: InputMaybe<BooleanComparisonExp>;
  workDay?: InputMaybe<StringComparisonExp>;
  workHours?: InputMaybe<NumericComparisonExp>;
};

/** aggregate max on columns */
export type ConsultantCapacityOverviewMaxFields = {
  __typename?: 'ConsultantCapacityOverviewMaxFields';
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['numeric']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  workDay?: Maybe<Scalars['String']['output']>;
  workHours?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate min on columns */
export type ConsultantCapacityOverviewMinFields = {
  __typename?: 'ConsultantCapacityOverviewMinFields';
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['numeric']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  workDay?: Maybe<Scalars['String']['output']>;
  workHours?: Maybe<Scalars['numeric']['output']>;
};

/** Ordering options when selecting data from "consultant_capacity_overview". */
export type ConsultantCapacityOverviewOrderBy = {
  adminTimeHours?: InputMaybe<OrderBy>;
  adminTimePercentageActual?: InputMaybe<OrderBy>;
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payrollCapacityHours?: InputMaybe<OrderBy>;
  position?: InputMaybe<OrderBy>;
  usesDefaultAdminTime?: InputMaybe<OrderBy>;
  workDay?: InputMaybe<OrderBy>;
  workHours?: InputMaybe<OrderBy>;
};

/** select columns of table "consultant_capacity_overview" */
export type ConsultantCapacityOverviewSelectColumn =
  /** column name */
  | 'adminTimeHours'
  /** column name */
  | 'adminTimePercentageActual'
  /** column name */
  | 'defaultAdminTimePercentage'
  /** column name */
  | 'email'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'payrollCapacityHours'
  /** column name */
  | 'position'
  /** column name */
  | 'usesDefaultAdminTime'
  /** column name */
  | 'workDay'
  /** column name */
  | 'workHours'
  | '%future added value';

/** aggregate stddev on columns */
export type ConsultantCapacityOverviewStddevFields = {
  __typename?: 'ConsultantCapacityOverviewStddevFields';
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['Float']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type ConsultantCapacityOverviewStddevPopFields = {
  __typename?: 'ConsultantCapacityOverviewStddevPopFields';
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['Float']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type ConsultantCapacityOverviewStddevSampFields = {
  __typename?: 'ConsultantCapacityOverviewStddevSampFields';
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['Float']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "consultant_capacity_overview" */
export type ConsultantCapacityOverviewStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: ConsultantCapacityOverviewStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type ConsultantCapacityOverviewStreamCursorValueInput = {
  adminTimeHours?: InputMaybe<Scalars['numeric']['input']>;
  adminTimePercentageActual?: InputMaybe<Scalars['numeric']['input']>;
  defaultAdminTimePercentage?: InputMaybe<Scalars['numeric']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payrollCapacityHours?: InputMaybe<Scalars['numeric']['input']>;
  position?: InputMaybe<Scalars['user_position']['input']>;
  usesDefaultAdminTime?: InputMaybe<Scalars['Boolean']['input']>;
  workDay?: InputMaybe<Scalars['String']['input']>;
  workHours?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate sum on columns */
export type ConsultantCapacityOverviewSumFields = {
  __typename?: 'ConsultantCapacityOverviewSumFields';
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['numeric']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  workHours?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate varPop on columns */
export type ConsultantCapacityOverviewVarPopFields = {
  __typename?: 'ConsultantCapacityOverviewVarPopFields';
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['Float']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type ConsultantCapacityOverviewVarSampFields = {
  __typename?: 'ConsultantCapacityOverviewVarSampFields';
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['Float']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ConsultantCapacityOverviewVarianceFields = {
  __typename?: 'ConsultantCapacityOverviewVarianceFields';
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  adminTimePercentageActual?: Maybe<Scalars['Float']['output']>;
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** ordering argument of a cursor */
export type CursorOrdering =
  /** ascending ordering of the cursor */
  | 'ASC'
  /** descending ordering of the cursor */
  | 'DESC'
  | '%future added value';

/** columns and relationships of "data_backups" */
export type DataBackups = {
  __typename?: 'DataBackups';
  backupType?: Maybe<Scalars['String']['output']>;
  checksum?: Maybe<Scalars['String']['output']>;
  completedAt?: Maybe<Scalars['timestamptz']['output']>;
  compressionType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  encryptionKeyHash?: Maybe<Scalars['String']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  fileSize?: Maybe<Scalars['bigint']['output']>;
  id: Scalars['uuid']['output'];
  metadata?: Maybe<Scalars['jsonb']['output']>;
  retentionDays?: Maybe<Scalars['Int']['output']>;
  startedAt?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  storagePath?: Maybe<Scalars['String']['output']>;
  tablesIncluded?: Maybe<Array<Scalars['String']['output']>>;
  /** An object relationship */
  user?: Maybe<Users>;
  userId?: Maybe<Scalars['uuid']['output']>;
};


/** columns and relationships of "data_backups" */
export type DataBackupsMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "data_backups" */
export type DataBackupsAggregate = {
  __typename?: 'DataBackupsAggregate';
  aggregate?: Maybe<DataBackupsAggregateFields>;
  nodes: Array<DataBackups>;
};

export type DataBackupsAggregateBoolExp = {
  count?: InputMaybe<DataBackupsAggregateBoolExpCount>;
};

/** aggregate fields of "data_backups" */
export type DataBackupsAggregateFields = {
  __typename?: 'DataBackupsAggregateFields';
  avg?: Maybe<DataBackupsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DataBackupsMaxFields>;
  min?: Maybe<DataBackupsMinFields>;
  stddev?: Maybe<DataBackupsStddevFields>;
  stddevPop?: Maybe<DataBackupsStddevPopFields>;
  stddevSamp?: Maybe<DataBackupsStddevSampFields>;
  sum?: Maybe<DataBackupsSumFields>;
  varPop?: Maybe<DataBackupsVarPopFields>;
  varSamp?: Maybe<DataBackupsVarSampFields>;
  variance?: Maybe<DataBackupsVarianceFields>;
};


/** aggregate fields of "data_backups" */
export type DataBackupsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<DataBackupsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "data_backups" */
export type DataBackupsAggregateOrderBy = {
  avg?: InputMaybe<DataBackupsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<DataBackupsMaxOrderBy>;
  min?: InputMaybe<DataBackupsMinOrderBy>;
  stddev?: InputMaybe<DataBackupsStddevOrderBy>;
  stddevPop?: InputMaybe<DataBackupsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<DataBackupsStddevSampOrderBy>;
  sum?: InputMaybe<DataBackupsSumOrderBy>;
  varPop?: InputMaybe<DataBackupsVarPopOrderBy>;
  varSamp?: InputMaybe<DataBackupsVarSampOrderBy>;
  variance?: InputMaybe<DataBackupsVarianceOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type DataBackupsAppendInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "data_backups" */
export type DataBackupsArrRelInsertInput = {
  data: Array<DataBackupsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<DataBackupsOnConflict>;
};

/** aggregate avg on columns */
export type DataBackupsAvgFields = {
  __typename?: 'DataBackupsAvgFields';
  fileSize?: Maybe<Scalars['Float']['output']>;
  retentionDays?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "data_backups" */
export type DataBackupsAvgOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "data_backups". All fields are combined with a logical 'AND'. */
export type DataBackupsBoolExp = {
  _and?: InputMaybe<Array<DataBackupsBoolExp>>;
  _not?: InputMaybe<DataBackupsBoolExp>;
  _or?: InputMaybe<Array<DataBackupsBoolExp>>;
  backupType?: InputMaybe<StringComparisonExp>;
  checksum?: InputMaybe<StringComparisonExp>;
  completedAt?: InputMaybe<TimestamptzComparisonExp>;
  compressionType?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  encryptionKeyHash?: InputMaybe<StringComparisonExp>;
  errorMessage?: InputMaybe<StringComparisonExp>;
  expiresAt?: InputMaybe<TimestamptzComparisonExp>;
  fileSize?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  retentionDays?: InputMaybe<IntComparisonExp>;
  startedAt?: InputMaybe<TimestamptzComparisonExp>;
  status?: InputMaybe<StringComparisonExp>;
  storagePath?: InputMaybe<StringComparisonExp>;
  tablesIncluded?: InputMaybe<StringArrayComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "data_backups" */
export type DataBackupsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'data_backups_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type DataBackupsDeleteAtPathInput = {
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type DataBackupsDeleteElemInput = {
  metadata?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type DataBackupsDeleteKeyInput = {
  metadata?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "data_backups" */
export type DataBackupsIncInput = {
  fileSize?: InputMaybe<Scalars['bigint']['input']>;
  retentionDays?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "data_backups" */
export type DataBackupsInsertInput = {
  backupType?: InputMaybe<Scalars['String']['input']>;
  checksum?: InputMaybe<Scalars['String']['input']>;
  completedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  compressionType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  encryptionKeyHash?: InputMaybe<Scalars['String']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fileSize?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  retentionDays?: InputMaybe<Scalars['Int']['input']>;
  startedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  storagePath?: InputMaybe<Scalars['String']['input']>;
  tablesIncluded?: InputMaybe<Array<Scalars['String']['input']>>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type DataBackupsMaxFields = {
  __typename?: 'DataBackupsMaxFields';
  backupType?: Maybe<Scalars['String']['output']>;
  checksum?: Maybe<Scalars['String']['output']>;
  completedAt?: Maybe<Scalars['timestamptz']['output']>;
  compressionType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  encryptionKeyHash?: Maybe<Scalars['String']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  fileSize?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  retentionDays?: Maybe<Scalars['Int']['output']>;
  startedAt?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  storagePath?: Maybe<Scalars['String']['output']>;
  tablesIncluded?: Maybe<Array<Scalars['String']['output']>>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "data_backups" */
export type DataBackupsMaxOrderBy = {
  backupType?: InputMaybe<OrderBy>;
  checksum?: InputMaybe<OrderBy>;
  completedAt?: InputMaybe<OrderBy>;
  compressionType?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  encryptionKeyHash?: InputMaybe<OrderBy>;
  errorMessage?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  fileSize?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
  startedAt?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  storagePath?: InputMaybe<OrderBy>;
  tablesIncluded?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type DataBackupsMinFields = {
  __typename?: 'DataBackupsMinFields';
  backupType?: Maybe<Scalars['String']['output']>;
  checksum?: Maybe<Scalars['String']['output']>;
  completedAt?: Maybe<Scalars['timestamptz']['output']>;
  compressionType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  encryptionKeyHash?: Maybe<Scalars['String']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  fileSize?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  retentionDays?: Maybe<Scalars['Int']['output']>;
  startedAt?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  storagePath?: Maybe<Scalars['String']['output']>;
  tablesIncluded?: Maybe<Array<Scalars['String']['output']>>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "data_backups" */
export type DataBackupsMinOrderBy = {
  backupType?: InputMaybe<OrderBy>;
  checksum?: InputMaybe<OrderBy>;
  completedAt?: InputMaybe<OrderBy>;
  compressionType?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  encryptionKeyHash?: InputMaybe<OrderBy>;
  errorMessage?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  fileSize?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
  startedAt?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  storagePath?: InputMaybe<OrderBy>;
  tablesIncluded?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "data_backups" */
export type DataBackupsMutationResponse = {
  __typename?: 'DataBackupsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DataBackups>;
};

/** on_conflict condition type for table "data_backups" */
export type DataBackupsOnConflict = {
  constraint: DataBackupsConstraint;
  updateColumns?: Array<DataBackupsUpdateColumn>;
  where?: InputMaybe<DataBackupsBoolExp>;
};

/** Ordering options when selecting data from "data_backups". */
export type DataBackupsOrderBy = {
  backupType?: InputMaybe<OrderBy>;
  checksum?: InputMaybe<OrderBy>;
  completedAt?: InputMaybe<OrderBy>;
  compressionType?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  encryptionKeyHash?: InputMaybe<OrderBy>;
  errorMessage?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  fileSize?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
  startedAt?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  storagePath?: InputMaybe<OrderBy>;
  tablesIncluded?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: data_backups */
export type DataBackupsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type DataBackupsPrependInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "data_backups" */
export type DataBackupsSelectColumn =
  /** column name */
  | 'backupType'
  /** column name */
  | 'checksum'
  /** column name */
  | 'completedAt'
  /** column name */
  | 'compressionType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'encryptionKeyHash'
  /** column name */
  | 'errorMessage'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'fileSize'
  /** column name */
  | 'id'
  /** column name */
  | 'metadata'
  /** column name */
  | 'retentionDays'
  /** column name */
  | 'startedAt'
  /** column name */
  | 'status'
  /** column name */
  | 'storagePath'
  /** column name */
  | 'tablesIncluded'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "data_backups" */
export type DataBackupsSetInput = {
  backupType?: InputMaybe<Scalars['String']['input']>;
  checksum?: InputMaybe<Scalars['String']['input']>;
  completedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  compressionType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  encryptionKeyHash?: InputMaybe<Scalars['String']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fileSize?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  retentionDays?: InputMaybe<Scalars['Int']['input']>;
  startedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  storagePath?: InputMaybe<Scalars['String']['input']>;
  tablesIncluded?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate stddev on columns */
export type DataBackupsStddevFields = {
  __typename?: 'DataBackupsStddevFields';
  fileSize?: Maybe<Scalars['Float']['output']>;
  retentionDays?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "data_backups" */
export type DataBackupsStddevOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type DataBackupsStddevPopFields = {
  __typename?: 'DataBackupsStddevPopFields';
  fileSize?: Maybe<Scalars['Float']['output']>;
  retentionDays?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "data_backups" */
export type DataBackupsStddevPopOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type DataBackupsStddevSampFields = {
  __typename?: 'DataBackupsStddevSampFields';
  fileSize?: Maybe<Scalars['Float']['output']>;
  retentionDays?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "data_backups" */
export type DataBackupsStddevSampOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "data_backups" */
export type DataBackupsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: DataBackupsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type DataBackupsStreamCursorValueInput = {
  backupType?: InputMaybe<Scalars['String']['input']>;
  checksum?: InputMaybe<Scalars['String']['input']>;
  completedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  compressionType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  encryptionKeyHash?: InputMaybe<Scalars['String']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fileSize?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  retentionDays?: InputMaybe<Scalars['Int']['input']>;
  startedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  storagePath?: InputMaybe<Scalars['String']['input']>;
  tablesIncluded?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate sum on columns */
export type DataBackupsSumFields = {
  __typename?: 'DataBackupsSumFields';
  fileSize?: Maybe<Scalars['bigint']['output']>;
  retentionDays?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "data_backups" */
export type DataBackupsSumOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** update columns of table "data_backups" */
export type DataBackupsUpdateColumn =
  /** column name */
  | 'backupType'
  /** column name */
  | 'checksum'
  /** column name */
  | 'completedAt'
  /** column name */
  | 'compressionType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'encryptionKeyHash'
  /** column name */
  | 'errorMessage'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'fileSize'
  /** column name */
  | 'id'
  /** column name */
  | 'metadata'
  /** column name */
  | 'retentionDays'
  /** column name */
  | 'startedAt'
  /** column name */
  | 'status'
  /** column name */
  | 'storagePath'
  /** column name */
  | 'tablesIncluded'
  /** column name */
  | 'userId'
  | '%future added value';

export type DataBackupsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<DataBackupsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<DataBackupsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<DataBackupsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<DataBackupsDeleteKeyInput>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DataBackupsIncInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<DataBackupsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DataBackupsSetInput>;
  /** filter the rows which have to be updated */
  where: DataBackupsBoolExp;
};

/** aggregate varPop on columns */
export type DataBackupsVarPopFields = {
  __typename?: 'DataBackupsVarPopFields';
  fileSize?: Maybe<Scalars['Float']['output']>;
  retentionDays?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "data_backups" */
export type DataBackupsVarPopOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type DataBackupsVarSampFields = {
  __typename?: 'DataBackupsVarSampFields';
  fileSize?: Maybe<Scalars['Float']['output']>;
  retentionDays?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "data_backups" */
export type DataBackupsVarSampOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type DataBackupsVarianceFields = {
  __typename?: 'DataBackupsVarianceFields';
  fileSize?: Maybe<Scalars['Float']['output']>;
  retentionDays?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "data_backups" */
export type DataBackupsVarianceOrderBy = {
  fileSize?: InputMaybe<OrderBy>;
  retentionDays?: InputMaybe<OrderBy>;
};

/** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
export type DateComparisonExp = {
  _eq?: InputMaybe<Scalars['date']['input']>;
  _gt?: InputMaybe<Scalars['date']['input']>;
  _gte?: InputMaybe<Scalars['date']['input']>;
  _in?: InputMaybe<Array<Scalars['date']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['date']['input']>;
  _lte?: InputMaybe<Scalars['date']['input']>;
  _neq?: InputMaybe<Scalars['date']['input']>;
  _nin?: InputMaybe<Array<Scalars['date']['input']>>;
};

/** Draft emails saved for later sending */
export type EmailDrafts = {
  __typename?: 'EmailDrafts';
  businessContext?: Maybe<Scalars['jsonb']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  emailTemplate?: Maybe<EmailTemplates>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id: Scalars['uuid']['output'];
  recipientEmails: Array<Scalars['String']['output']>;
  scheduledFor?: Maybe<Scalars['timestamptz']['output']>;
  subject?: Maybe<Scalars['String']['output']>;
  templateId?: Maybe<Scalars['uuid']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  user: Users;
  userId: Scalars['uuid']['output'];
  variableValues?: Maybe<Scalars['jsonb']['output']>;
};


/** Draft emails saved for later sending */
export type EmailDraftsBusinessContextArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** Draft emails saved for later sending */
export type EmailDraftsVariableValuesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "email_drafts" */
export type EmailDraftsAggregate = {
  __typename?: 'EmailDraftsAggregate';
  aggregate?: Maybe<EmailDraftsAggregateFields>;
  nodes: Array<EmailDrafts>;
};

export type EmailDraftsAggregateBoolExp = {
  count?: InputMaybe<EmailDraftsAggregateBoolExpCount>;
};

/** aggregate fields of "email_drafts" */
export type EmailDraftsAggregateFields = {
  __typename?: 'EmailDraftsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<EmailDraftsMaxFields>;
  min?: Maybe<EmailDraftsMinFields>;
};


/** aggregate fields of "email_drafts" */
export type EmailDraftsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "email_drafts" */
export type EmailDraftsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EmailDraftsMaxOrderBy>;
  min?: InputMaybe<EmailDraftsMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type EmailDraftsAppendInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  variableValues?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "email_drafts" */
export type EmailDraftsArrRelInsertInput = {
  data: Array<EmailDraftsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<EmailDraftsOnConflict>;
};

/** Boolean expression to filter rows from the table "email_drafts". All fields are combined with a logical 'AND'. */
export type EmailDraftsBoolExp = {
  _and?: InputMaybe<Array<EmailDraftsBoolExp>>;
  _not?: InputMaybe<EmailDraftsBoolExp>;
  _or?: InputMaybe<Array<EmailDraftsBoolExp>>;
  businessContext?: InputMaybe<JsonbComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  emailTemplate?: InputMaybe<EmailTemplatesBoolExp>;
  htmlContent?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  recipientEmails?: InputMaybe<StringArrayComparisonExp>;
  scheduledFor?: InputMaybe<TimestamptzComparisonExp>;
  subject?: InputMaybe<StringComparisonExp>;
  templateId?: InputMaybe<UuidComparisonExp>;
  textContent?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  userId?: InputMaybe<UuidComparisonExp>;
  variableValues?: InputMaybe<JsonbComparisonExp>;
};

/** unique or primary key constraints on table "email_drafts" */
export type EmailDraftsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'email_drafts_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type EmailDraftsDeleteAtPathInput = {
  businessContext?: InputMaybe<Array<Scalars['String']['input']>>;
  variableValues?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type EmailDraftsDeleteElemInput = {
  businessContext?: InputMaybe<Scalars['Int']['input']>;
  variableValues?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type EmailDraftsDeleteKeyInput = {
  businessContext?: InputMaybe<Scalars['String']['input']>;
  variableValues?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "email_drafts" */
export type EmailDraftsInsertInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  emailTemplate?: InputMaybe<EmailTemplatesObjRelInsertInput>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  recipientEmails?: InputMaybe<Array<Scalars['String']['input']>>;
  scheduledFor?: InputMaybe<Scalars['timestamptz']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
  variableValues?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate max on columns */
export type EmailDraftsMaxFields = {
  __typename?: 'EmailDraftsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  recipientEmails?: Maybe<Array<Scalars['String']['output']>>;
  scheduledFor?: Maybe<Scalars['timestamptz']['output']>;
  subject?: Maybe<Scalars['String']['output']>;
  templateId?: Maybe<Scalars['uuid']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "email_drafts" */
export type EmailDraftsMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  recipientEmails?: InputMaybe<OrderBy>;
  scheduledFor?: InputMaybe<OrderBy>;
  subject?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type EmailDraftsMinFields = {
  __typename?: 'EmailDraftsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  recipientEmails?: Maybe<Array<Scalars['String']['output']>>;
  scheduledFor?: Maybe<Scalars['timestamptz']['output']>;
  subject?: Maybe<Scalars['String']['output']>;
  templateId?: Maybe<Scalars['uuid']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "email_drafts" */
export type EmailDraftsMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  recipientEmails?: InputMaybe<OrderBy>;
  scheduledFor?: InputMaybe<OrderBy>;
  subject?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "email_drafts" */
export type EmailDraftsMutationResponse = {
  __typename?: 'EmailDraftsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<EmailDrafts>;
};

/** on_conflict condition type for table "email_drafts" */
export type EmailDraftsOnConflict = {
  constraint: EmailDraftsConstraint;
  updateColumns?: Array<EmailDraftsUpdateColumn>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};

/** Ordering options when selecting data from "email_drafts". */
export type EmailDraftsOrderBy = {
  businessContext?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  emailTemplate?: InputMaybe<EmailTemplatesOrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  recipientEmails?: InputMaybe<OrderBy>;
  scheduledFor?: InputMaybe<OrderBy>;
  subject?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  userId?: InputMaybe<OrderBy>;
  variableValues?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: email_drafts */
export type EmailDraftsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type EmailDraftsPrependInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  variableValues?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "email_drafts" */
export type EmailDraftsSelectColumn =
  /** column name */
  | 'businessContext'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'htmlContent'
  /** column name */
  | 'id'
  /** column name */
  | 'recipientEmails'
  /** column name */
  | 'scheduledFor'
  /** column name */
  | 'subject'
  /** column name */
  | 'templateId'
  /** column name */
  | 'textContent'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  /** column name */
  | 'variableValues'
  | '%future added value';

/** input type for updating data in table "email_drafts" */
export type EmailDraftsSetInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  recipientEmails?: InputMaybe<Array<Scalars['String']['input']>>;
  scheduledFor?: InputMaybe<Scalars['timestamptz']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
  variableValues?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Streaming cursor of the table "email_drafts" */
export type EmailDraftsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: EmailDraftsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type EmailDraftsStreamCursorValueInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  recipientEmails?: InputMaybe<Array<Scalars['String']['input']>>;
  scheduledFor?: InputMaybe<Scalars['timestamptz']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
  variableValues?: InputMaybe<Scalars['jsonb']['input']>;
};

/** update columns of table "email_drafts" */
export type EmailDraftsUpdateColumn =
  /** column name */
  | 'businessContext'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'htmlContent'
  /** column name */
  | 'id'
  /** column name */
  | 'recipientEmails'
  /** column name */
  | 'scheduledFor'
  /** column name */
  | 'subject'
  /** column name */
  | 'templateId'
  /** column name */
  | 'textContent'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  /** column name */
  | 'variableValues'
  | '%future added value';

export type EmailDraftsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<EmailDraftsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<EmailDraftsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<EmailDraftsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<EmailDraftsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<EmailDraftsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<EmailDraftsSetInput>;
  /** filter the rows which have to be updated */
  where: EmailDraftsBoolExp;
};

/** Audit log of all emails sent through the system */
export type EmailSendLogs = {
  __typename?: 'EmailSendLogs';
  businessContext?: Maybe<Scalars['jsonb']['output']>;
  clickedAt?: Maybe<Scalars['timestamptz']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deliveredAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  emailTemplate?: Maybe<EmailTemplates>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id: Scalars['uuid']['output'];
  openedAt?: Maybe<Scalars['timestamptz']['output']>;
  recipientEmails: Array<Scalars['String']['output']>;
  resendEmailId?: Maybe<Scalars['String']['output']>;
  resendResponse?: Maybe<Scalars['jsonb']['output']>;
  scheduledFor?: Maybe<Scalars['timestamptz']['output']>;
  sendStatus?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  senderUser: Users;
  senderUserId: Scalars['uuid']['output'];
  sentAt?: Maybe<Scalars['timestamptz']['output']>;
  subject: Scalars['String']['output'];
  templateId?: Maybe<Scalars['uuid']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
};


/** Audit log of all emails sent through the system */
export type EmailSendLogsBusinessContextArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** Audit log of all emails sent through the system */
export type EmailSendLogsResendResponseArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "email_send_logs" */
export type EmailSendLogsAggregate = {
  __typename?: 'EmailSendLogsAggregate';
  aggregate?: Maybe<EmailSendLogsAggregateFields>;
  nodes: Array<EmailSendLogs>;
};

export type EmailSendLogsAggregateBoolExp = {
  count?: InputMaybe<EmailSendLogsAggregateBoolExpCount>;
};

/** aggregate fields of "email_send_logs" */
export type EmailSendLogsAggregateFields = {
  __typename?: 'EmailSendLogsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<EmailSendLogsMaxFields>;
  min?: Maybe<EmailSendLogsMinFields>;
};


/** aggregate fields of "email_send_logs" */
export type EmailSendLogsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "email_send_logs" */
export type EmailSendLogsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EmailSendLogsMaxOrderBy>;
  min?: InputMaybe<EmailSendLogsMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type EmailSendLogsAppendInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  resendResponse?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "email_send_logs" */
export type EmailSendLogsArrRelInsertInput = {
  data: Array<EmailSendLogsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<EmailSendLogsOnConflict>;
};

/** Boolean expression to filter rows from the table "email_send_logs". All fields are combined with a logical 'AND'. */
export type EmailSendLogsBoolExp = {
  _and?: InputMaybe<Array<EmailSendLogsBoolExp>>;
  _not?: InputMaybe<EmailSendLogsBoolExp>;
  _or?: InputMaybe<Array<EmailSendLogsBoolExp>>;
  businessContext?: InputMaybe<JsonbComparisonExp>;
  clickedAt?: InputMaybe<TimestamptzComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  deliveredAt?: InputMaybe<TimestamptzComparisonExp>;
  emailTemplate?: InputMaybe<EmailTemplatesBoolExp>;
  errorMessage?: InputMaybe<StringComparisonExp>;
  htmlContent?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  openedAt?: InputMaybe<TimestamptzComparisonExp>;
  recipientEmails?: InputMaybe<StringArrayComparisonExp>;
  resendEmailId?: InputMaybe<StringComparisonExp>;
  resendResponse?: InputMaybe<JsonbComparisonExp>;
  scheduledFor?: InputMaybe<TimestamptzComparisonExp>;
  sendStatus?: InputMaybe<StringComparisonExp>;
  senderUser?: InputMaybe<UsersBoolExp>;
  senderUserId?: InputMaybe<UuidComparisonExp>;
  sentAt?: InputMaybe<TimestamptzComparisonExp>;
  subject?: InputMaybe<StringComparisonExp>;
  templateId?: InputMaybe<UuidComparisonExp>;
  textContent?: InputMaybe<StringComparisonExp>;
};

/** unique or primary key constraints on table "email_send_logs" */
export type EmailSendLogsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'email_send_logs_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type EmailSendLogsDeleteAtPathInput = {
  businessContext?: InputMaybe<Array<Scalars['String']['input']>>;
  resendResponse?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type EmailSendLogsDeleteElemInput = {
  businessContext?: InputMaybe<Scalars['Int']['input']>;
  resendResponse?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type EmailSendLogsDeleteKeyInput = {
  businessContext?: InputMaybe<Scalars['String']['input']>;
  resendResponse?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "email_send_logs" */
export type EmailSendLogsInsertInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  clickedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deliveredAt?: InputMaybe<Scalars['timestamptz']['input']>;
  emailTemplate?: InputMaybe<EmailTemplatesObjRelInsertInput>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  openedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  recipientEmails?: InputMaybe<Array<Scalars['String']['input']>>;
  resendEmailId?: InputMaybe<Scalars['String']['input']>;
  resendResponse?: InputMaybe<Scalars['jsonb']['input']>;
  scheduledFor?: InputMaybe<Scalars['timestamptz']['input']>;
  sendStatus?: InputMaybe<Scalars['String']['input']>;
  senderUser?: InputMaybe<UsersObjRelInsertInput>;
  senderUserId?: InputMaybe<Scalars['uuid']['input']>;
  sentAt?: InputMaybe<Scalars['timestamptz']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type EmailSendLogsMaxFields = {
  __typename?: 'EmailSendLogsMaxFields';
  clickedAt?: Maybe<Scalars['timestamptz']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deliveredAt?: Maybe<Scalars['timestamptz']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  openedAt?: Maybe<Scalars['timestamptz']['output']>;
  recipientEmails?: Maybe<Array<Scalars['String']['output']>>;
  resendEmailId?: Maybe<Scalars['String']['output']>;
  scheduledFor?: Maybe<Scalars['timestamptz']['output']>;
  sendStatus?: Maybe<Scalars['String']['output']>;
  senderUserId?: Maybe<Scalars['uuid']['output']>;
  sentAt?: Maybe<Scalars['timestamptz']['output']>;
  subject?: Maybe<Scalars['String']['output']>;
  templateId?: Maybe<Scalars['uuid']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "email_send_logs" */
export type EmailSendLogsMaxOrderBy = {
  clickedAt?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deliveredAt?: InputMaybe<OrderBy>;
  errorMessage?: InputMaybe<OrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  openedAt?: InputMaybe<OrderBy>;
  recipientEmails?: InputMaybe<OrderBy>;
  resendEmailId?: InputMaybe<OrderBy>;
  scheduledFor?: InputMaybe<OrderBy>;
  sendStatus?: InputMaybe<OrderBy>;
  senderUserId?: InputMaybe<OrderBy>;
  sentAt?: InputMaybe<OrderBy>;
  subject?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type EmailSendLogsMinFields = {
  __typename?: 'EmailSendLogsMinFields';
  clickedAt?: Maybe<Scalars['timestamptz']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deliveredAt?: Maybe<Scalars['timestamptz']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  openedAt?: Maybe<Scalars['timestamptz']['output']>;
  recipientEmails?: Maybe<Array<Scalars['String']['output']>>;
  resendEmailId?: Maybe<Scalars['String']['output']>;
  scheduledFor?: Maybe<Scalars['timestamptz']['output']>;
  sendStatus?: Maybe<Scalars['String']['output']>;
  senderUserId?: Maybe<Scalars['uuid']['output']>;
  sentAt?: Maybe<Scalars['timestamptz']['output']>;
  subject?: Maybe<Scalars['String']['output']>;
  templateId?: Maybe<Scalars['uuid']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "email_send_logs" */
export type EmailSendLogsMinOrderBy = {
  clickedAt?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deliveredAt?: InputMaybe<OrderBy>;
  errorMessage?: InputMaybe<OrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  openedAt?: InputMaybe<OrderBy>;
  recipientEmails?: InputMaybe<OrderBy>;
  resendEmailId?: InputMaybe<OrderBy>;
  scheduledFor?: InputMaybe<OrderBy>;
  sendStatus?: InputMaybe<OrderBy>;
  senderUserId?: InputMaybe<OrderBy>;
  sentAt?: InputMaybe<OrderBy>;
  subject?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "email_send_logs" */
export type EmailSendLogsMutationResponse = {
  __typename?: 'EmailSendLogsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<EmailSendLogs>;
};

/** on_conflict condition type for table "email_send_logs" */
export type EmailSendLogsOnConflict = {
  constraint: EmailSendLogsConstraint;
  updateColumns?: Array<EmailSendLogsUpdateColumn>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};

/** Ordering options when selecting data from "email_send_logs". */
export type EmailSendLogsOrderBy = {
  businessContext?: InputMaybe<OrderBy>;
  clickedAt?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  deliveredAt?: InputMaybe<OrderBy>;
  emailTemplate?: InputMaybe<EmailTemplatesOrderBy>;
  errorMessage?: InputMaybe<OrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  openedAt?: InputMaybe<OrderBy>;
  recipientEmails?: InputMaybe<OrderBy>;
  resendEmailId?: InputMaybe<OrderBy>;
  resendResponse?: InputMaybe<OrderBy>;
  scheduledFor?: InputMaybe<OrderBy>;
  sendStatus?: InputMaybe<OrderBy>;
  senderUser?: InputMaybe<UsersOrderBy>;
  senderUserId?: InputMaybe<OrderBy>;
  sentAt?: InputMaybe<OrderBy>;
  subject?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: email_send_logs */
export type EmailSendLogsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type EmailSendLogsPrependInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  resendResponse?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "email_send_logs" */
export type EmailSendLogsSelectColumn =
  /** column name */
  | 'businessContext'
  /** column name */
  | 'clickedAt'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'deliveredAt'
  /** column name */
  | 'errorMessage'
  /** column name */
  | 'htmlContent'
  /** column name */
  | 'id'
  /** column name */
  | 'openedAt'
  /** column name */
  | 'recipientEmails'
  /** column name */
  | 'resendEmailId'
  /** column name */
  | 'resendResponse'
  /** column name */
  | 'scheduledFor'
  /** column name */
  | 'sendStatus'
  /** column name */
  | 'senderUserId'
  /** column name */
  | 'sentAt'
  /** column name */
  | 'subject'
  /** column name */
  | 'templateId'
  /** column name */
  | 'textContent'
  | '%future added value';

/** input type for updating data in table "email_send_logs" */
export type EmailSendLogsSetInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  clickedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deliveredAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  openedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  recipientEmails?: InputMaybe<Array<Scalars['String']['input']>>;
  resendEmailId?: InputMaybe<Scalars['String']['input']>;
  resendResponse?: InputMaybe<Scalars['jsonb']['input']>;
  scheduledFor?: InputMaybe<Scalars['timestamptz']['input']>;
  sendStatus?: InputMaybe<Scalars['String']['input']>;
  senderUserId?: InputMaybe<Scalars['uuid']['input']>;
  sentAt?: InputMaybe<Scalars['timestamptz']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
};

/** Streaming cursor of the table "email_send_logs" */
export type EmailSendLogsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: EmailSendLogsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type EmailSendLogsStreamCursorValueInput = {
  businessContext?: InputMaybe<Scalars['jsonb']['input']>;
  clickedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deliveredAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  openedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  recipientEmails?: InputMaybe<Array<Scalars['String']['input']>>;
  resendEmailId?: InputMaybe<Scalars['String']['input']>;
  resendResponse?: InputMaybe<Scalars['jsonb']['input']>;
  scheduledFor?: InputMaybe<Scalars['timestamptz']['input']>;
  sendStatus?: InputMaybe<Scalars['String']['input']>;
  senderUserId?: InputMaybe<Scalars['uuid']['input']>;
  sentAt?: InputMaybe<Scalars['timestamptz']['input']>;
  subject?: InputMaybe<Scalars['String']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
};

/** update columns of table "email_send_logs" */
export type EmailSendLogsUpdateColumn =
  /** column name */
  | 'businessContext'
  /** column name */
  | 'clickedAt'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'deliveredAt'
  /** column name */
  | 'errorMessage'
  /** column name */
  | 'htmlContent'
  /** column name */
  | 'id'
  /** column name */
  | 'openedAt'
  /** column name */
  | 'recipientEmails'
  /** column name */
  | 'resendEmailId'
  /** column name */
  | 'resendResponse'
  /** column name */
  | 'scheduledFor'
  /** column name */
  | 'sendStatus'
  /** column name */
  | 'senderUserId'
  /** column name */
  | 'sentAt'
  /** column name */
  | 'subject'
  /** column name */
  | 'templateId'
  /** column name */
  | 'textContent'
  | '%future added value';

export type EmailSendLogsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<EmailSendLogsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<EmailSendLogsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<EmailSendLogsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<EmailSendLogsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<EmailSendLogsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<EmailSendLogsSetInput>;
  /** filter the rows which have to be updated */
  where: EmailSendLogsBoolExp;
};

/** Email templates for various business communications */
export type EmailTemplates = {
  __typename?: 'EmailTemplates';
  approvedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  approvedByUser?: Maybe<Users>;
  approvedByUserId?: Maybe<Scalars['uuid']['output']>;
  availableVariables: Scalars['jsonb']['output'];
  category: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  createdByUser: Users;
  createdByUserId: Scalars['uuid']['output'];
  description?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  emailDrafts: Array<EmailDrafts>;
  /** An aggregate relationship */
  emailDraftsAggregate: EmailDraftsAggregate;
  /** An array relationship */
  emailSendLogs: Array<EmailSendLogs>;
  /** An aggregate relationship */
  emailSendLogsAggregate: EmailSendLogsAggregate;
  htmlContent: Scalars['String']['output'];
  id: Scalars['uuid']['output'];
  isActive?: Maybe<Scalars['Boolean']['output']>;
  isSystemTemplate?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  requiresApproval?: Maybe<Scalars['Boolean']['output']>;
  subjectTemplate: Scalars['String']['output'];
  textContent?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An array relationship */
  userFavorites: Array<UserEmailTemplateFavorites>;
  /** An aggregate relationship */
  userFavoritesAggregate: UserEmailTemplateFavoritesAggregate;
};


/** Email templates for various business communications */
export type EmailTemplatesAvailableVariablesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** Email templates for various business communications */
export type EmailTemplatesEmailDraftsArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


/** Email templates for various business communications */
export type EmailTemplatesEmailDraftsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


/** Email templates for various business communications */
export type EmailTemplatesEmailSendLogsArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


/** Email templates for various business communications */
export type EmailTemplatesEmailSendLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


/** Email templates for various business communications */
export type EmailTemplatesUserFavoritesArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


/** Email templates for various business communications */
export type EmailTemplatesUserFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};

/** aggregated selection of "email_templates" */
export type EmailTemplatesAggregate = {
  __typename?: 'EmailTemplatesAggregate';
  aggregate?: Maybe<EmailTemplatesAggregateFields>;
  nodes: Array<EmailTemplates>;
};

export type EmailTemplatesAggregateBoolExp = {
  bool_and?: InputMaybe<EmailTemplatesAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<EmailTemplatesAggregateBoolExpBool_Or>;
  count?: InputMaybe<EmailTemplatesAggregateBoolExpCount>;
};

/** aggregate fields of "email_templates" */
export type EmailTemplatesAggregateFields = {
  __typename?: 'EmailTemplatesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<EmailTemplatesMaxFields>;
  min?: Maybe<EmailTemplatesMinFields>;
};


/** aggregate fields of "email_templates" */
export type EmailTemplatesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "email_templates" */
export type EmailTemplatesAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<EmailTemplatesMaxOrderBy>;
  min?: InputMaybe<EmailTemplatesMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type EmailTemplatesAppendInput = {
  availableVariables?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "email_templates" */
export type EmailTemplatesArrRelInsertInput = {
  data: Array<EmailTemplatesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<EmailTemplatesOnConflict>;
};

/** Boolean expression to filter rows from the table "email_templates". All fields are combined with a logical 'AND'. */
export type EmailTemplatesBoolExp = {
  _and?: InputMaybe<Array<EmailTemplatesBoolExp>>;
  _not?: InputMaybe<EmailTemplatesBoolExp>;
  _or?: InputMaybe<Array<EmailTemplatesBoolExp>>;
  approvedAt?: InputMaybe<TimestamptzComparisonExp>;
  approvedByUser?: InputMaybe<UsersBoolExp>;
  approvedByUserId?: InputMaybe<UuidComparisonExp>;
  availableVariables?: InputMaybe<JsonbComparisonExp>;
  category?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdByUser?: InputMaybe<UsersBoolExp>;
  createdByUserId?: InputMaybe<UuidComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  emailDrafts?: InputMaybe<EmailDraftsBoolExp>;
  emailDraftsAggregate?: InputMaybe<EmailDraftsAggregateBoolExp>;
  emailSendLogs?: InputMaybe<EmailSendLogsBoolExp>;
  emailSendLogsAggregate?: InputMaybe<EmailSendLogsAggregateBoolExp>;
  htmlContent?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  isSystemTemplate?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  requiresApproval?: InputMaybe<BooleanComparisonExp>;
  subjectTemplate?: InputMaybe<StringComparisonExp>;
  textContent?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  userFavorites?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
  userFavoritesAggregate?: InputMaybe<UserEmailTemplateFavoritesAggregateBoolExp>;
};

/** unique or primary key constraints on table "email_templates" */
export type EmailTemplatesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'email_templates_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type EmailTemplatesDeleteAtPathInput = {
  availableVariables?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type EmailTemplatesDeleteElemInput = {
  availableVariables?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type EmailTemplatesDeleteKeyInput = {
  availableVariables?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "email_templates" */
export type EmailTemplatesInsertInput = {
  approvedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  approvedByUser?: InputMaybe<UsersObjRelInsertInput>;
  approvedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  availableVariables?: InputMaybe<Scalars['jsonb']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUser?: InputMaybe<UsersObjRelInsertInput>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  emailDrafts?: InputMaybe<EmailDraftsArrRelInsertInput>;
  emailSendLogs?: InputMaybe<EmailSendLogsArrRelInsertInput>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isSystemTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  requiresApproval?: InputMaybe<Scalars['Boolean']['input']>;
  subjectTemplate?: InputMaybe<Scalars['String']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  userFavorites?: InputMaybe<UserEmailTemplateFavoritesArrRelInsertInput>;
};

/** aggregate max on columns */
export type EmailTemplatesMaxFields = {
  __typename?: 'EmailTemplatesMaxFields';
  approvedAt?: Maybe<Scalars['timestamptz']['output']>;
  approvedByUserId?: Maybe<Scalars['uuid']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  subjectTemplate?: Maybe<Scalars['String']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "email_templates" */
export type EmailTemplatesMaxOrderBy = {
  approvedAt?: InputMaybe<OrderBy>;
  approvedByUserId?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdByUserId?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  subjectTemplate?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type EmailTemplatesMinFields = {
  __typename?: 'EmailTemplatesMinFields';
  approvedAt?: Maybe<Scalars['timestamptz']['output']>;
  approvedByUserId?: Maybe<Scalars['uuid']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  subjectTemplate?: Maybe<Scalars['String']['output']>;
  textContent?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "email_templates" */
export type EmailTemplatesMinOrderBy = {
  approvedAt?: InputMaybe<OrderBy>;
  approvedByUserId?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdByUserId?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  subjectTemplate?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "email_templates" */
export type EmailTemplatesMutationResponse = {
  __typename?: 'EmailTemplatesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<EmailTemplates>;
};

/** input type for inserting object relation for remote table "email_templates" */
export type EmailTemplatesObjRelInsertInput = {
  data: EmailTemplatesInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<EmailTemplatesOnConflict>;
};

/** on_conflict condition type for table "email_templates" */
export type EmailTemplatesOnConflict = {
  constraint: EmailTemplatesConstraint;
  updateColumns?: Array<EmailTemplatesUpdateColumn>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};

/** Ordering options when selecting data from "email_templates". */
export type EmailTemplatesOrderBy = {
  approvedAt?: InputMaybe<OrderBy>;
  approvedByUser?: InputMaybe<UsersOrderBy>;
  approvedByUserId?: InputMaybe<OrderBy>;
  availableVariables?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdByUser?: InputMaybe<UsersOrderBy>;
  createdByUserId?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  emailDraftsAggregate?: InputMaybe<EmailDraftsAggregateOrderBy>;
  emailSendLogsAggregate?: InputMaybe<EmailSendLogsAggregateOrderBy>;
  htmlContent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  isSystemTemplate?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  requiresApproval?: InputMaybe<OrderBy>;
  subjectTemplate?: InputMaybe<OrderBy>;
  textContent?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userFavoritesAggregate?: InputMaybe<UserEmailTemplateFavoritesAggregateOrderBy>;
};

/** primary key columns input for table: email_templates */
export type EmailTemplatesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type EmailTemplatesPrependInput = {
  availableVariables?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "email_templates" */
export type EmailTemplatesSelectColumn =
  /** column name */
  | 'approvedAt'
  /** column name */
  | 'approvedByUserId'
  /** column name */
  | 'availableVariables'
  /** column name */
  | 'category'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdByUserId'
  /** column name */
  | 'description'
  /** column name */
  | 'htmlContent'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isSystemTemplate'
  /** column name */
  | 'name'
  /** column name */
  | 'requiresApproval'
  /** column name */
  | 'subjectTemplate'
  /** column name */
  | 'textContent'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** select "emailTemplatesAggregateBoolExpBool_andArgumentsColumns" columns of table "email_templates" */
export type EmailTemplatesSelectColumnEmailTemplatesAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isActive'
  /** column name */
  | 'isSystemTemplate'
  /** column name */
  | 'requiresApproval'
  | '%future added value';

/** select "emailTemplatesAggregateBoolExpBool_orArgumentsColumns" columns of table "email_templates" */
export type EmailTemplatesSelectColumnEmailTemplatesAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isActive'
  /** column name */
  | 'isSystemTemplate'
  /** column name */
  | 'requiresApproval'
  | '%future added value';

/** input type for updating data in table "email_templates" */
export type EmailTemplatesSetInput = {
  approvedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  approvedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  availableVariables?: InputMaybe<Scalars['jsonb']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isSystemTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  requiresApproval?: InputMaybe<Scalars['Boolean']['input']>;
  subjectTemplate?: InputMaybe<Scalars['String']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "email_templates" */
export type EmailTemplatesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: EmailTemplatesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type EmailTemplatesStreamCursorValueInput = {
  approvedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  approvedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  availableVariables?: InputMaybe<Scalars['jsonb']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  htmlContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isSystemTemplate?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  requiresApproval?: InputMaybe<Scalars['Boolean']['input']>;
  subjectTemplate?: InputMaybe<Scalars['String']['input']>;
  textContent?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "email_templates" */
export type EmailTemplatesUpdateColumn =
  /** column name */
  | 'approvedAt'
  /** column name */
  | 'approvedByUserId'
  /** column name */
  | 'availableVariables'
  /** column name */
  | 'category'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdByUserId'
  /** column name */
  | 'description'
  /** column name */
  | 'htmlContent'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isSystemTemplate'
  /** column name */
  | 'name'
  /** column name */
  | 'requiresApproval'
  /** column name */
  | 'subjectTemplate'
  /** column name */
  | 'textContent'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type EmailTemplatesUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<EmailTemplatesAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<EmailTemplatesDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<EmailTemplatesDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<EmailTemplatesDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<EmailTemplatesPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<EmailTemplatesSetInput>;
  /** filter the rows which have to be updated */
  where: EmailTemplatesBoolExp;
};

/** Boolean expression to compare columns of type "inet". All fields are combined with logical 'AND'. */
export type InetComparisonExp = {
  _eq?: InputMaybe<Scalars['inet']['input']>;
  _gt?: InputMaybe<Scalars['inet']['input']>;
  _gte?: InputMaybe<Scalars['inet']['input']>;
  _in?: InputMaybe<Array<Scalars['inet']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['inet']['input']>;
  _lte?: InputMaybe<Scalars['inet']['input']>;
  _neq?: InputMaybe<Scalars['inet']['input']>;
  _nin?: InputMaybe<Array<Scalars['inet']['input']>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type IntComparisonExp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** Boolean expression to compare columns of type "interval". All fields are combined with logical 'AND'. */
export type IntervalComparisonExp = {
  _eq?: InputMaybe<Scalars['interval']['input']>;
  _gt?: InputMaybe<Scalars['interval']['input']>;
  _gte?: InputMaybe<Scalars['interval']['input']>;
  _in?: InputMaybe<Array<Scalars['interval']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['interval']['input']>;
  _lte?: InputMaybe<Scalars['interval']['input']>;
  _neq?: InputMaybe<Scalars['interval']['input']>;
  _nin?: InputMaybe<Array<Scalars['interval']['input']>>;
};

/** Boolean expression to compare columns of type "invitation_status_enum". All fields are combined with logical 'AND'. */
export type InvitationStatusEnumComparisonExp = {
  _eq?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  _gt?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  _gte?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  _in?: InputMaybe<Array<Scalars['invitation_status_enum']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  _lte?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  _neq?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  _nin?: InputMaybe<Array<Scalars['invitation_status_enum']['input']>>;
};

export type JsonbCastExp = {
  String?: InputMaybe<StringComparisonExp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type JsonbComparisonExp = {
  _cast?: InputMaybe<JsonbCastExp>;
  /** is the column contained in the given json value */
  _containedIn?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _hasKey?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _hasKeysAll?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _hasKeysAny?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

export type LeaveResponse = {
  __typename?: 'LeaveResponse';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  leaveId?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Boolean expression to compare columns of type "leave_status_enum". All fields are combined with logical 'AND'. */
export type LeaveStatusEnumComparisonExp = {
  _eq?: InputMaybe<Scalars['leave_status_enum']['input']>;
  _gt?: InputMaybe<Scalars['leave_status_enum']['input']>;
  _gte?: InputMaybe<Scalars['leave_status_enum']['input']>;
  _in?: InputMaybe<Array<Scalars['leave_status_enum']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['leave_status_enum']['input']>;
  _lte?: InputMaybe<Scalars['leave_status_enum']['input']>;
  _neq?: InputMaybe<Scalars['leave_status_enum']['input']>;
  _nin?: InputMaybe<Array<Scalars['leave_status_enum']['input']>>;
};

/** Boolean expression to compare columns of type "name". All fields are combined with logical 'AND'. */
export type NameComparisonExp = {
  _eq?: InputMaybe<Scalars['name']['input']>;
  _gt?: InputMaybe<Scalars['name']['input']>;
  _gte?: InputMaybe<Scalars['name']['input']>;
  _in?: InputMaybe<Array<Scalars['name']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['name']['input']>;
  _lte?: InputMaybe<Scalars['name']['input']>;
  _neq?: InputMaybe<Scalars['name']['input']>;
  _nin?: InputMaybe<Array<Scalars['name']['input']>>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type NumericComparisonExp = {
  _eq?: InputMaybe<Scalars['numeric']['input']>;
  _gt?: InputMaybe<Scalars['numeric']['input']>;
  _gte?: InputMaybe<Scalars['numeric']['input']>;
  _in?: InputMaybe<Array<Scalars['numeric']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['numeric']['input']>;
  _lte?: InputMaybe<Scalars['numeric']['input']>;
  _neq?: InputMaybe<Scalars['numeric']['input']>;
  _nin?: InputMaybe<Array<Scalars['numeric']['input']>>;
};

/** column ordering options */
export type OrderBy =
  /** in ascending order, nulls last */
  | 'ASC'
  /** in ascending order, nulls first */
  | 'ASC_NULLS_FIRST'
  /** in ascending order, nulls last */
  | 'ASC_NULLS_LAST'
  /** in descending order, nulls first */
  | 'DESC'
  /** in descending order, nulls first */
  | 'DESC_NULLS_FIRST'
  /** in descending order, nulls last */
  | 'DESC_NULLS_LAST'
  | '%future added value';

/** Boolean expression to compare columns of type "payroll_cycle_type". All fields are combined with logical 'AND'. */
export type PayrollCycleTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  _gt?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  _gte?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  _in?: InputMaybe<Array<Scalars['payroll_cycle_type']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  _lte?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  _neq?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  _nin?: InputMaybe<Array<Scalars['payroll_cycle_type']['input']>>;
};

/** Boolean expression to compare columns of type "payroll_date_type". All fields are combined with logical 'AND'. */
export type PayrollDateTypeComparisonExp = {
  _eq?: InputMaybe<Scalars['payroll_date_type']['input']>;
  _gt?: InputMaybe<Scalars['payroll_date_type']['input']>;
  _gte?: InputMaybe<Scalars['payroll_date_type']['input']>;
  _in?: InputMaybe<Array<Scalars['payroll_date_type']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['payroll_date_type']['input']>;
  _lte?: InputMaybe<Scalars['payroll_date_type']['input']>;
  _neq?: InputMaybe<Scalars['payroll_date_type']['input']>;
  _nin?: InputMaybe<Array<Scalars['payroll_date_type']['input']>>;
};

/** Profitability analysis for individual payroll jobs */
export type PayrollProfitability = {
  __typename?: 'PayrollProfitability';
  billingItemsCount?: Maybe<Scalars['bigint']['output']>;
  billingStatus?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  employeeCount?: Maybe<Scalars['Int']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  payrollName?: Maybe<Scalars['String']['output']>;
  payslipCount?: Maybe<Scalars['Int']['output']>;
  revenuePerHour?: Maybe<Scalars['numeric']['output']>;
  timeEntriesCount?: Maybe<Scalars['bigint']['output']>;
  totalHours?: Maybe<Scalars['numeric']['output']>;
  totalRevenue?: Maybe<Scalars['numeric']['output']>;
};

/** aggregated selection of "payroll_profitability" */
export type PayrollProfitabilityAggregate = {
  __typename?: 'PayrollProfitabilityAggregate';
  aggregate?: Maybe<PayrollProfitabilityAggregateFields>;
  nodes: Array<PayrollProfitability>;
};

/** aggregate fields of "payroll_profitability" */
export type PayrollProfitabilityAggregateFields = {
  __typename?: 'PayrollProfitabilityAggregateFields';
  avg?: Maybe<PayrollProfitabilityAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollProfitabilityMaxFields>;
  min?: Maybe<PayrollProfitabilityMinFields>;
  stddev?: Maybe<PayrollProfitabilityStddevFields>;
  stddevPop?: Maybe<PayrollProfitabilityStddevPopFields>;
  stddevSamp?: Maybe<PayrollProfitabilityStddevSampFields>;
  sum?: Maybe<PayrollProfitabilitySumFields>;
  varPop?: Maybe<PayrollProfitabilityVarPopFields>;
  varSamp?: Maybe<PayrollProfitabilityVarSampFields>;
  variance?: Maybe<PayrollProfitabilityVarianceFields>;
};


/** aggregate fields of "payroll_profitability" */
export type PayrollProfitabilityAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollProfitabilitySelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type PayrollProfitabilityAvgFields = {
  __typename?: 'PayrollProfitabilityAvgFields';
  billingItemsCount?: Maybe<Scalars['Float']['output']>;
  employeeCount?: Maybe<Scalars['Float']['output']>;
  payslipCount?: Maybe<Scalars['Float']['output']>;
  revenuePerHour?: Maybe<Scalars['Float']['output']>;
  timeEntriesCount?: Maybe<Scalars['Float']['output']>;
  totalHours?: Maybe<Scalars['Float']['output']>;
  totalRevenue?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "payroll_profitability". All fields are combined with a logical 'AND'. */
export type PayrollProfitabilityBoolExp = {
  _and?: InputMaybe<Array<PayrollProfitabilityBoolExp>>;
  _not?: InputMaybe<PayrollProfitabilityBoolExp>;
  _or?: InputMaybe<Array<PayrollProfitabilityBoolExp>>;
  billingItemsCount?: InputMaybe<BigintComparisonExp>;
  billingStatus?: InputMaybe<StringComparisonExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  clientName?: InputMaybe<StringComparisonExp>;
  employeeCount?: InputMaybe<IntComparisonExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  payrollName?: InputMaybe<StringComparisonExp>;
  payslipCount?: InputMaybe<IntComparisonExp>;
  revenuePerHour?: InputMaybe<NumericComparisonExp>;
  timeEntriesCount?: InputMaybe<BigintComparisonExp>;
  totalHours?: InputMaybe<NumericComparisonExp>;
  totalRevenue?: InputMaybe<NumericComparisonExp>;
};

/** aggregate max on columns */
export type PayrollProfitabilityMaxFields = {
  __typename?: 'PayrollProfitabilityMaxFields';
  billingItemsCount?: Maybe<Scalars['bigint']['output']>;
  billingStatus?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  employeeCount?: Maybe<Scalars['Int']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  payrollName?: Maybe<Scalars['String']['output']>;
  payslipCount?: Maybe<Scalars['Int']['output']>;
  revenuePerHour?: Maybe<Scalars['numeric']['output']>;
  timeEntriesCount?: Maybe<Scalars['bigint']['output']>;
  totalHours?: Maybe<Scalars['numeric']['output']>;
  totalRevenue?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate min on columns */
export type PayrollProfitabilityMinFields = {
  __typename?: 'PayrollProfitabilityMinFields';
  billingItemsCount?: Maybe<Scalars['bigint']['output']>;
  billingStatus?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  employeeCount?: Maybe<Scalars['Int']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  payrollName?: Maybe<Scalars['String']['output']>;
  payslipCount?: Maybe<Scalars['Int']['output']>;
  revenuePerHour?: Maybe<Scalars['numeric']['output']>;
  timeEntriesCount?: Maybe<Scalars['bigint']['output']>;
  totalHours?: Maybe<Scalars['numeric']['output']>;
  totalRevenue?: Maybe<Scalars['numeric']['output']>;
};

/** Ordering options when selecting data from "payroll_profitability". */
export type PayrollProfitabilityOrderBy = {
  billingItemsCount?: InputMaybe<OrderBy>;
  billingStatus?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  clientName?: InputMaybe<OrderBy>;
  employeeCount?: InputMaybe<OrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  payrollName?: InputMaybe<OrderBy>;
  payslipCount?: InputMaybe<OrderBy>;
  revenuePerHour?: InputMaybe<OrderBy>;
  timeEntriesCount?: InputMaybe<OrderBy>;
  totalHours?: InputMaybe<OrderBy>;
  totalRevenue?: InputMaybe<OrderBy>;
};

/** select columns of table "payroll_profitability" */
export type PayrollProfitabilitySelectColumn =
  /** column name */
  | 'billingItemsCount'
  /** column name */
  | 'billingStatus'
  /** column name */
  | 'clientId'
  /** column name */
  | 'clientName'
  /** column name */
  | 'employeeCount'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'payrollName'
  /** column name */
  | 'payslipCount'
  /** column name */
  | 'revenuePerHour'
  /** column name */
  | 'timeEntriesCount'
  /** column name */
  | 'totalHours'
  /** column name */
  | 'totalRevenue'
  | '%future added value';

/** aggregate stddev on columns */
export type PayrollProfitabilityStddevFields = {
  __typename?: 'PayrollProfitabilityStddevFields';
  billingItemsCount?: Maybe<Scalars['Float']['output']>;
  employeeCount?: Maybe<Scalars['Float']['output']>;
  payslipCount?: Maybe<Scalars['Float']['output']>;
  revenuePerHour?: Maybe<Scalars['Float']['output']>;
  timeEntriesCount?: Maybe<Scalars['Float']['output']>;
  totalHours?: Maybe<Scalars['Float']['output']>;
  totalRevenue?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type PayrollProfitabilityStddevPopFields = {
  __typename?: 'PayrollProfitabilityStddevPopFields';
  billingItemsCount?: Maybe<Scalars['Float']['output']>;
  employeeCount?: Maybe<Scalars['Float']['output']>;
  payslipCount?: Maybe<Scalars['Float']['output']>;
  revenuePerHour?: Maybe<Scalars['Float']['output']>;
  timeEntriesCount?: Maybe<Scalars['Float']['output']>;
  totalHours?: Maybe<Scalars['Float']['output']>;
  totalRevenue?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type PayrollProfitabilityStddevSampFields = {
  __typename?: 'PayrollProfitabilityStddevSampFields';
  billingItemsCount?: Maybe<Scalars['Float']['output']>;
  employeeCount?: Maybe<Scalars['Float']['output']>;
  payslipCount?: Maybe<Scalars['Float']['output']>;
  revenuePerHour?: Maybe<Scalars['Float']['output']>;
  timeEntriesCount?: Maybe<Scalars['Float']['output']>;
  totalHours?: Maybe<Scalars['Float']['output']>;
  totalRevenue?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "payroll_profitability" */
export type PayrollProfitabilityStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollProfitabilityStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollProfitabilityStreamCursorValueInput = {
  billingItemsCount?: InputMaybe<Scalars['bigint']['input']>;
  billingStatus?: InputMaybe<Scalars['String']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  clientName?: InputMaybe<Scalars['String']['input']>;
  employeeCount?: InputMaybe<Scalars['Int']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  payrollName?: InputMaybe<Scalars['String']['input']>;
  payslipCount?: InputMaybe<Scalars['Int']['input']>;
  revenuePerHour?: InputMaybe<Scalars['numeric']['input']>;
  timeEntriesCount?: InputMaybe<Scalars['bigint']['input']>;
  totalHours?: InputMaybe<Scalars['numeric']['input']>;
  totalRevenue?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate sum on columns */
export type PayrollProfitabilitySumFields = {
  __typename?: 'PayrollProfitabilitySumFields';
  billingItemsCount?: Maybe<Scalars['bigint']['output']>;
  employeeCount?: Maybe<Scalars['Int']['output']>;
  payslipCount?: Maybe<Scalars['Int']['output']>;
  revenuePerHour?: Maybe<Scalars['numeric']['output']>;
  timeEntriesCount?: Maybe<Scalars['bigint']['output']>;
  totalHours?: Maybe<Scalars['numeric']['output']>;
  totalRevenue?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate varPop on columns */
export type PayrollProfitabilityVarPopFields = {
  __typename?: 'PayrollProfitabilityVarPopFields';
  billingItemsCount?: Maybe<Scalars['Float']['output']>;
  employeeCount?: Maybe<Scalars['Float']['output']>;
  payslipCount?: Maybe<Scalars['Float']['output']>;
  revenuePerHour?: Maybe<Scalars['Float']['output']>;
  timeEntriesCount?: Maybe<Scalars['Float']['output']>;
  totalHours?: Maybe<Scalars['Float']['output']>;
  totalRevenue?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type PayrollProfitabilityVarSampFields = {
  __typename?: 'PayrollProfitabilityVarSampFields';
  billingItemsCount?: Maybe<Scalars['Float']['output']>;
  employeeCount?: Maybe<Scalars['Float']['output']>;
  payslipCount?: Maybe<Scalars['Float']['output']>;
  revenuePerHour?: Maybe<Scalars['Float']['output']>;
  timeEntriesCount?: Maybe<Scalars['Float']['output']>;
  totalHours?: Maybe<Scalars['Float']['output']>;
  totalRevenue?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type PayrollProfitabilityVarianceFields = {
  __typename?: 'PayrollProfitabilityVarianceFields';
  billingItemsCount?: Maybe<Scalars['Float']['output']>;
  employeeCount?: Maybe<Scalars['Float']['output']>;
  payslipCount?: Maybe<Scalars['Float']['output']>;
  revenuePerHour?: Maybe<Scalars['Float']['output']>;
  timeEntriesCount?: Maybe<Scalars['Float']['output']>;
  totalHours?: Maybe<Scalars['Float']['output']>;
  totalRevenue?: Maybe<Scalars['Float']['output']>;
};

export type PayrollResponse = {
  __typename?: 'PayrollResponse';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Boolean expression to compare columns of type "payroll_status". All fields are combined with logical 'AND'. */
export type PayrollStatusComparisonExp = {
  _eq?: InputMaybe<Scalars['payroll_status']['input']>;
  _gt?: InputMaybe<Scalars['payroll_status']['input']>;
  _gte?: InputMaybe<Scalars['payroll_status']['input']>;
  _in?: InputMaybe<Array<Scalars['payroll_status']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['payroll_status']['input']>;
  _lte?: InputMaybe<Scalars['payroll_status']['input']>;
  _neq?: InputMaybe<Scalars['payroll_status']['input']>;
  _nin?: InputMaybe<Array<Scalars['payroll_status']['input']>>;
};

/** Boolean expression to compare columns of type "permission_action". All fields are combined with logical 'AND'. */
export type PermissionActionComparisonExp = {
  _eq?: InputMaybe<Scalars['permission_action']['input']>;
  _gt?: InputMaybe<Scalars['permission_action']['input']>;
  _gte?: InputMaybe<Scalars['permission_action']['input']>;
  _in?: InputMaybe<Array<Scalars['permission_action']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['permission_action']['input']>;
  _lte?: InputMaybe<Scalars['permission_action']['input']>;
  _neq?: InputMaybe<Scalars['permission_action']['input']>;
  _nin?: InputMaybe<Array<Scalars['permission_action']['input']>>;
};

/** columns and relationships of "position_admin_defaults" */
export type PositionAdminDefaults = {
  __typename?: 'PositionAdminDefaults';
  defaultAdminPercentage: Scalars['numeric']['output'];
  description?: Maybe<Scalars['String']['output']>;
  position: Scalars['user_position']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedBy?: Maybe<Scalars['uuid']['output']>;
};

/** aggregated selection of "position_admin_defaults" */
export type PositionAdminDefaultsAggregate = {
  __typename?: 'PositionAdminDefaultsAggregate';
  aggregate?: Maybe<PositionAdminDefaultsAggregateFields>;
  nodes: Array<PositionAdminDefaults>;
};

/** aggregate fields of "position_admin_defaults" */
export type PositionAdminDefaultsAggregateFields = {
  __typename?: 'PositionAdminDefaultsAggregateFields';
  avg?: Maybe<PositionAdminDefaultsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PositionAdminDefaultsMaxFields>;
  min?: Maybe<PositionAdminDefaultsMinFields>;
  stddev?: Maybe<PositionAdminDefaultsStddevFields>;
  stddevPop?: Maybe<PositionAdminDefaultsStddevPopFields>;
  stddevSamp?: Maybe<PositionAdminDefaultsStddevSampFields>;
  sum?: Maybe<PositionAdminDefaultsSumFields>;
  varPop?: Maybe<PositionAdminDefaultsVarPopFields>;
  varSamp?: Maybe<PositionAdminDefaultsVarSampFields>;
  variance?: Maybe<PositionAdminDefaultsVarianceFields>;
};


/** aggregate fields of "position_admin_defaults" */
export type PositionAdminDefaultsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PositionAdminDefaultsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type PositionAdminDefaultsAvgFields = {
  __typename?: 'PositionAdminDefaultsAvgFields';
  defaultAdminPercentage?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "position_admin_defaults". All fields are combined with a logical 'AND'. */
export type PositionAdminDefaultsBoolExp = {
  _and?: InputMaybe<Array<PositionAdminDefaultsBoolExp>>;
  _not?: InputMaybe<PositionAdminDefaultsBoolExp>;
  _or?: InputMaybe<Array<PositionAdminDefaultsBoolExp>>;
  defaultAdminPercentage?: InputMaybe<NumericComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  position?: InputMaybe<UserPositionComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  updatedBy?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "position_admin_defaults" */
export type PositionAdminDefaultsConstraint =
  /** unique or primary key constraint on columns "position" */
  | 'position_admin_defaults_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "position_admin_defaults" */
export type PositionAdminDefaultsIncInput = {
  defaultAdminPercentage?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "position_admin_defaults" */
export type PositionAdminDefaultsInsertInput = {
  defaultAdminPercentage?: InputMaybe<Scalars['numeric']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['user_position']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedBy?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type PositionAdminDefaultsMaxFields = {
  __typename?: 'PositionAdminDefaultsMaxFields';
  defaultAdminPercentage?: Maybe<Scalars['numeric']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedBy?: Maybe<Scalars['uuid']['output']>;
};

/** aggregate min on columns */
export type PositionAdminDefaultsMinFields = {
  __typename?: 'PositionAdminDefaultsMinFields';
  defaultAdminPercentage?: Maybe<Scalars['numeric']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedBy?: Maybe<Scalars['uuid']['output']>;
};

/** response of any mutation on the table "position_admin_defaults" */
export type PositionAdminDefaultsMutationResponse = {
  __typename?: 'PositionAdminDefaultsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PositionAdminDefaults>;
};

/** on_conflict condition type for table "position_admin_defaults" */
export type PositionAdminDefaultsOnConflict = {
  constraint: PositionAdminDefaultsConstraint;
  updateColumns?: Array<PositionAdminDefaultsUpdateColumn>;
  where?: InputMaybe<PositionAdminDefaultsBoolExp>;
};

/** Ordering options when selecting data from "position_admin_defaults". */
export type PositionAdminDefaultsOrderBy = {
  defaultAdminPercentage?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  position?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  updatedBy?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: position_admin_defaults */
export type PositionAdminDefaultsPkColumnsInput = {
  position: Scalars['user_position']['input'];
};

/** select columns of table "position_admin_defaults" */
export type PositionAdminDefaultsSelectColumn =
  /** column name */
  | 'defaultAdminPercentage'
  /** column name */
  | 'description'
  /** column name */
  | 'position'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'updatedBy'
  | '%future added value';

/** input type for updating data in table "position_admin_defaults" */
export type PositionAdminDefaultsSetInput = {
  defaultAdminPercentage?: InputMaybe<Scalars['numeric']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['user_position']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedBy?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate stddev on columns */
export type PositionAdminDefaultsStddevFields = {
  __typename?: 'PositionAdminDefaultsStddevFields';
  defaultAdminPercentage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type PositionAdminDefaultsStddevPopFields = {
  __typename?: 'PositionAdminDefaultsStddevPopFields';
  defaultAdminPercentage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type PositionAdminDefaultsStddevSampFields = {
  __typename?: 'PositionAdminDefaultsStddevSampFields';
  defaultAdminPercentage?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "position_admin_defaults" */
export type PositionAdminDefaultsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PositionAdminDefaultsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PositionAdminDefaultsStreamCursorValueInput = {
  defaultAdminPercentage?: InputMaybe<Scalars['numeric']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['user_position']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedBy?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate sum on columns */
export type PositionAdminDefaultsSumFields = {
  __typename?: 'PositionAdminDefaultsSumFields';
  defaultAdminPercentage?: Maybe<Scalars['numeric']['output']>;
};

/** update columns of table "position_admin_defaults" */
export type PositionAdminDefaultsUpdateColumn =
  /** column name */
  | 'defaultAdminPercentage'
  /** column name */
  | 'description'
  /** column name */
  | 'position'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'updatedBy'
  | '%future added value';

export type PositionAdminDefaultsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<PositionAdminDefaultsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PositionAdminDefaultsSetInput>;
  /** filter the rows which have to be updated */
  where: PositionAdminDefaultsBoolExp;
};

/** aggregate varPop on columns */
export type PositionAdminDefaultsVarPopFields = {
  __typename?: 'PositionAdminDefaultsVarPopFields';
  defaultAdminPercentage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type PositionAdminDefaultsVarSampFields = {
  __typename?: 'PositionAdminDefaultsVarSampFields';
  defaultAdminPercentage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type PositionAdminDefaultsVarianceFields = {
  __typename?: 'PositionAdminDefaultsVarianceFields';
  defaultAdminPercentage?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "rate_limits" */
export type RateLimits = {
  __typename?: 'RateLimits';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['uuid']['output'];
  limitExceededCount: Scalars['Int']['output'];
  requestCount: Scalars['Int']['output'];
  serviceId: Scalars['String']['output'];
  windowDurationMinutes: Scalars['Int']['output'];
  windowStart: Scalars['timestamptz']['output'];
};

/** aggregated selection of "rate_limits" */
export type RateLimitsAggregate = {
  __typename?: 'RateLimitsAggregate';
  aggregate?: Maybe<RateLimitsAggregateFields>;
  nodes: Array<RateLimits>;
};

/** aggregate fields of "rate_limits" */
export type RateLimitsAggregateFields = {
  __typename?: 'RateLimitsAggregateFields';
  avg?: Maybe<RateLimitsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<RateLimitsMaxFields>;
  min?: Maybe<RateLimitsMinFields>;
  stddev?: Maybe<RateLimitsStddevFields>;
  stddevPop?: Maybe<RateLimitsStddevPopFields>;
  stddevSamp?: Maybe<RateLimitsStddevSampFields>;
  sum?: Maybe<RateLimitsSumFields>;
  varPop?: Maybe<RateLimitsVarPopFields>;
  varSamp?: Maybe<RateLimitsVarSampFields>;
  variance?: Maybe<RateLimitsVarianceFields>;
};


/** aggregate fields of "rate_limits" */
export type RateLimitsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<RateLimitsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type RateLimitsAvgFields = {
  __typename?: 'RateLimitsAvgFields';
  limitExceededCount?: Maybe<Scalars['Float']['output']>;
  requestCount?: Maybe<Scalars['Float']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "rate_limits". All fields are combined with a logical 'AND'. */
export type RateLimitsBoolExp = {
  _and?: InputMaybe<Array<RateLimitsBoolExp>>;
  _not?: InputMaybe<RateLimitsBoolExp>;
  _or?: InputMaybe<Array<RateLimitsBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  limitExceededCount?: InputMaybe<IntComparisonExp>;
  requestCount?: InputMaybe<IntComparisonExp>;
  serviceId?: InputMaybe<StringComparisonExp>;
  windowDurationMinutes?: InputMaybe<IntComparisonExp>;
  windowStart?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "rate_limits" */
export type RateLimitsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'rate_limits_pkey'
  /** unique or primary key constraint on columns "window_start", "service_id" */
  | 'rate_limits_service_id_window_start_key'
  | '%future added value';

/** input type for incrementing numeric columns in table "rate_limits" */
export type RateLimitsIncInput = {
  limitExceededCount?: InputMaybe<Scalars['Int']['input']>;
  requestCount?: InputMaybe<Scalars['Int']['input']>;
  windowDurationMinutes?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "rate_limits" */
export type RateLimitsInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  limitExceededCount?: InputMaybe<Scalars['Int']['input']>;
  requestCount?: InputMaybe<Scalars['Int']['input']>;
  serviceId?: InputMaybe<Scalars['String']['input']>;
  windowDurationMinutes?: InputMaybe<Scalars['Int']['input']>;
  windowStart?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type RateLimitsMaxFields = {
  __typename?: 'RateLimitsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  limitExceededCount?: Maybe<Scalars['Int']['output']>;
  requestCount?: Maybe<Scalars['Int']['output']>;
  serviceId?: Maybe<Scalars['String']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Int']['output']>;
  windowStart?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type RateLimitsMinFields = {
  __typename?: 'RateLimitsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  limitExceededCount?: Maybe<Scalars['Int']['output']>;
  requestCount?: Maybe<Scalars['Int']['output']>;
  serviceId?: Maybe<Scalars['String']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Int']['output']>;
  windowStart?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "rate_limits" */
export type RateLimitsMutationResponse = {
  __typename?: 'RateLimitsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<RateLimits>;
};

/** on_conflict condition type for table "rate_limits" */
export type RateLimitsOnConflict = {
  constraint: RateLimitsConstraint;
  updateColumns?: Array<RateLimitsUpdateColumn>;
  where?: InputMaybe<RateLimitsBoolExp>;
};

/** Ordering options when selecting data from "rate_limits". */
export type RateLimitsOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  limitExceededCount?: InputMaybe<OrderBy>;
  requestCount?: InputMaybe<OrderBy>;
  serviceId?: InputMaybe<OrderBy>;
  windowDurationMinutes?: InputMaybe<OrderBy>;
  windowStart?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: rate_limits */
export type RateLimitsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "rate_limits" */
export type RateLimitsSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'limitExceededCount'
  /** column name */
  | 'requestCount'
  /** column name */
  | 'serviceId'
  /** column name */
  | 'windowDurationMinutes'
  /** column name */
  | 'windowStart'
  | '%future added value';

/** input type for updating data in table "rate_limits" */
export type RateLimitsSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  limitExceededCount?: InputMaybe<Scalars['Int']['input']>;
  requestCount?: InputMaybe<Scalars['Int']['input']>;
  serviceId?: InputMaybe<Scalars['String']['input']>;
  windowDurationMinutes?: InputMaybe<Scalars['Int']['input']>;
  windowStart?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type RateLimitsStddevFields = {
  __typename?: 'RateLimitsStddevFields';
  limitExceededCount?: Maybe<Scalars['Float']['output']>;
  requestCount?: Maybe<Scalars['Float']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type RateLimitsStddevPopFields = {
  __typename?: 'RateLimitsStddevPopFields';
  limitExceededCount?: Maybe<Scalars['Float']['output']>;
  requestCount?: Maybe<Scalars['Float']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type RateLimitsStddevSampFields = {
  __typename?: 'RateLimitsStddevSampFields';
  limitExceededCount?: Maybe<Scalars['Float']['output']>;
  requestCount?: Maybe<Scalars['Float']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "rate_limits" */
export type RateLimitsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: RateLimitsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type RateLimitsStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  limitExceededCount?: InputMaybe<Scalars['Int']['input']>;
  requestCount?: InputMaybe<Scalars['Int']['input']>;
  serviceId?: InputMaybe<Scalars['String']['input']>;
  windowDurationMinutes?: InputMaybe<Scalars['Int']['input']>;
  windowStart?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type RateLimitsSumFields = {
  __typename?: 'RateLimitsSumFields';
  limitExceededCount?: Maybe<Scalars['Int']['output']>;
  requestCount?: Maybe<Scalars['Int']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "rate_limits" */
export type RateLimitsUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'limitExceededCount'
  /** column name */
  | 'requestCount'
  /** column name */
  | 'serviceId'
  /** column name */
  | 'windowDurationMinutes'
  /** column name */
  | 'windowStart'
  | '%future added value';

export type RateLimitsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<RateLimitsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<RateLimitsSetInput>;
  /** filter the rows which have to be updated */
  where: RateLimitsBoolExp;
};

/** aggregate varPop on columns */
export type RateLimitsVarPopFields = {
  __typename?: 'RateLimitsVarPopFields';
  limitExceededCount?: Maybe<Scalars['Float']['output']>;
  requestCount?: Maybe<Scalars['Float']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type RateLimitsVarSampFields = {
  __typename?: 'RateLimitsVarSampFields';
  limitExceededCount?: Maybe<Scalars['Float']['output']>;
  requestCount?: Maybe<Scalars['Float']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type RateLimitsVarianceFields = {
  __typename?: 'RateLimitsVarianceFields';
  limitExceededCount?: Maybe<Scalars['Float']['output']>;
  requestCount?: Maybe<Scalars['Float']['output']>;
  windowDurationMinutes?: Maybe<Scalars['Float']['output']>;
};

export type ScheduleResponse = {
  __typename?: 'ScheduleResponse';
  dates?: Maybe<Array<Scalars['String']['output']>>;
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  scheduleId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** columns and relationships of "security_alerts" */
export type SecurityAlerts = {
  __typename?: 'SecurityAlerts';
  alertType: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description: Scalars['String']['output'];
  id: Scalars['uuid']['output'];
  ipAddress?: Maybe<Scalars['inet']['output']>;
  isResolved?: Maybe<Scalars['Boolean']['output']>;
  metadata?: Maybe<Scalars['jsonb']['output']>;
  resolutionNotes?: Maybe<Scalars['String']['output']>;
  resolvedAt?: Maybe<Scalars['timestamptz']['output']>;
  resolvedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  resolvedByUser?: Maybe<Users>;
  severity?: Maybe<Scalars['String']['output']>;
  title: Scalars['String']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};


/** columns and relationships of "security_alerts" */
export type SecurityAlertsMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "security_alerts" */
export type SecurityAlertsAggregate = {
  __typename?: 'SecurityAlertsAggregate';
  aggregate?: Maybe<SecurityAlertsAggregateFields>;
  nodes: Array<SecurityAlerts>;
};

/** aggregate fields of "security_alerts" */
export type SecurityAlertsAggregateFields = {
  __typename?: 'SecurityAlertsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<SecurityAlertsMaxFields>;
  min?: Maybe<SecurityAlertsMinFields>;
};


/** aggregate fields of "security_alerts" */
export type SecurityAlertsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SecurityAlertsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SecurityAlertsAppendInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Boolean expression to filter rows from the table "security_alerts". All fields are combined with a logical 'AND'. */
export type SecurityAlertsBoolExp = {
  _and?: InputMaybe<Array<SecurityAlertsBoolExp>>;
  _not?: InputMaybe<SecurityAlertsBoolExp>;
  _or?: InputMaybe<Array<SecurityAlertsBoolExp>>;
  alertType?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  ipAddress?: InputMaybe<InetComparisonExp>;
  isResolved?: InputMaybe<BooleanComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  resolutionNotes?: InputMaybe<StringComparisonExp>;
  resolvedAt?: InputMaybe<TimestamptzComparisonExp>;
  resolvedBy?: InputMaybe<UuidComparisonExp>;
  resolvedByUser?: InputMaybe<UsersBoolExp>;
  severity?: InputMaybe<StringComparisonExp>;
  title?: InputMaybe<StringComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  userAgent?: InputMaybe<StringComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "security_alerts" */
export type SecurityAlertsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'security_alerts_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SecurityAlertsDeleteAtPathInput = {
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SecurityAlertsDeleteElemInput = {
  metadata?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SecurityAlertsDeleteKeyInput = {
  metadata?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "security_alerts" */
export type SecurityAlertsInsertInput = {
  alertType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  isResolved?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  resolutionNotes?: InputMaybe<Scalars['String']['input']>;
  resolvedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  resolvedBy?: InputMaybe<Scalars['uuid']['input']>;
  resolvedByUser?: InputMaybe<UsersObjRelInsertInput>;
  severity?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type SecurityAlertsMaxFields = {
  __typename?: 'SecurityAlertsMaxFields';
  alertType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  resolutionNotes?: Maybe<Scalars['String']['output']>;
  resolvedAt?: Maybe<Scalars['timestamptz']['output']>;
  resolvedBy?: Maybe<Scalars['uuid']['output']>;
  severity?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregate min on columns */
export type SecurityAlertsMinFields = {
  __typename?: 'SecurityAlertsMinFields';
  alertType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  resolutionNotes?: Maybe<Scalars['String']['output']>;
  resolvedAt?: Maybe<Scalars['timestamptz']['output']>;
  resolvedBy?: Maybe<Scalars['uuid']['output']>;
  severity?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** response of any mutation on the table "security_alerts" */
export type SecurityAlertsMutationResponse = {
  __typename?: 'SecurityAlertsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SecurityAlerts>;
};

/** on_conflict condition type for table "security_alerts" */
export type SecurityAlertsOnConflict = {
  constraint: SecurityAlertsConstraint;
  updateColumns?: Array<SecurityAlertsUpdateColumn>;
  where?: InputMaybe<SecurityAlertsBoolExp>;
};

/** Ordering options when selecting data from "security_alerts". */
export type SecurityAlertsOrderBy = {
  alertType?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ipAddress?: InputMaybe<OrderBy>;
  isResolved?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  resolutionNotes?: InputMaybe<OrderBy>;
  resolvedAt?: InputMaybe<OrderBy>;
  resolvedBy?: InputMaybe<OrderBy>;
  resolvedByUser?: InputMaybe<UsersOrderBy>;
  severity?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  userAgent?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: security_alerts */
export type SecurityAlertsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SecurityAlertsPrependInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "security_alerts" */
export type SecurityAlertsSelectColumn =
  /** column name */
  | 'alertType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'isResolved'
  /** column name */
  | 'metadata'
  /** column name */
  | 'resolutionNotes'
  /** column name */
  | 'resolvedAt'
  /** column name */
  | 'resolvedBy'
  /** column name */
  | 'severity'
  /** column name */
  | 'title'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "security_alerts" */
export type SecurityAlertsSetInput = {
  alertType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  isResolved?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  resolutionNotes?: InputMaybe<Scalars['String']['input']>;
  resolvedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  resolvedBy?: InputMaybe<Scalars['uuid']['input']>;
  severity?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "security_alerts" */
export type SecurityAlertsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: SecurityAlertsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type SecurityAlertsStreamCursorValueInput = {
  alertType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  isResolved?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  resolutionNotes?: InputMaybe<Scalars['String']['input']>;
  resolvedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  resolvedBy?: InputMaybe<Scalars['uuid']['input']>;
  severity?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "security_alerts" */
export type SecurityAlertsUpdateColumn =
  /** column name */
  | 'alertType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'isResolved'
  /** column name */
  | 'metadata'
  /** column name */
  | 'resolutionNotes'
  /** column name */
  | 'resolvedAt'
  /** column name */
  | 'resolvedBy'
  /** column name */
  | 'severity'
  /** column name */
  | 'title'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userId'
  | '%future added value';

export type SecurityAlertsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<SecurityAlertsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<SecurityAlertsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<SecurityAlertsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<SecurityAlertsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<SecurityAlertsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SecurityAlertsSetInput>;
  /** filter the rows which have to be updated */
  where: SecurityAlertsBoolExp;
};

/** columns and relationships of "security_settings" */
export type SecuritySettings = {
  __typename?: 'SecuritySettings';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['uuid']['output'];
  isSystemWide?: Maybe<Scalars['Boolean']['output']>;
  settingKey: Scalars['String']['output'];
  settingValue: Scalars['jsonb']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  user?: Maybe<Users>;
  userId?: Maybe<Scalars['uuid']['output']>;
};


/** columns and relationships of "security_settings" */
export type SecuritySettingsSettingValueArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "security_settings" */
export type SecuritySettingsAggregate = {
  __typename?: 'SecuritySettingsAggregate';
  aggregate?: Maybe<SecuritySettingsAggregateFields>;
  nodes: Array<SecuritySettings>;
};

export type SecuritySettingsAggregateBoolExp = {
  bool_and?: InputMaybe<SecuritySettingsAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<SecuritySettingsAggregateBoolExpBool_Or>;
  count?: InputMaybe<SecuritySettingsAggregateBoolExpCount>;
};

/** aggregate fields of "security_settings" */
export type SecuritySettingsAggregateFields = {
  __typename?: 'SecuritySettingsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<SecuritySettingsMaxFields>;
  min?: Maybe<SecuritySettingsMinFields>;
};


/** aggregate fields of "security_settings" */
export type SecuritySettingsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "security_settings" */
export type SecuritySettingsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<SecuritySettingsMaxOrderBy>;
  min?: InputMaybe<SecuritySettingsMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SecuritySettingsAppendInput = {
  settingValue?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "security_settings" */
export type SecuritySettingsArrRelInsertInput = {
  data: Array<SecuritySettingsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<SecuritySettingsOnConflict>;
};

/** Boolean expression to filter rows from the table "security_settings". All fields are combined with a logical 'AND'. */
export type SecuritySettingsBoolExp = {
  _and?: InputMaybe<Array<SecuritySettingsBoolExp>>;
  _not?: InputMaybe<SecuritySettingsBoolExp>;
  _or?: InputMaybe<Array<SecuritySettingsBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isSystemWide?: InputMaybe<BooleanComparisonExp>;
  settingKey?: InputMaybe<StringComparisonExp>;
  settingValue?: InputMaybe<JsonbComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  updatedBy?: InputMaybe<UuidComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "security_settings" */
export type SecuritySettingsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'security_settings_pkey'
  /** unique or primary key constraint on columns "user_id", "setting_key" */
  | 'security_settings_user_id_setting_key_key'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SecuritySettingsDeleteAtPathInput = {
  settingValue?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SecuritySettingsDeleteElemInput = {
  settingValue?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SecuritySettingsDeleteKeyInput = {
  settingValue?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "security_settings" */
export type SecuritySettingsInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isSystemWide?: InputMaybe<Scalars['Boolean']['input']>;
  settingKey?: InputMaybe<Scalars['String']['input']>;
  settingValue?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedBy?: InputMaybe<Scalars['uuid']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type SecuritySettingsMaxFields = {
  __typename?: 'SecuritySettingsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  settingKey?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedBy?: Maybe<Scalars['uuid']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "security_settings" */
export type SecuritySettingsMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  settingKey?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  updatedBy?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type SecuritySettingsMinFields = {
  __typename?: 'SecuritySettingsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  settingKey?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedBy?: Maybe<Scalars['uuid']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "security_settings" */
export type SecuritySettingsMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  settingKey?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  updatedBy?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "security_settings" */
export type SecuritySettingsMutationResponse = {
  __typename?: 'SecuritySettingsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SecuritySettings>;
};

/** on_conflict condition type for table "security_settings" */
export type SecuritySettingsOnConflict = {
  constraint: SecuritySettingsConstraint;
  updateColumns?: Array<SecuritySettingsUpdateColumn>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};

/** Ordering options when selecting data from "security_settings". */
export type SecuritySettingsOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isSystemWide?: InputMaybe<OrderBy>;
  settingKey?: InputMaybe<OrderBy>;
  settingValue?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  updatedBy?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: security_settings */
export type SecuritySettingsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SecuritySettingsPrependInput = {
  settingValue?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "security_settings" */
export type SecuritySettingsSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isSystemWide'
  /** column name */
  | 'settingKey'
  /** column name */
  | 'settingValue'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'updatedBy'
  /** column name */
  | 'userId'
  | '%future added value';

/** select "securitySettingsAggregateBoolExpBool_andArgumentsColumns" columns of table "security_settings" */
export type SecuritySettingsSelectColumnSecuritySettingsAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isSystemWide'
  | '%future added value';

/** select "securitySettingsAggregateBoolExpBool_orArgumentsColumns" columns of table "security_settings" */
export type SecuritySettingsSelectColumnSecuritySettingsAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isSystemWide'
  | '%future added value';

/** input type for updating data in table "security_settings" */
export type SecuritySettingsSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isSystemWide?: InputMaybe<Scalars['Boolean']['input']>;
  settingKey?: InputMaybe<Scalars['String']['input']>;
  settingValue?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedBy?: InputMaybe<Scalars['uuid']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "security_settings" */
export type SecuritySettingsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: SecuritySettingsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type SecuritySettingsStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isSystemWide?: InputMaybe<Scalars['Boolean']['input']>;
  settingKey?: InputMaybe<Scalars['String']['input']>;
  settingValue?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedBy?: InputMaybe<Scalars['uuid']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "security_settings" */
export type SecuritySettingsUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isSystemWide'
  /** column name */
  | 'settingKey'
  /** column name */
  | 'settingValue'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'updatedBy'
  /** column name */
  | 'userId'
  | '%future added value';

export type SecuritySettingsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<SecuritySettingsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<SecuritySettingsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<SecuritySettingsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<SecuritySettingsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<SecuritySettingsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SecuritySettingsSetInput>;
  /** filter the rows which have to be updated */
  where: SecuritySettingsBoolExp;
};

/** columns and relationships of "staff_billing_performance" */
export type StaffBillingPerformance = {
  __typename?: 'StaffBillingPerformance';
  averageProfitMargin?: Maybe<Scalars['numeric']['output']>;
  staffName?: Maybe<Scalars['String']['output']>;
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  totalActualRevenue?: Maybe<Scalars['numeric']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  totalHoursLogged?: Maybe<Scalars['numeric']['output']>;
  totalPayrolls?: Maybe<Scalars['bigint']['output']>;
};

/** aggregated selection of "staff_billing_performance" */
export type StaffBillingPerformanceAggregate = {
  __typename?: 'StaffBillingPerformanceAggregate';
  aggregate?: Maybe<StaffBillingPerformanceAggregateFields>;
  nodes: Array<StaffBillingPerformance>;
};

/** aggregate fields of "staff_billing_performance" */
export type StaffBillingPerformanceAggregateFields = {
  __typename?: 'StaffBillingPerformanceAggregateFields';
  avg?: Maybe<StaffBillingPerformanceAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<StaffBillingPerformanceMaxFields>;
  min?: Maybe<StaffBillingPerformanceMinFields>;
  stddev?: Maybe<StaffBillingPerformanceStddevFields>;
  stddevPop?: Maybe<StaffBillingPerformanceStddevPopFields>;
  stddevSamp?: Maybe<StaffBillingPerformanceStddevSampFields>;
  sum?: Maybe<StaffBillingPerformanceSumFields>;
  varPop?: Maybe<StaffBillingPerformanceVarPopFields>;
  varSamp?: Maybe<StaffBillingPerformanceVarSampFields>;
  variance?: Maybe<StaffBillingPerformanceVarianceFields>;
};


/** aggregate fields of "staff_billing_performance" */
export type StaffBillingPerformanceAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<StaffBillingPerformanceSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type StaffBillingPerformanceAvgFields = {
  __typename?: 'StaffBillingPerformanceAvgFields';
  averageProfitMargin?: Maybe<Scalars['Float']['output']>;
  totalActualRevenue?: Maybe<Scalars['Float']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['Float']['output']>;
  totalHoursLogged?: Maybe<Scalars['Float']['output']>;
  totalPayrolls?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "staff_billing_performance". All fields are combined with a logical 'AND'. */
export type StaffBillingPerformanceBoolExp = {
  _and?: InputMaybe<Array<StaffBillingPerformanceBoolExp>>;
  _not?: InputMaybe<StaffBillingPerformanceBoolExp>;
  _or?: InputMaybe<Array<StaffBillingPerformanceBoolExp>>;
  averageProfitMargin?: InputMaybe<NumericComparisonExp>;
  staffName?: InputMaybe<StringComparisonExp>;
  staffUserId?: InputMaybe<UuidComparisonExp>;
  totalActualRevenue?: InputMaybe<NumericComparisonExp>;
  totalEstimatedRevenue?: InputMaybe<NumericComparisonExp>;
  totalHoursLogged?: InputMaybe<NumericComparisonExp>;
  totalPayrolls?: InputMaybe<BigintComparisonExp>;
};

/** aggregate max on columns */
export type StaffBillingPerformanceMaxFields = {
  __typename?: 'StaffBillingPerformanceMaxFields';
  averageProfitMargin?: Maybe<Scalars['numeric']['output']>;
  staffName?: Maybe<Scalars['String']['output']>;
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  totalActualRevenue?: Maybe<Scalars['numeric']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  totalHoursLogged?: Maybe<Scalars['numeric']['output']>;
  totalPayrolls?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type StaffBillingPerformanceMinFields = {
  __typename?: 'StaffBillingPerformanceMinFields';
  averageProfitMargin?: Maybe<Scalars['numeric']['output']>;
  staffName?: Maybe<Scalars['String']['output']>;
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  totalActualRevenue?: Maybe<Scalars['numeric']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  totalHoursLogged?: Maybe<Scalars['numeric']['output']>;
  totalPayrolls?: Maybe<Scalars['bigint']['output']>;
};

/** Ordering options when selecting data from "staff_billing_performance". */
export type StaffBillingPerformanceOrderBy = {
  averageProfitMargin?: InputMaybe<OrderBy>;
  staffName?: InputMaybe<OrderBy>;
  staffUserId?: InputMaybe<OrderBy>;
  totalActualRevenue?: InputMaybe<OrderBy>;
  totalEstimatedRevenue?: InputMaybe<OrderBy>;
  totalHoursLogged?: InputMaybe<OrderBy>;
  totalPayrolls?: InputMaybe<OrderBy>;
};

/** select columns of table "staff_billing_performance" */
export type StaffBillingPerformanceSelectColumn =
  /** column name */
  | 'averageProfitMargin'
  /** column name */
  | 'staffName'
  /** column name */
  | 'staffUserId'
  /** column name */
  | 'totalActualRevenue'
  /** column name */
  | 'totalEstimatedRevenue'
  /** column name */
  | 'totalHoursLogged'
  /** column name */
  | 'totalPayrolls'
  | '%future added value';

/** aggregate stddev on columns */
export type StaffBillingPerformanceStddevFields = {
  __typename?: 'StaffBillingPerformanceStddevFields';
  averageProfitMargin?: Maybe<Scalars['Float']['output']>;
  totalActualRevenue?: Maybe<Scalars['Float']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['Float']['output']>;
  totalHoursLogged?: Maybe<Scalars['Float']['output']>;
  totalPayrolls?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type StaffBillingPerformanceStddevPopFields = {
  __typename?: 'StaffBillingPerformanceStddevPopFields';
  averageProfitMargin?: Maybe<Scalars['Float']['output']>;
  totalActualRevenue?: Maybe<Scalars['Float']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['Float']['output']>;
  totalHoursLogged?: Maybe<Scalars['Float']['output']>;
  totalPayrolls?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type StaffBillingPerformanceStddevSampFields = {
  __typename?: 'StaffBillingPerformanceStddevSampFields';
  averageProfitMargin?: Maybe<Scalars['Float']['output']>;
  totalActualRevenue?: Maybe<Scalars['Float']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['Float']['output']>;
  totalHoursLogged?: Maybe<Scalars['Float']['output']>;
  totalPayrolls?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "staff_billing_performance" */
export type StaffBillingPerformanceStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: StaffBillingPerformanceStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type StaffBillingPerformanceStreamCursorValueInput = {
  averageProfitMargin?: InputMaybe<Scalars['numeric']['input']>;
  staffName?: InputMaybe<Scalars['String']['input']>;
  staffUserId?: InputMaybe<Scalars['uuid']['input']>;
  totalActualRevenue?: InputMaybe<Scalars['numeric']['input']>;
  totalEstimatedRevenue?: InputMaybe<Scalars['numeric']['input']>;
  totalHoursLogged?: InputMaybe<Scalars['numeric']['input']>;
  totalPayrolls?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type StaffBillingPerformanceSumFields = {
  __typename?: 'StaffBillingPerformanceSumFields';
  averageProfitMargin?: Maybe<Scalars['numeric']['output']>;
  totalActualRevenue?: Maybe<Scalars['numeric']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  totalHoursLogged?: Maybe<Scalars['numeric']['output']>;
  totalPayrolls?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate varPop on columns */
export type StaffBillingPerformanceVarPopFields = {
  __typename?: 'StaffBillingPerformanceVarPopFields';
  averageProfitMargin?: Maybe<Scalars['Float']['output']>;
  totalActualRevenue?: Maybe<Scalars['Float']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['Float']['output']>;
  totalHoursLogged?: Maybe<Scalars['Float']['output']>;
  totalPayrolls?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type StaffBillingPerformanceVarSampFields = {
  __typename?: 'StaffBillingPerformanceVarSampFields';
  averageProfitMargin?: Maybe<Scalars['Float']['output']>;
  totalActualRevenue?: Maybe<Scalars['Float']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['Float']['output']>;
  totalHoursLogged?: Maybe<Scalars['Float']['output']>;
  totalPayrolls?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type StaffBillingPerformanceVarianceFields = {
  __typename?: 'StaffBillingPerformanceVarianceFields';
  averageProfitMargin?: Maybe<Scalars['Float']['output']>;
  totalActualRevenue?: Maybe<Scalars['Float']['output']>;
  totalEstimatedRevenue?: Maybe<Scalars['Float']['output']>;
  totalHoursLogged?: Maybe<Scalars['Float']['output']>;
  totalPayrolls?: Maybe<Scalars['Float']['output']>;
};

export type StaffResponse = {
  __typename?: 'StaffResponse';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
  userId?: Maybe<Scalars['String']['output']>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type StringArrayComparisonExp = {
  /** is the array contained in the given array value */
  _containedIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the array contain the given value */
  _contains?: InputMaybe<Array<Scalars['String']['input']>>;
  _eq?: InputMaybe<Array<Scalars['String']['input']>>;
  _gt?: InputMaybe<Array<Scalars['String']['input']>>;
  _gte?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Array<Scalars['String']['input']>>;
  _lte?: InputMaybe<Array<Scalars['String']['input']>>;
  _neq?: InputMaybe<Array<Scalars['String']['input']>>;
  _nin?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type StringComparisonExp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "system_configuration" */
export type SystemConfiguration = {
  __typename?: 'SystemConfiguration';
  configKey: Scalars['String']['output'];
  configType: Scalars['String']['output'];
  configValue: Scalars['jsonb']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['uuid']['output'];
  isActive: Scalars['Boolean']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "system_configuration" */
export type SystemConfigurationConfigValueArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "system_configuration" */
export type SystemConfigurationAggregate = {
  __typename?: 'SystemConfigurationAggregate';
  aggregate?: Maybe<SystemConfigurationAggregateFields>;
  nodes: Array<SystemConfiguration>;
};

/** aggregate fields of "system_configuration" */
export type SystemConfigurationAggregateFields = {
  __typename?: 'SystemConfigurationAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<SystemConfigurationMaxFields>;
  min?: Maybe<SystemConfigurationMinFields>;
};


/** aggregate fields of "system_configuration" */
export type SystemConfigurationAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SystemConfigurationSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SystemConfigurationAppendInput = {
  configValue?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Boolean expression to filter rows from the table "system_configuration". All fields are combined with a logical 'AND'. */
export type SystemConfigurationBoolExp = {
  _and?: InputMaybe<Array<SystemConfigurationBoolExp>>;
  _not?: InputMaybe<SystemConfigurationBoolExp>;
  _or?: InputMaybe<Array<SystemConfigurationBoolExp>>;
  configKey?: InputMaybe<StringComparisonExp>;
  configType?: InputMaybe<StringComparisonExp>;
  configValue?: InputMaybe<JsonbComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "system_configuration" */
export type SystemConfigurationConstraint =
  /** unique or primary key constraint on columns "config_key" */
  | 'system_configuration_config_key_key'
  /** unique or primary key constraint on columns "id" */
  | 'system_configuration_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SystemConfigurationDeleteAtPathInput = {
  configValue?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SystemConfigurationDeleteElemInput = {
  configValue?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SystemConfigurationDeleteKeyInput = {
  configValue?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "system_configuration" */
export type SystemConfigurationInsertInput = {
  configKey?: InputMaybe<Scalars['String']['input']>;
  configType?: InputMaybe<Scalars['String']['input']>;
  configValue?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SystemConfigurationMaxFields = {
  __typename?: 'SystemConfigurationMaxFields';
  configKey?: Maybe<Scalars['String']['output']>;
  configType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type SystemConfigurationMinFields = {
  __typename?: 'SystemConfigurationMinFields';
  configKey?: Maybe<Scalars['String']['output']>;
  configType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "system_configuration" */
export type SystemConfigurationMutationResponse = {
  __typename?: 'SystemConfigurationMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SystemConfiguration>;
};

/** on_conflict condition type for table "system_configuration" */
export type SystemConfigurationOnConflict = {
  constraint: SystemConfigurationConstraint;
  updateColumns?: Array<SystemConfigurationUpdateColumn>;
  where?: InputMaybe<SystemConfigurationBoolExp>;
};

/** Ordering options when selecting data from "system_configuration". */
export type SystemConfigurationOrderBy = {
  configKey?: InputMaybe<OrderBy>;
  configType?: InputMaybe<OrderBy>;
  configValue?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: system_configuration */
export type SystemConfigurationPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SystemConfigurationPrependInput = {
  configValue?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "system_configuration" */
export type SystemConfigurationSelectColumn =
  /** column name */
  | 'configKey'
  /** column name */
  | 'configType'
  /** column name */
  | 'configValue'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "system_configuration" */
export type SystemConfigurationSetInput = {
  configKey?: InputMaybe<Scalars['String']['input']>;
  configType?: InputMaybe<Scalars['String']['input']>;
  configValue?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "system_configuration" */
export type SystemConfigurationStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: SystemConfigurationStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type SystemConfigurationStreamCursorValueInput = {
  configKey?: InputMaybe<Scalars['String']['input']>;
  configType?: InputMaybe<Scalars['String']['input']>;
  configValue?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "system_configuration" */
export type SystemConfigurationUpdateColumn =
  /** column name */
  | 'configKey'
  /** column name */
  | 'configType'
  /** column name */
  | 'configValue'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type SystemConfigurationUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<SystemConfigurationAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<SystemConfigurationDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<SystemConfigurationDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<SystemConfigurationDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<SystemConfigurationPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SystemConfigurationSetInput>;
  /** filter the rows which have to be updated */
  where: SystemConfigurationBoolExp;
};

/** columns and relationships of "system_health" */
export type SystemHealth = {
  __typename?: 'SystemHealth';
  activeUsers?: Maybe<Scalars['Int']['output']>;
  alerts?: Maybe<Scalars['jsonb']['output']>;
  apiResponseTime?: Maybe<Scalars['Int']['output']>;
  cpuUsage?: Maybe<Scalars['numeric']['output']>;
  databaseResponseTime?: Maybe<Scalars['Int']['output']>;
  diskUsage?: Maybe<Scalars['numeric']['output']>;
  errorRate?: Maybe<Scalars['numeric']['output']>;
  id: Scalars['uuid']['output'];
  memoryUsage?: Maybe<Scalars['numeric']['output']>;
  metadata?: Maybe<Scalars['jsonb']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "system_health" */
export type SystemHealthAlertsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "system_health" */
export type SystemHealthMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "system_health" */
export type SystemHealthAggregate = {
  __typename?: 'SystemHealthAggregate';
  aggregate?: Maybe<SystemHealthAggregateFields>;
  nodes: Array<SystemHealth>;
};

/** aggregate fields of "system_health" */
export type SystemHealthAggregateFields = {
  __typename?: 'SystemHealthAggregateFields';
  avg?: Maybe<SystemHealthAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SystemHealthMaxFields>;
  min?: Maybe<SystemHealthMinFields>;
  stddev?: Maybe<SystemHealthStddevFields>;
  stddevPop?: Maybe<SystemHealthStddevPopFields>;
  stddevSamp?: Maybe<SystemHealthStddevSampFields>;
  sum?: Maybe<SystemHealthSumFields>;
  varPop?: Maybe<SystemHealthVarPopFields>;
  varSamp?: Maybe<SystemHealthVarSampFields>;
  variance?: Maybe<SystemHealthVarianceFields>;
};


/** aggregate fields of "system_health" */
export type SystemHealthAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SystemHealthSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SystemHealthAppendInput = {
  alerts?: InputMaybe<Scalars['jsonb']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type SystemHealthAvgFields = {
  __typename?: 'SystemHealthAvgFields';
  activeUsers?: Maybe<Scalars['Float']['output']>;
  apiResponseTime?: Maybe<Scalars['Float']['output']>;
  cpuUsage?: Maybe<Scalars['Float']['output']>;
  databaseResponseTime?: Maybe<Scalars['Float']['output']>;
  diskUsage?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  memoryUsage?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "system_health". All fields are combined with a logical 'AND'. */
export type SystemHealthBoolExp = {
  _and?: InputMaybe<Array<SystemHealthBoolExp>>;
  _not?: InputMaybe<SystemHealthBoolExp>;
  _or?: InputMaybe<Array<SystemHealthBoolExp>>;
  activeUsers?: InputMaybe<IntComparisonExp>;
  alerts?: InputMaybe<JsonbComparisonExp>;
  apiResponseTime?: InputMaybe<IntComparisonExp>;
  cpuUsage?: InputMaybe<NumericComparisonExp>;
  databaseResponseTime?: InputMaybe<IntComparisonExp>;
  diskUsage?: InputMaybe<NumericComparisonExp>;
  errorRate?: InputMaybe<NumericComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  memoryUsage?: InputMaybe<NumericComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  status?: InputMaybe<StringComparisonExp>;
  timestamp?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "system_health" */
export type SystemHealthConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'system_health_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SystemHealthDeleteAtPathInput = {
  alerts?: InputMaybe<Array<Scalars['String']['input']>>;
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SystemHealthDeleteElemInput = {
  alerts?: InputMaybe<Scalars['Int']['input']>;
  metadata?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SystemHealthDeleteKeyInput = {
  alerts?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "system_health" */
export type SystemHealthIncInput = {
  activeUsers?: InputMaybe<Scalars['Int']['input']>;
  apiResponseTime?: InputMaybe<Scalars['Int']['input']>;
  cpuUsage?: InputMaybe<Scalars['numeric']['input']>;
  databaseResponseTime?: InputMaybe<Scalars['Int']['input']>;
  diskUsage?: InputMaybe<Scalars['numeric']['input']>;
  errorRate?: InputMaybe<Scalars['numeric']['input']>;
  memoryUsage?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "system_health" */
export type SystemHealthInsertInput = {
  activeUsers?: InputMaybe<Scalars['Int']['input']>;
  alerts?: InputMaybe<Scalars['jsonb']['input']>;
  apiResponseTime?: InputMaybe<Scalars['Int']['input']>;
  cpuUsage?: InputMaybe<Scalars['numeric']['input']>;
  databaseResponseTime?: InputMaybe<Scalars['Int']['input']>;
  diskUsage?: InputMaybe<Scalars['numeric']['input']>;
  errorRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  memoryUsage?: InputMaybe<Scalars['numeric']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SystemHealthMaxFields = {
  __typename?: 'SystemHealthMaxFields';
  activeUsers?: Maybe<Scalars['Int']['output']>;
  apiResponseTime?: Maybe<Scalars['Int']['output']>;
  cpuUsage?: Maybe<Scalars['numeric']['output']>;
  databaseResponseTime?: Maybe<Scalars['Int']['output']>;
  diskUsage?: Maybe<Scalars['numeric']['output']>;
  errorRate?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  memoryUsage?: Maybe<Scalars['numeric']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type SystemHealthMinFields = {
  __typename?: 'SystemHealthMinFields';
  activeUsers?: Maybe<Scalars['Int']['output']>;
  apiResponseTime?: Maybe<Scalars['Int']['output']>;
  cpuUsage?: Maybe<Scalars['numeric']['output']>;
  databaseResponseTime?: Maybe<Scalars['Int']['output']>;
  diskUsage?: Maybe<Scalars['numeric']['output']>;
  errorRate?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  memoryUsage?: Maybe<Scalars['numeric']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "system_health" */
export type SystemHealthMutationResponse = {
  __typename?: 'SystemHealthMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SystemHealth>;
};

/** on_conflict condition type for table "system_health" */
export type SystemHealthOnConflict = {
  constraint: SystemHealthConstraint;
  updateColumns?: Array<SystemHealthUpdateColumn>;
  where?: InputMaybe<SystemHealthBoolExp>;
};

/** Ordering options when selecting data from "system_health". */
export type SystemHealthOrderBy = {
  activeUsers?: InputMaybe<OrderBy>;
  alerts?: InputMaybe<OrderBy>;
  apiResponseTime?: InputMaybe<OrderBy>;
  cpuUsage?: InputMaybe<OrderBy>;
  databaseResponseTime?: InputMaybe<OrderBy>;
  diskUsage?: InputMaybe<OrderBy>;
  errorRate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  memoryUsage?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  timestamp?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: system_health */
export type SystemHealthPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SystemHealthPrependInput = {
  alerts?: InputMaybe<Scalars['jsonb']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "system_health" */
export type SystemHealthSelectColumn =
  /** column name */
  | 'activeUsers'
  /** column name */
  | 'alerts'
  /** column name */
  | 'apiResponseTime'
  /** column name */
  | 'cpuUsage'
  /** column name */
  | 'databaseResponseTime'
  /** column name */
  | 'diskUsage'
  /** column name */
  | 'errorRate'
  /** column name */
  | 'id'
  /** column name */
  | 'memoryUsage'
  /** column name */
  | 'metadata'
  /** column name */
  | 'status'
  /** column name */
  | 'timestamp'
  | '%future added value';

/** input type for updating data in table "system_health" */
export type SystemHealthSetInput = {
  activeUsers?: InputMaybe<Scalars['Int']['input']>;
  alerts?: InputMaybe<Scalars['jsonb']['input']>;
  apiResponseTime?: InputMaybe<Scalars['Int']['input']>;
  cpuUsage?: InputMaybe<Scalars['numeric']['input']>;
  databaseResponseTime?: InputMaybe<Scalars['Int']['input']>;
  diskUsage?: InputMaybe<Scalars['numeric']['input']>;
  errorRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  memoryUsage?: InputMaybe<Scalars['numeric']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type SystemHealthStddevFields = {
  __typename?: 'SystemHealthStddevFields';
  activeUsers?: Maybe<Scalars['Float']['output']>;
  apiResponseTime?: Maybe<Scalars['Float']['output']>;
  cpuUsage?: Maybe<Scalars['Float']['output']>;
  databaseResponseTime?: Maybe<Scalars['Float']['output']>;
  diskUsage?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  memoryUsage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type SystemHealthStddevPopFields = {
  __typename?: 'SystemHealthStddevPopFields';
  activeUsers?: Maybe<Scalars['Float']['output']>;
  apiResponseTime?: Maybe<Scalars['Float']['output']>;
  cpuUsage?: Maybe<Scalars['Float']['output']>;
  databaseResponseTime?: Maybe<Scalars['Float']['output']>;
  diskUsage?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  memoryUsage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type SystemHealthStddevSampFields = {
  __typename?: 'SystemHealthStddevSampFields';
  activeUsers?: Maybe<Scalars['Float']['output']>;
  apiResponseTime?: Maybe<Scalars['Float']['output']>;
  cpuUsage?: Maybe<Scalars['Float']['output']>;
  databaseResponseTime?: Maybe<Scalars['Float']['output']>;
  diskUsage?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  memoryUsage?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "system_health" */
export type SystemHealthStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: SystemHealthStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type SystemHealthStreamCursorValueInput = {
  activeUsers?: InputMaybe<Scalars['Int']['input']>;
  alerts?: InputMaybe<Scalars['jsonb']['input']>;
  apiResponseTime?: InputMaybe<Scalars['Int']['input']>;
  cpuUsage?: InputMaybe<Scalars['numeric']['input']>;
  databaseResponseTime?: InputMaybe<Scalars['Int']['input']>;
  diskUsage?: InputMaybe<Scalars['numeric']['input']>;
  errorRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  memoryUsage?: InputMaybe<Scalars['numeric']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type SystemHealthSumFields = {
  __typename?: 'SystemHealthSumFields';
  activeUsers?: Maybe<Scalars['Int']['output']>;
  apiResponseTime?: Maybe<Scalars['Int']['output']>;
  cpuUsage?: Maybe<Scalars['numeric']['output']>;
  databaseResponseTime?: Maybe<Scalars['Int']['output']>;
  diskUsage?: Maybe<Scalars['numeric']['output']>;
  errorRate?: Maybe<Scalars['numeric']['output']>;
  memoryUsage?: Maybe<Scalars['numeric']['output']>;
};

/** update columns of table "system_health" */
export type SystemHealthUpdateColumn =
  /** column name */
  | 'activeUsers'
  /** column name */
  | 'alerts'
  /** column name */
  | 'apiResponseTime'
  /** column name */
  | 'cpuUsage'
  /** column name */
  | 'databaseResponseTime'
  /** column name */
  | 'diskUsage'
  /** column name */
  | 'errorRate'
  /** column name */
  | 'id'
  /** column name */
  | 'memoryUsage'
  /** column name */
  | 'metadata'
  /** column name */
  | 'status'
  /** column name */
  | 'timestamp'
  | '%future added value';

export type SystemHealthUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<SystemHealthAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<SystemHealthDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<SystemHealthDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<SystemHealthDeleteKeyInput>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SystemHealthIncInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<SystemHealthPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SystemHealthSetInput>;
  /** filter the rows which have to be updated */
  where: SystemHealthBoolExp;
};

/** aggregate varPop on columns */
export type SystemHealthVarPopFields = {
  __typename?: 'SystemHealthVarPopFields';
  activeUsers?: Maybe<Scalars['Float']['output']>;
  apiResponseTime?: Maybe<Scalars['Float']['output']>;
  cpuUsage?: Maybe<Scalars['Float']['output']>;
  databaseResponseTime?: Maybe<Scalars['Float']['output']>;
  diskUsage?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  memoryUsage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type SystemHealthVarSampFields = {
  __typename?: 'SystemHealthVarSampFields';
  activeUsers?: Maybe<Scalars['Float']['output']>;
  apiResponseTime?: Maybe<Scalars['Float']['output']>;
  cpuUsage?: Maybe<Scalars['Float']['output']>;
  databaseResponseTime?: Maybe<Scalars['Float']['output']>;
  diskUsage?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  memoryUsage?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type SystemHealthVarianceFields = {
  __typename?: 'SystemHealthVarianceFields';
  activeUsers?: Maybe<Scalars['Float']['output']>;
  apiResponseTime?: Maybe<Scalars['Float']['output']>;
  cpuUsage?: Maybe<Scalars['Float']['output']>;
  databaseResponseTime?: Maybe<Scalars['Float']['output']>;
  diskUsage?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  memoryUsage?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "team_capacity_by_position" */
export type TeamCapacityByPosition = {
  __typename?: 'TeamCapacityByPosition';
  avgAdminPercentage?: Maybe<Scalars['numeric']['output']>;
  consultantCount?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  totalAdminHours?: Maybe<Scalars['numeric']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['numeric']['output']>;
  totalWorkHours?: Maybe<Scalars['numeric']['output']>;
};

/** aggregated selection of "team_capacity_by_position" */
export type TeamCapacityByPositionAggregate = {
  __typename?: 'TeamCapacityByPositionAggregate';
  aggregate?: Maybe<TeamCapacityByPositionAggregateFields>;
  nodes: Array<TeamCapacityByPosition>;
};

/** aggregate fields of "team_capacity_by_position" */
export type TeamCapacityByPositionAggregateFields = {
  __typename?: 'TeamCapacityByPositionAggregateFields';
  avg?: Maybe<TeamCapacityByPositionAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TeamCapacityByPositionMaxFields>;
  min?: Maybe<TeamCapacityByPositionMinFields>;
  stddev?: Maybe<TeamCapacityByPositionStddevFields>;
  stddevPop?: Maybe<TeamCapacityByPositionStddevPopFields>;
  stddevSamp?: Maybe<TeamCapacityByPositionStddevSampFields>;
  sum?: Maybe<TeamCapacityByPositionSumFields>;
  varPop?: Maybe<TeamCapacityByPositionVarPopFields>;
  varSamp?: Maybe<TeamCapacityByPositionVarSampFields>;
  variance?: Maybe<TeamCapacityByPositionVarianceFields>;
};


/** aggregate fields of "team_capacity_by_position" */
export type TeamCapacityByPositionAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TeamCapacityByPositionSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type TeamCapacityByPositionAvgFields = {
  __typename?: 'TeamCapacityByPositionAvgFields';
  avgAdminPercentage?: Maybe<Scalars['Float']['output']>;
  consultantCount?: Maybe<Scalars['Float']['output']>;
  totalAdminHours?: Maybe<Scalars['Float']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['Float']['output']>;
  totalWorkHours?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "team_capacity_by_position". All fields are combined with a logical 'AND'. */
export type TeamCapacityByPositionBoolExp = {
  _and?: InputMaybe<Array<TeamCapacityByPositionBoolExp>>;
  _not?: InputMaybe<TeamCapacityByPositionBoolExp>;
  _or?: InputMaybe<Array<TeamCapacityByPositionBoolExp>>;
  avgAdminPercentage?: InputMaybe<NumericComparisonExp>;
  consultantCount?: InputMaybe<BigintComparisonExp>;
  position?: InputMaybe<UserPositionComparisonExp>;
  totalAdminHours?: InputMaybe<NumericComparisonExp>;
  totalPayrollCapacity?: InputMaybe<NumericComparisonExp>;
  totalWorkHours?: InputMaybe<NumericComparisonExp>;
};

/** aggregate max on columns */
export type TeamCapacityByPositionMaxFields = {
  __typename?: 'TeamCapacityByPositionMaxFields';
  avgAdminPercentage?: Maybe<Scalars['numeric']['output']>;
  consultantCount?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  totalAdminHours?: Maybe<Scalars['numeric']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['numeric']['output']>;
  totalWorkHours?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate min on columns */
export type TeamCapacityByPositionMinFields = {
  __typename?: 'TeamCapacityByPositionMinFields';
  avgAdminPercentage?: Maybe<Scalars['numeric']['output']>;
  consultantCount?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['user_position']['output']>;
  totalAdminHours?: Maybe<Scalars['numeric']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['numeric']['output']>;
  totalWorkHours?: Maybe<Scalars['numeric']['output']>;
};

/** Ordering options when selecting data from "team_capacity_by_position". */
export type TeamCapacityByPositionOrderBy = {
  avgAdminPercentage?: InputMaybe<OrderBy>;
  consultantCount?: InputMaybe<OrderBy>;
  position?: InputMaybe<OrderBy>;
  totalAdminHours?: InputMaybe<OrderBy>;
  totalPayrollCapacity?: InputMaybe<OrderBy>;
  totalWorkHours?: InputMaybe<OrderBy>;
};

/** select columns of table "team_capacity_by_position" */
export type TeamCapacityByPositionSelectColumn =
  /** column name */
  | 'avgAdminPercentage'
  /** column name */
  | 'consultantCount'
  /** column name */
  | 'position'
  /** column name */
  | 'totalAdminHours'
  /** column name */
  | 'totalPayrollCapacity'
  /** column name */
  | 'totalWorkHours'
  | '%future added value';

/** aggregate stddev on columns */
export type TeamCapacityByPositionStddevFields = {
  __typename?: 'TeamCapacityByPositionStddevFields';
  avgAdminPercentage?: Maybe<Scalars['Float']['output']>;
  consultantCount?: Maybe<Scalars['Float']['output']>;
  totalAdminHours?: Maybe<Scalars['Float']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['Float']['output']>;
  totalWorkHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type TeamCapacityByPositionStddevPopFields = {
  __typename?: 'TeamCapacityByPositionStddevPopFields';
  avgAdminPercentage?: Maybe<Scalars['Float']['output']>;
  consultantCount?: Maybe<Scalars['Float']['output']>;
  totalAdminHours?: Maybe<Scalars['Float']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['Float']['output']>;
  totalWorkHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type TeamCapacityByPositionStddevSampFields = {
  __typename?: 'TeamCapacityByPositionStddevSampFields';
  avgAdminPercentage?: Maybe<Scalars['Float']['output']>;
  consultantCount?: Maybe<Scalars['Float']['output']>;
  totalAdminHours?: Maybe<Scalars['Float']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['Float']['output']>;
  totalWorkHours?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "team_capacity_by_position" */
export type TeamCapacityByPositionStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: TeamCapacityByPositionStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type TeamCapacityByPositionStreamCursorValueInput = {
  avgAdminPercentage?: InputMaybe<Scalars['numeric']['input']>;
  consultantCount?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['user_position']['input']>;
  totalAdminHours?: InputMaybe<Scalars['numeric']['input']>;
  totalPayrollCapacity?: InputMaybe<Scalars['numeric']['input']>;
  totalWorkHours?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate sum on columns */
export type TeamCapacityByPositionSumFields = {
  __typename?: 'TeamCapacityByPositionSumFields';
  avgAdminPercentage?: Maybe<Scalars['numeric']['output']>;
  consultantCount?: Maybe<Scalars['bigint']['output']>;
  totalAdminHours?: Maybe<Scalars['numeric']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['numeric']['output']>;
  totalWorkHours?: Maybe<Scalars['numeric']['output']>;
};

/** aggregate varPop on columns */
export type TeamCapacityByPositionVarPopFields = {
  __typename?: 'TeamCapacityByPositionVarPopFields';
  avgAdminPercentage?: Maybe<Scalars['Float']['output']>;
  consultantCount?: Maybe<Scalars['Float']['output']>;
  totalAdminHours?: Maybe<Scalars['Float']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['Float']['output']>;
  totalWorkHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type TeamCapacityByPositionVarSampFields = {
  __typename?: 'TeamCapacityByPositionVarSampFields';
  avgAdminPercentage?: Maybe<Scalars['Float']['output']>;
  consultantCount?: Maybe<Scalars['Float']['output']>;
  totalAdminHours?: Maybe<Scalars['Float']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['Float']['output']>;
  totalWorkHours?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type TeamCapacityByPositionVarianceFields = {
  __typename?: 'TeamCapacityByPositionVarianceFields';
  avgAdminPercentage?: Maybe<Scalars['Float']['output']>;
  consultantCount?: Maybe<Scalars['Float']['output']>;
  totalAdminHours?: Maybe<Scalars['Float']['output']>;
  totalPayrollCapacity?: Maybe<Scalars['Float']['output']>;
  totalWorkHours?: Maybe<Scalars['Float']['output']>;
};

export type TeamCapacityInput = {
  endDate: Scalars['String']['input'];
  period: Scalars['String']['input'];
  startDate: Scalars['String']['input'];
  teamIds: Array<Scalars['String']['input']>;
};

export type TeamCapacityResponse = {
  __typename?: 'TeamCapacityResponse';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
  teamMembers: Array<WorkloadMetricsResponse>;
  teamSummary: CapacitySummary;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type TimestampComparisonExp = {
  _eq?: InputMaybe<Scalars['timestamp']['input']>;
  _gt?: InputMaybe<Scalars['timestamp']['input']>;
  _gte?: InputMaybe<Scalars['timestamp']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamp']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamp']['input']>;
  _lte?: InputMaybe<Scalars['timestamp']['input']>;
  _neq?: InputMaybe<Scalars['timestamp']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']['input']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type TimestamptzComparisonExp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};

/** User favorite templates for quick access */
export type UserEmailTemplateFavorites = {
  __typename?: 'UserEmailTemplateFavorites';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  emailTemplate: EmailTemplates;
  id: Scalars['uuid']['output'];
  templateId: Scalars['uuid']['output'];
  /** An object relationship */
  user: Users;
  userId: Scalars['uuid']['output'];
};

/** aggregated selection of "user_email_template_favorites" */
export type UserEmailTemplateFavoritesAggregate = {
  __typename?: 'UserEmailTemplateFavoritesAggregate';
  aggregate?: Maybe<UserEmailTemplateFavoritesAggregateFields>;
  nodes: Array<UserEmailTemplateFavorites>;
};

export type UserEmailTemplateFavoritesAggregateBoolExp = {
  count?: InputMaybe<UserEmailTemplateFavoritesAggregateBoolExpCount>;
};

/** aggregate fields of "user_email_template_favorites" */
export type UserEmailTemplateFavoritesAggregateFields = {
  __typename?: 'UserEmailTemplateFavoritesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<UserEmailTemplateFavoritesMaxFields>;
  min?: Maybe<UserEmailTemplateFavoritesMinFields>;
};


/** aggregate fields of "user_email_template_favorites" */
export type UserEmailTemplateFavoritesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UserEmailTemplateFavoritesMaxOrderBy>;
  min?: InputMaybe<UserEmailTemplateFavoritesMinOrderBy>;
};

/** input type for inserting array relation for remote table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesArrRelInsertInput = {
  data: Array<UserEmailTemplateFavoritesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<UserEmailTemplateFavoritesOnConflict>;
};

/** Boolean expression to filter rows from the table "user_email_template_favorites". All fields are combined with a logical 'AND'. */
export type UserEmailTemplateFavoritesBoolExp = {
  _and?: InputMaybe<Array<UserEmailTemplateFavoritesBoolExp>>;
  _not?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
  _or?: InputMaybe<Array<UserEmailTemplateFavoritesBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  emailTemplate?: InputMaybe<EmailTemplatesBoolExp>;
  id?: InputMaybe<UuidComparisonExp>;
  templateId?: InputMaybe<UuidComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'user_email_template_favorites_pkey'
  /** unique or primary key constraint on columns "user_id", "template_id" */
  | 'user_email_template_favorites_user_id_template_id_key'
  | '%future added value';

/** input type for inserting data into table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  emailTemplate?: InputMaybe<EmailTemplatesObjRelInsertInput>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type UserEmailTemplateFavoritesMaxFields = {
  __typename?: 'UserEmailTemplateFavoritesMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  templateId?: Maybe<Scalars['uuid']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type UserEmailTemplateFavoritesMinFields = {
  __typename?: 'UserEmailTemplateFavoritesMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  templateId?: Maybe<Scalars['uuid']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesMutationResponse = {
  __typename?: 'UserEmailTemplateFavoritesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserEmailTemplateFavorites>;
};

/** on_conflict condition type for table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesOnConflict = {
  constraint: UserEmailTemplateFavoritesConstraint;
  updateColumns?: Array<UserEmailTemplateFavoritesUpdateColumn>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};

/** Ordering options when selecting data from "user_email_template_favorites". */
export type UserEmailTemplateFavoritesOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  emailTemplate?: InputMaybe<EmailTemplatesOrderBy>;
  id?: InputMaybe<OrderBy>;
  templateId?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: user_email_template_favorites */
export type UserEmailTemplateFavoritesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'templateId'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: UserEmailTemplateFavoritesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type UserEmailTemplateFavoritesStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  templateId?: InputMaybe<Scalars['uuid']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "user_email_template_favorites" */
export type UserEmailTemplateFavoritesUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'templateId'
  /** column name */
  | 'userId'
  | '%future added value';

export type UserEmailTemplateFavoritesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserEmailTemplateFavoritesSetInput>;
  /** filter the rows which have to be updated */
  where: UserEmailTemplateFavoritesBoolExp;
};

/** Boolean expression to compare columns of type "user_position". All fields are combined with logical 'AND'. */
export type UserPositionComparisonExp = {
  _eq?: InputMaybe<Scalars['user_position']['input']>;
  _gt?: InputMaybe<Scalars['user_position']['input']>;
  _gte?: InputMaybe<Scalars['user_position']['input']>;
  _in?: InputMaybe<Array<Scalars['user_position']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['user_position']['input']>;
  _lte?: InputMaybe<Scalars['user_position']['input']>;
  _neq?: InputMaybe<Scalars['user_position']['input']>;
  _nin?: InputMaybe<Array<Scalars['user_position']['input']>>;
};

/** Boolean expression to compare columns of type "user_role". All fields are combined with logical 'AND'. */
export type UserRoleComparisonExp = {
  _eq?: InputMaybe<Scalars['user_role']['input']>;
  _gt?: InputMaybe<Scalars['user_role']['input']>;
  _gte?: InputMaybe<Scalars['user_role']['input']>;
  _in?: InputMaybe<Array<Scalars['user_role']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['user_role']['input']>;
  _lte?: InputMaybe<Scalars['user_role']['input']>;
  _neq?: InputMaybe<Scalars['user_role']['input']>;
  _nin?: InputMaybe<Array<Scalars['user_role']['input']>>;
};

export type UserRoleResponse = {
  __typename?: 'UserRoleResponse';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  newRole?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
  userId?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "user_sessions" */
export type UserSessions = {
  __typename?: 'UserSessions';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  expiresAt: Scalars['timestamptz']['output'];
  id: Scalars['uuid']['output'];
  ipAddress?: Maybe<Scalars['inet']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  lastActivity?: Maybe<Scalars['timestamptz']['output']>;
  locationData?: Maybe<Scalars['jsonb']['output']>;
  logoutReason?: Maybe<Scalars['String']['output']>;
  sessionToken: Scalars['String']['output'];
  /** An object relationship */
  user: Users;
  userAgent?: Maybe<Scalars['String']['output']>;
  userId: Scalars['uuid']['output'];
};


/** columns and relationships of "user_sessions" */
export type UserSessionsLocationDataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "user_sessions" */
export type UserSessionsAggregate = {
  __typename?: 'UserSessionsAggregate';
  aggregate?: Maybe<UserSessionsAggregateFields>;
  nodes: Array<UserSessions>;
};

export type UserSessionsAggregateBoolExp = {
  bool_and?: InputMaybe<UserSessionsAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<UserSessionsAggregateBoolExpBool_Or>;
  count?: InputMaybe<UserSessionsAggregateBoolExpCount>;
};

/** aggregate fields of "user_sessions" */
export type UserSessionsAggregateFields = {
  __typename?: 'UserSessionsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<UserSessionsMaxFields>;
  min?: Maybe<UserSessionsMinFields>;
};


/** aggregate fields of "user_sessions" */
export type UserSessionsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UserSessionsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_sessions" */
export type UserSessionsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UserSessionsMaxOrderBy>;
  min?: InputMaybe<UserSessionsMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserSessionsAppendInput = {
  locationData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "user_sessions" */
export type UserSessionsArrRelInsertInput = {
  data: Array<UserSessionsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<UserSessionsOnConflict>;
};

/** Boolean expression to filter rows from the table "user_sessions". All fields are combined with a logical 'AND'. */
export type UserSessionsBoolExp = {
  _and?: InputMaybe<Array<UserSessionsBoolExp>>;
  _not?: InputMaybe<UserSessionsBoolExp>;
  _or?: InputMaybe<Array<UserSessionsBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  expiresAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  ipAddress?: InputMaybe<InetComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  lastActivity?: InputMaybe<TimestamptzComparisonExp>;
  locationData?: InputMaybe<JsonbComparisonExp>;
  logoutReason?: InputMaybe<StringComparisonExp>;
  sessionToken?: InputMaybe<StringComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  userAgent?: InputMaybe<StringComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "user_sessions" */
export type UserSessionsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'user_sessions_pkey'
  /** unique or primary key constraint on columns "session_token" */
  | 'user_sessions_session_token_key'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserSessionsDeleteAtPathInput = {
  locationData?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserSessionsDeleteElemInput = {
  locationData?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserSessionsDeleteKeyInput = {
  locationData?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "user_sessions" */
export type UserSessionsInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  lastActivity?: InputMaybe<Scalars['timestamptz']['input']>;
  locationData?: InputMaybe<Scalars['jsonb']['input']>;
  logoutReason?: InputMaybe<Scalars['String']['input']>;
  sessionToken?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type UserSessionsMaxFields = {
  __typename?: 'UserSessionsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  lastActivity?: Maybe<Scalars['timestamptz']['output']>;
  logoutReason?: Maybe<Scalars['String']['output']>;
  sessionToken?: Maybe<Scalars['String']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "user_sessions" */
export type UserSessionsMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastActivity?: InputMaybe<OrderBy>;
  logoutReason?: InputMaybe<OrderBy>;
  sessionToken?: InputMaybe<OrderBy>;
  userAgent?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type UserSessionsMinFields = {
  __typename?: 'UserSessionsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  lastActivity?: Maybe<Scalars['timestamptz']['output']>;
  logoutReason?: Maybe<Scalars['String']['output']>;
  sessionToken?: Maybe<Scalars['String']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "user_sessions" */
export type UserSessionsMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastActivity?: InputMaybe<OrderBy>;
  logoutReason?: InputMaybe<OrderBy>;
  sessionToken?: InputMaybe<OrderBy>;
  userAgent?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "user_sessions" */
export type UserSessionsMutationResponse = {
  __typename?: 'UserSessionsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserSessions>;
};

/** on_conflict condition type for table "user_sessions" */
export type UserSessionsOnConflict = {
  constraint: UserSessionsConstraint;
  updateColumns?: Array<UserSessionsUpdateColumn>;
  where?: InputMaybe<UserSessionsBoolExp>;
};

/** Ordering options when selecting data from "user_sessions". */
export type UserSessionsOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ipAddress?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  lastActivity?: InputMaybe<OrderBy>;
  locationData?: InputMaybe<OrderBy>;
  logoutReason?: InputMaybe<OrderBy>;
  sessionToken?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  userAgent?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: user_sessions */
export type UserSessionsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserSessionsPrependInput = {
  locationData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "user_sessions" */
export type UserSessionsSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'isActive'
  /** column name */
  | 'lastActivity'
  /** column name */
  | 'locationData'
  /** column name */
  | 'logoutReason'
  /** column name */
  | 'sessionToken'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userId'
  | '%future added value';

/** select "userSessionsAggregateBoolExpBool_andArgumentsColumns" columns of table "user_sessions" */
export type UserSessionsSelectColumnUserSessionsAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isActive'
  | '%future added value';

/** select "userSessionsAggregateBoolExpBool_orArgumentsColumns" columns of table "user_sessions" */
export type UserSessionsSelectColumnUserSessionsAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isActive'
  | '%future added value';

/** input type for updating data in table "user_sessions" */
export type UserSessionsSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  lastActivity?: InputMaybe<Scalars['timestamptz']['input']>;
  locationData?: InputMaybe<Scalars['jsonb']['input']>;
  logoutReason?: InputMaybe<Scalars['String']['input']>;
  sessionToken?: InputMaybe<Scalars['String']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "user_sessions" */
export type UserSessionsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: UserSessionsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type UserSessionsStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  lastActivity?: InputMaybe<Scalars['timestamptz']['input']>;
  locationData?: InputMaybe<Scalars['jsonb']['input']>;
  logoutReason?: InputMaybe<Scalars['String']['input']>;
  sessionToken?: InputMaybe<Scalars['String']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "user_sessions" */
export type UserSessionsUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'isActive'
  /** column name */
  | 'lastActivity'
  /** column name */
  | 'locationData'
  /** column name */
  | 'logoutReason'
  /** column name */
  | 'sessionToken'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userId'
  | '%future added value';

export type UserSessionsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<UserSessionsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<UserSessionsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<UserSessionsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<UserSessionsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<UserSessionsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserSessionsSetInput>;
  /** filter the rows which have to be updated */
  where: UserSessionsBoolExp;
};

/** Boolean expression to compare columns of type "user_status_enum". All fields are combined with logical 'AND'. */
export type UserStatusEnumComparisonExp = {
  _eq?: InputMaybe<Scalars['user_status_enum']['input']>;
  _gt?: InputMaybe<Scalars['user_status_enum']['input']>;
  _gte?: InputMaybe<Scalars['user_status_enum']['input']>;
  _in?: InputMaybe<Array<Scalars['user_status_enum']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['user_status_enum']['input']>;
  _lte?: InputMaybe<Scalars['user_status_enum']['input']>;
  _neq?: InputMaybe<Scalars['user_status_enum']['input']>;
  _nin?: InputMaybe<Array<Scalars['user_status_enum']['input']>>;
};

export type UtilizationStatsInput = {
  endDate: Scalars['String']['input'];
  period: Scalars['String']['input'];
  startDate: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

export type UtilizationStatsResponse = {
  __typename?: 'UtilizationStatsResponse';
  averageUtilization: Scalars['Float']['output'];
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  overallocatedPeriods: Scalars['Int']['output'];
  success: Scalars['Boolean']['output'];
  summary: CapacitySummary;
};

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type UuidComparisonExp = {
  _eq?: InputMaybe<Scalars['uuid']['input']>;
  _gt?: InputMaybe<Scalars['uuid']['input']>;
  _gte?: InputMaybe<Scalars['uuid']['input']>;
  _in?: InputMaybe<Array<Scalars['uuid']['input']>>;
  _isNull?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['uuid']['input']>;
  _lte?: InputMaybe<Scalars['uuid']['input']>;
  _neq?: InputMaybe<Scalars['uuid']['input']>;
  _nin?: InputMaybe<Array<Scalars['uuid']['input']>>;
};

export type WorkloadMetricsInput = {
  endDate: Scalars['String']['input'];
  period: Scalars['String']['input'];
  startDate: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

export type WorkloadMetricsResponse = {
  __typename?: 'WorkloadMetricsResponse';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  message?: Maybe<Scalars['String']['output']>;
  periods: Array<WorkloadPeriodData>;
  success: Scalars['Boolean']['output'];
  summary: CapacitySummary;
};

export type WorkloadPeriodData = {
  __typename?: 'WorkloadPeriodData';
  adminTimeHours: Scalars['Float']['output'];
  assignedHours: Scalars['Float']['output'];
  assignments: Array<AssignmentDetails>;
  date: Scalars['String']['output'];
  fullDate: Scalars['String']['output'];
  isOverallocated: Scalars['Boolean']['output'];
  overflowHours: Scalars['Float']['output'];
  payrollCapacityHours: Scalars['Float']['output'];
  period: Scalars['String']['output'];
  utilization: Scalars['Int']['output'];
  utilizationHours: Scalars['Float']['output'];
  workHours: Scalars['Float']['output'];
};

/** A union of all types that use the @key directive */
export type _Entity = PositionAdminDefaults | AdjustmentRules | AppSettings | AuditLogs | AuthEvents | BillingEventLogs | BillingInvoice | BillingItems | BillingPlans | ClientBillingAssignments | ClientExternalSystems | Clients | DataAccessLogs | ExternalSystems | FeatureFlags | Files | Holidays | LatestPayrollVersionResults | Leave | Notes | PayrollActivationResults | PayrollAssignmentAudits | PayrollAssignments | PayrollCycles | PayrollDateTypes | PayrollDates | PayrollVersionHistoryResults | PayrollVersionResults | Payrolls | PermissionAuditLogs | PermissionChanges | PermissionOverrides | Permissions | Resources | RolePermissions | Roles | SlowQueries | TimeEntries | UserInvitations | UserRoles | Users;

export type _Service = {
  __typename?: '_Service';
  /** SDL representation of schema */
  sdl: Scalars['String']['output'];
};

/** columns and relationships of "adjustment_rules" */
export type AdjustmentRules = {
  __typename?: 'adjustmentRules';
  /** Timestamp when the rule was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId: Scalars['uuid']['output'];
  /** Reference to the payroll date type this rule affects */
  dateTypeId: Scalars['uuid']['output'];
  /** Unique identifier for the adjustment rule */
  id: Scalars['uuid']['output'];
  /** An object relationship */
  relatedPayrollCycle: PayrollCycles;
  /** An object relationship */
  relatedPayrollDateType: PayrollDateTypes;
  /** Code/formula used to calculate date adjustments */
  ruleCode: Scalars['String']['output'];
  /** Human-readable description of the adjustment rule */
  ruleDescription: Scalars['String']['output'];
  /** Timestamp when the rule was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "adjustment_rules" */
export type AdjustmentRulesAggregate = {
  __typename?: 'adjustmentRulesAggregate';
  aggregate?: Maybe<AdjustmentRulesAggregateFields>;
  nodes: Array<AdjustmentRules>;
};

export type AdjustmentRulesAggregateBoolExp = {
  count?: InputMaybe<AdjustmentRulesAggregateBoolExpCount>;
};

export type AdjustmentRulesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AdjustmentRulesBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "adjustment_rules" */
export type AdjustmentRulesAggregateFields = {
  __typename?: 'adjustmentRulesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<AdjustmentRulesMaxFields>;
  min?: Maybe<AdjustmentRulesMinFields>;
};


/** aggregate fields of "adjustment_rules" */
export type AdjustmentRulesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "adjustment_rules" */
export type AdjustmentRulesAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<AdjustmentRulesMaxOrderBy>;
  min?: InputMaybe<AdjustmentRulesMinOrderBy>;
};

/** input type for inserting array relation for remote table "adjustment_rules" */
export type AdjustmentRulesArrRelInsertInput = {
  data: Array<AdjustmentRulesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<AdjustmentRulesOnConflict>;
};

/** Boolean expression to filter rows from the table "adjustment_rules". All fields are combined with a logical 'AND'. */
export type AdjustmentRulesBoolExp = {
  _and?: InputMaybe<Array<AdjustmentRulesBoolExp>>;
  _not?: InputMaybe<AdjustmentRulesBoolExp>;
  _or?: InputMaybe<Array<AdjustmentRulesBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  cycleId?: InputMaybe<UuidComparisonExp>;
  dateTypeId?: InputMaybe<UuidComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  relatedPayrollCycle?: InputMaybe<PayrollCyclesBoolExp>;
  relatedPayrollDateType?: InputMaybe<PayrollDateTypesBoolExp>;
  ruleCode?: InputMaybe<StringComparisonExp>;
  ruleDescription?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "adjustment_rules" */
export type AdjustmentRulesConstraint =
  /** unique or primary key constraint on columns "cycle_id", "date_type_id" */
  | 'adjustment_rules_cycle_id_date_type_id_key'
  /** unique or primary key constraint on columns "id" */
  | 'adjustment_rules_pkey'
  | '%future added value';

/** input type for inserting data into table "adjustment_rules" */
export type AdjustmentRulesInsertInput = {
  /** Timestamp when the rule was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll date type this rule affects */
  dateTypeId?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique identifier for the adjustment rule */
  id?: InputMaybe<Scalars['uuid']['input']>;
  relatedPayrollCycle?: InputMaybe<PayrollCyclesObjRelInsertInput>;
  relatedPayrollDateType?: InputMaybe<PayrollDateTypesObjRelInsertInput>;
  /** Code/formula used to calculate date adjustments */
  ruleCode?: InputMaybe<Scalars['String']['input']>;
  /** Human-readable description of the adjustment rule */
  ruleDescription?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the rule was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type AdjustmentRulesMaxFields = {
  __typename?: 'adjustmentRulesMaxFields';
  /** Timestamp when the rule was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId?: Maybe<Scalars['uuid']['output']>;
  /** Reference to the payroll date type this rule affects */
  dateTypeId?: Maybe<Scalars['uuid']['output']>;
  /** Unique identifier for the adjustment rule */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Code/formula used to calculate date adjustments */
  ruleCode?: Maybe<Scalars['String']['output']>;
  /** Human-readable description of the adjustment rule */
  ruleDescription?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the rule was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "adjustment_rules" */
export type AdjustmentRulesMaxOrderBy = {
  /** Timestamp when the rule was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId?: InputMaybe<OrderBy>;
  /** Reference to the payroll date type this rule affects */
  dateTypeId?: InputMaybe<OrderBy>;
  /** Unique identifier for the adjustment rule */
  id?: InputMaybe<OrderBy>;
  /** Code/formula used to calculate date adjustments */
  ruleCode?: InputMaybe<OrderBy>;
  /** Human-readable description of the adjustment rule */
  ruleDescription?: InputMaybe<OrderBy>;
  /** Timestamp when the rule was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type AdjustmentRulesMinFields = {
  __typename?: 'adjustmentRulesMinFields';
  /** Timestamp when the rule was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId?: Maybe<Scalars['uuid']['output']>;
  /** Reference to the payroll date type this rule affects */
  dateTypeId?: Maybe<Scalars['uuid']['output']>;
  /** Unique identifier for the adjustment rule */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Code/formula used to calculate date adjustments */
  ruleCode?: Maybe<Scalars['String']['output']>;
  /** Human-readable description of the adjustment rule */
  ruleDescription?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the rule was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "adjustment_rules" */
export type AdjustmentRulesMinOrderBy = {
  /** Timestamp when the rule was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId?: InputMaybe<OrderBy>;
  /** Reference to the payroll date type this rule affects */
  dateTypeId?: InputMaybe<OrderBy>;
  /** Unique identifier for the adjustment rule */
  id?: InputMaybe<OrderBy>;
  /** Code/formula used to calculate date adjustments */
  ruleCode?: InputMaybe<OrderBy>;
  /** Human-readable description of the adjustment rule */
  ruleDescription?: InputMaybe<OrderBy>;
  /** Timestamp when the rule was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "adjustment_rules" */
export type AdjustmentRulesMutationResponse = {
  __typename?: 'adjustmentRulesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AdjustmentRules>;
};

/** on_conflict condition type for table "adjustment_rules" */
export type AdjustmentRulesOnConflict = {
  constraint: AdjustmentRulesConstraint;
  updateColumns?: Array<AdjustmentRulesUpdateColumn>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};

/** Ordering options when selecting data from "adjustment_rules". */
export type AdjustmentRulesOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  cycleId?: InputMaybe<OrderBy>;
  dateTypeId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  relatedPayrollCycle?: InputMaybe<PayrollCyclesOrderBy>;
  relatedPayrollDateType?: InputMaybe<PayrollDateTypesOrderBy>;
  ruleCode?: InputMaybe<OrderBy>;
  ruleDescription?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: adjustment_rules */
export type AdjustmentRulesPkColumnsInput = {
  /** Unique identifier for the adjustment rule */
  id: Scalars['uuid']['input'];
};

/** select columns of table "adjustment_rules" */
export type AdjustmentRulesSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'cycleId'
  /** column name */
  | 'dateTypeId'
  /** column name */
  | 'id'
  /** column name */
  | 'ruleCode'
  /** column name */
  | 'ruleDescription'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "adjustment_rules" */
export type AdjustmentRulesSetInput = {
  /** Timestamp when the rule was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll date type this rule affects */
  dateTypeId?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique identifier for the adjustment rule */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Code/formula used to calculate date adjustments */
  ruleCode?: InputMaybe<Scalars['String']['input']>;
  /** Human-readable description of the adjustment rule */
  ruleDescription?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the rule was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "adjustmentRules" */
export type AdjustmentRulesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: AdjustmentRulesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type AdjustmentRulesStreamCursorValueInput = {
  /** Timestamp when the rule was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the payroll cycle this rule applies to */
  cycleId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll date type this rule affects */
  dateTypeId?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique identifier for the adjustment rule */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Code/formula used to calculate date adjustments */
  ruleCode?: InputMaybe<Scalars['String']['input']>;
  /** Human-readable description of the adjustment rule */
  ruleDescription?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the rule was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "adjustment_rules" */
export type AdjustmentRulesUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'cycleId'
  /** column name */
  | 'dateTypeId'
  /** column name */
  | 'id'
  /** column name */
  | 'ruleCode'
  /** column name */
  | 'ruleDescription'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type AdjustmentRulesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AdjustmentRulesSetInput>;
  /** filter the rows which have to be updated */
  where: AdjustmentRulesBoolExp;
};

/** columns and relationships of "app_settings" */
export type AppSettings = {
  __typename?: 'appSettings';
  /** Unique identifier for application setting */
  id: Scalars['String']['output'];
  /** JSON structure containing application permission configurations */
  permissions?: Maybe<Scalars['jsonb']['output']>;
};


/** columns and relationships of "app_settings" */
export type AppSettingsPermissionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "app_settings" */
export type AppSettingsAggregate = {
  __typename?: 'appSettingsAggregate';
  aggregate?: Maybe<AppSettingsAggregateFields>;
  nodes: Array<AppSettings>;
};

/** aggregate fields of "app_settings" */
export type AppSettingsAggregateFields = {
  __typename?: 'appSettingsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<AppSettingsMaxFields>;
  min?: Maybe<AppSettingsMinFields>;
};


/** aggregate fields of "app_settings" */
export type AppSettingsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AppSettingsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type AppSettingsAppendInput = {
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Boolean expression to filter rows from the table "app_settings". All fields are combined with a logical 'AND'. */
export type AppSettingsBoolExp = {
  _and?: InputMaybe<Array<AppSettingsBoolExp>>;
  _not?: InputMaybe<AppSettingsBoolExp>;
  _or?: InputMaybe<Array<AppSettingsBoolExp>>;
  id?: InputMaybe<StringComparisonExp>;
  permissions?: InputMaybe<JsonbComparisonExp>;
};

/** unique or primary key constraints on table "app_settings" */
export type AppSettingsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'app_settings_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type AppSettingsDeleteAtPathInput = {
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type AppSettingsDeleteElemInput = {
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type AppSettingsDeleteKeyInput = {
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "app_settings" */
export type AppSettingsInsertInput = {
  /** Unique identifier for application setting */
  id?: InputMaybe<Scalars['String']['input']>;
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate max on columns */
export type AppSettingsMaxFields = {
  __typename?: 'appSettingsMaxFields';
  /** Unique identifier for application setting */
  id?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type AppSettingsMinFields = {
  __typename?: 'appSettingsMinFields';
  /** Unique identifier for application setting */
  id?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "app_settings" */
export type AppSettingsMutationResponse = {
  __typename?: 'appSettingsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AppSettings>;
};

/** on_conflict condition type for table "app_settings" */
export type AppSettingsOnConflict = {
  constraint: AppSettingsConstraint;
  updateColumns?: Array<AppSettingsUpdateColumn>;
  where?: InputMaybe<AppSettingsBoolExp>;
};

/** Ordering options when selecting data from "app_settings". */
export type AppSettingsOrderBy = {
  id?: InputMaybe<OrderBy>;
  permissions?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: app_settings */
export type AppSettingsPkColumnsInput = {
  /** Unique identifier for application setting */
  id: Scalars['String']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type AppSettingsPrependInput = {
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "app_settings" */
export type AppSettingsSelectColumn =
  /** column name */
  | 'id'
  /** column name */
  | 'permissions'
  | '%future added value';

/** input type for updating data in table "app_settings" */
export type AppSettingsSetInput = {
  /** Unique identifier for application setting */
  id?: InputMaybe<Scalars['String']['input']>;
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Streaming cursor of the table "appSettings" */
export type AppSettingsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: AppSettingsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type AppSettingsStreamCursorValueInput = {
  /** Unique identifier for application setting */
  id?: InputMaybe<Scalars['String']['input']>;
  /** JSON structure containing application permission configurations */
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** update columns of table "app_settings" */
export type AppSettingsUpdateColumn =
  /** column name */
  | 'id'
  /** column name */
  | 'permissions'
  | '%future added value';

export type AppSettingsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<AppSettingsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<AppSettingsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<AppSettingsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<AppSettingsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<AppSettingsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AppSettingsSetInput>;
  /** filter the rows which have to be updated */
  where: AppSettingsBoolExp;
};

/** columns and relationships of "audit.audit_log" */
export type AuditLogs = {
  __typename?: 'auditLogs';
  action: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  eventTime: Scalars['timestamptz']['output'];
  id: Scalars['uuid']['output'];
  ipAddress?: Maybe<Scalars['inet']['output']>;
  metadata?: Maybe<Scalars['jsonb']['output']>;
  newValues?: Maybe<Scalars['jsonb']['output']>;
  oldValues?: Maybe<Scalars['jsonb']['output']>;
  requestId?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['String']['output']>;
  resourceType: Scalars['String']['output'];
  sessionId?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
  userRole?: Maybe<Scalars['String']['output']>;
};


/** columns and relationships of "audit.audit_log" */
export type AuditLogsMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "audit.audit_log" */
export type AuditLogsNewValuesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "audit.audit_log" */
export type AuditLogsOldValuesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "audit.audit_log" */
export type AuditLogsAggregate = {
  __typename?: 'auditLogsAggregate';
  aggregate?: Maybe<AuditLogsAggregateFields>;
  nodes: Array<AuditLogs>;
};

/** aggregate fields of "audit.audit_log" */
export type AuditLogsAggregateFields = {
  __typename?: 'auditLogsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<AuditLogsMaxFields>;
  min?: Maybe<AuditLogsMinFields>;
};


/** aggregate fields of "audit.audit_log" */
export type AuditLogsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AuditLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type AuditLogsAppendInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newValues?: InputMaybe<Scalars['jsonb']['input']>;
  oldValues?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Boolean expression to filter rows from the table "audit.audit_log". All fields are combined with a logical 'AND'. */
export type AuditLogsBoolExp = {
  _and?: InputMaybe<Array<AuditLogsBoolExp>>;
  _not?: InputMaybe<AuditLogsBoolExp>;
  _or?: InputMaybe<Array<AuditLogsBoolExp>>;
  action?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  errorMessage?: InputMaybe<StringComparisonExp>;
  eventTime?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  ipAddress?: InputMaybe<InetComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  newValues?: InputMaybe<JsonbComparisonExp>;
  oldValues?: InputMaybe<JsonbComparisonExp>;
  requestId?: InputMaybe<StringComparisonExp>;
  resourceId?: InputMaybe<StringComparisonExp>;
  resourceType?: InputMaybe<StringComparisonExp>;
  sessionId?: InputMaybe<StringComparisonExp>;
  success?: InputMaybe<BooleanComparisonExp>;
  userAgent?: InputMaybe<StringComparisonExp>;
  userEmail?: InputMaybe<StringComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
  userRole?: InputMaybe<StringComparisonExp>;
};

/** unique or primary key constraints on table "audit.audit_log" */
export type AuditLogsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'audit_log_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type AuditLogsDeleteAtPathInput = {
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
  newValues?: InputMaybe<Array<Scalars['String']['input']>>;
  oldValues?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type AuditLogsDeleteElemInput = {
  metadata?: InputMaybe<Scalars['Int']['input']>;
  newValues?: InputMaybe<Scalars['Int']['input']>;
  oldValues?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type AuditLogsDeleteKeyInput = {
  metadata?: InputMaybe<Scalars['String']['input']>;
  newValues?: InputMaybe<Scalars['String']['input']>;
  oldValues?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "audit.audit_log" */
export type AuditLogsInsertInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  eventTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newValues?: InputMaybe<Scalars['jsonb']['input']>;
  oldValues?: InputMaybe<Scalars['jsonb']['input']>;
  requestId?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['String']['input']>;
  resourceType?: InputMaybe<Scalars['String']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
  userRole?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type AuditLogsMaxFields = {
  __typename?: 'auditLogsMaxFields';
  action?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  eventTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  requestId?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['String']['output']>;
  resourceType?: Maybe<Scalars['String']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
  userRole?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type AuditLogsMinFields = {
  __typename?: 'auditLogsMinFields';
  action?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  eventTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  requestId?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['String']['output']>;
  resourceType?: Maybe<Scalars['String']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
  userRole?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "audit.audit_log" */
export type AuditLogsMutationResponse = {
  __typename?: 'auditLogsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AuditLogs>;
};

/** on_conflict condition type for table "audit.audit_log" */
export type AuditLogsOnConflict = {
  constraint: AuditLogsConstraint;
  updateColumns?: Array<AuditLogsUpdateColumn>;
  where?: InputMaybe<AuditLogsBoolExp>;
};

/** Ordering options when selecting data from "audit.audit_log". */
export type AuditLogsOrderBy = {
  action?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  errorMessage?: InputMaybe<OrderBy>;
  eventTime?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ipAddress?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  newValues?: InputMaybe<OrderBy>;
  oldValues?: InputMaybe<OrderBy>;
  requestId?: InputMaybe<OrderBy>;
  resourceId?: InputMaybe<OrderBy>;
  resourceType?: InputMaybe<OrderBy>;
  sessionId?: InputMaybe<OrderBy>;
  success?: InputMaybe<OrderBy>;
  userAgent?: InputMaybe<OrderBy>;
  userEmail?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
  userRole?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: audit.audit_log */
export type AuditLogsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type AuditLogsPrependInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newValues?: InputMaybe<Scalars['jsonb']['input']>;
  oldValues?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "audit.audit_log" */
export type AuditLogsSelectColumn =
  /** column name */
  | 'action'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'errorMessage'
  /** column name */
  | 'eventTime'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'metadata'
  /** column name */
  | 'newValues'
  /** column name */
  | 'oldValues'
  /** column name */
  | 'requestId'
  /** column name */
  | 'resourceId'
  /** column name */
  | 'resourceType'
  /** column name */
  | 'sessionId'
  /** column name */
  | 'success'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userEmail'
  /** column name */
  | 'userId'
  /** column name */
  | 'userRole'
  | '%future added value';

/** input type for updating data in table "audit.audit_log" */
export type AuditLogsSetInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  eventTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newValues?: InputMaybe<Scalars['jsonb']['input']>;
  oldValues?: InputMaybe<Scalars['jsonb']['input']>;
  requestId?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['String']['input']>;
  resourceType?: InputMaybe<Scalars['String']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
  userRole?: InputMaybe<Scalars['String']['input']>;
};

/** Streaming cursor of the table "auditLogs" */
export type AuditLogsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: AuditLogsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type AuditLogsStreamCursorValueInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorMessage?: InputMaybe<Scalars['String']['input']>;
  eventTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newValues?: InputMaybe<Scalars['jsonb']['input']>;
  oldValues?: InputMaybe<Scalars['jsonb']['input']>;
  requestId?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['String']['input']>;
  resourceType?: InputMaybe<Scalars['String']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
  userRole?: InputMaybe<Scalars['String']['input']>;
};

/** update columns of table "audit.audit_log" */
export type AuditLogsUpdateColumn =
  /** column name */
  | 'action'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'errorMessage'
  /** column name */
  | 'eventTime'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'metadata'
  /** column name */
  | 'newValues'
  /** column name */
  | 'oldValues'
  /** column name */
  | 'requestId'
  /** column name */
  | 'resourceId'
  /** column name */
  | 'resourceType'
  /** column name */
  | 'sessionId'
  /** column name */
  | 'success'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userEmail'
  /** column name */
  | 'userId'
  /** column name */
  | 'userRole'
  | '%future added value';

export type AuditLogsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<AuditLogsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<AuditLogsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<AuditLogsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<AuditLogsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<AuditLogsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AuditLogsSetInput>;
  /** filter the rows which have to be updated */
  where: AuditLogsBoolExp;
};

/** columns and relationships of "audit.auth_events" */
export type AuthEvents = {
  __typename?: 'authEvents';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventTime: Scalars['timestamptz']['output'];
  eventType: Scalars['String']['output'];
  failureReason?: Maybe<Scalars['String']['output']>;
  id: Scalars['uuid']['output'];
  ipAddress?: Maybe<Scalars['inet']['output']>;
  metadata?: Maybe<Scalars['jsonb']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};


/** columns and relationships of "audit.auth_events" */
export type AuthEventsMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "audit.auth_events" */
export type AuthEventsAggregate = {
  __typename?: 'authEventsAggregate';
  aggregate?: Maybe<AuthEventsAggregateFields>;
  nodes: Array<AuthEvents>;
};

/** aggregate fields of "audit.auth_events" */
export type AuthEventsAggregateFields = {
  __typename?: 'authEventsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<AuthEventsMaxFields>;
  min?: Maybe<AuthEventsMinFields>;
};


/** aggregate fields of "audit.auth_events" */
export type AuthEventsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<AuthEventsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type AuthEventsAppendInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Boolean expression to filter rows from the table "audit.auth_events". All fields are combined with a logical 'AND'. */
export type AuthEventsBoolExp = {
  _and?: InputMaybe<Array<AuthEventsBoolExp>>;
  _not?: InputMaybe<AuthEventsBoolExp>;
  _or?: InputMaybe<Array<AuthEventsBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  eventTime?: InputMaybe<TimestamptzComparisonExp>;
  eventType?: InputMaybe<StringComparisonExp>;
  failureReason?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  ipAddress?: InputMaybe<InetComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  success?: InputMaybe<BooleanComparisonExp>;
  userAgent?: InputMaybe<StringComparisonExp>;
  userEmail?: InputMaybe<StringComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "audit.auth_events" */
export type AuthEventsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'auth_events_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type AuthEventsDeleteAtPathInput = {
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type AuthEventsDeleteElemInput = {
  metadata?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type AuthEventsDeleteKeyInput = {
  metadata?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "audit.auth_events" */
export type AuthEventsInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventTime?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  failureReason?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type AuthEventsMaxFields = {
  __typename?: 'authEventsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventTime?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  failureReason?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregate min on columns */
export type AuthEventsMinFields = {
  __typename?: 'authEventsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventTime?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  failureReason?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  userAgent?: Maybe<Scalars['String']['output']>;
  userEmail?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** response of any mutation on the table "audit.auth_events" */
export type AuthEventsMutationResponse = {
  __typename?: 'authEventsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AuthEvents>;
};

/** on_conflict condition type for table "audit.auth_events" */
export type AuthEventsOnConflict = {
  constraint: AuthEventsConstraint;
  updateColumns?: Array<AuthEventsUpdateColumn>;
  where?: InputMaybe<AuthEventsBoolExp>;
};

/** Ordering options when selecting data from "audit.auth_events". */
export type AuthEventsOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  eventTime?: InputMaybe<OrderBy>;
  eventType?: InputMaybe<OrderBy>;
  failureReason?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ipAddress?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  success?: InputMaybe<OrderBy>;
  userAgent?: InputMaybe<OrderBy>;
  userEmail?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: audit.auth_events */
export type AuthEventsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type AuthEventsPrependInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "audit.auth_events" */
export type AuthEventsSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventTime'
  /** column name */
  | 'eventType'
  /** column name */
  | 'failureReason'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'metadata'
  /** column name */
  | 'success'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userEmail'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "audit.auth_events" */
export type AuthEventsSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventTime?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  failureReason?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "authEvents" */
export type AuthEventsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: AuthEventsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type AuthEventsStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventTime?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  failureReason?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
  userAgent?: InputMaybe<Scalars['String']['input']>;
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "audit.auth_events" */
export type AuthEventsUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventTime'
  /** column name */
  | 'eventType'
  /** column name */
  | 'failureReason'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'metadata'
  /** column name */
  | 'success'
  /** column name */
  | 'userAgent'
  /** column name */
  | 'userEmail'
  /** column name */
  | 'userId'
  | '%future added value';

export type AuthEventsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<AuthEventsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<AuthEventsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<AuthEventsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<AuthEventsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<AuthEventsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AuthEventsSetInput>;
  /** filter the rows which have to be updated */
  where: AuthEventsBoolExp;
};

/** columns and relationships of "billing_event_log" */
export type BillingEventLogs = {
  __typename?: 'billingEventLogs';
  /** An object relationship */
  billingInvoice?: Maybe<BillingInvoice>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  createdByUser?: Maybe<Users>;
  eventType: Scalars['String']['output'];
  id: Scalars['uuid']['output'];
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "billing_event_log" */
export type BillingEventLogsAggregate = {
  __typename?: 'billingEventLogsAggregate';
  aggregate?: Maybe<BillingEventLogsAggregateFields>;
  nodes: Array<BillingEventLogs>;
};

export type BillingEventLogsAggregateBoolExp = {
  count?: InputMaybe<BillingEventLogsAggregateBoolExpCount>;
};

export type BillingEventLogsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BillingEventLogsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "billing_event_log" */
export type BillingEventLogsAggregateFields = {
  __typename?: 'billingEventLogsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<BillingEventLogsMaxFields>;
  min?: Maybe<BillingEventLogsMinFields>;
};


/** aggregate fields of "billing_event_log" */
export type BillingEventLogsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "billing_event_log" */
export type BillingEventLogsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BillingEventLogsMaxOrderBy>;
  min?: InputMaybe<BillingEventLogsMinOrderBy>;
};

/** input type for inserting array relation for remote table "billing_event_log" */
export type BillingEventLogsArrRelInsertInput = {
  data: Array<BillingEventLogsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<BillingEventLogsOnConflict>;
};

/** Boolean expression to filter rows from the table "billing_event_log". All fields are combined with a logical 'AND'. */
export type BillingEventLogsBoolExp = {
  _and?: InputMaybe<Array<BillingEventLogsBoolExp>>;
  _not?: InputMaybe<BillingEventLogsBoolExp>;
  _or?: InputMaybe<Array<BillingEventLogsBoolExp>>;
  billingInvoice?: InputMaybe<BillingInvoiceBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UuidComparisonExp>;
  createdByUser?: InputMaybe<UsersBoolExp>;
  eventType?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  invoiceId?: InputMaybe<UuidComparisonExp>;
  message?: InputMaybe<StringComparisonExp>;
};

/** unique or primary key constraints on table "billing_event_log" */
export type BillingEventLogsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'billing_event_log_pkey'
  | '%future added value';

/** input type for inserting data into table "billing_event_log" */
export type BillingEventLogsInsertInput = {
  billingInvoice?: InputMaybe<BillingInvoiceObjRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<Scalars['uuid']['input']>;
  createdByUser?: InputMaybe<UsersObjRelInsertInput>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type BillingEventLogsMaxFields = {
  __typename?: 'billingEventLogsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdBy?: Maybe<Scalars['uuid']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "billing_event_log" */
export type BillingEventLogsMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<OrderBy>;
  eventType?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type BillingEventLogsMinFields = {
  __typename?: 'billingEventLogsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdBy?: Maybe<Scalars['uuid']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "billing_event_log" */
export type BillingEventLogsMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<OrderBy>;
  eventType?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "billing_event_log" */
export type BillingEventLogsMutationResponse = {
  __typename?: 'billingEventLogsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<BillingEventLogs>;
};

/** on_conflict condition type for table "billing_event_log" */
export type BillingEventLogsOnConflict = {
  constraint: BillingEventLogsConstraint;
  updateColumns?: Array<BillingEventLogsUpdateColumn>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};

/** Ordering options when selecting data from "billing_event_log". */
export type BillingEventLogsOrderBy = {
  billingInvoice?: InputMaybe<BillingInvoiceOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<OrderBy>;
  createdByUser?: InputMaybe<UsersOrderBy>;
  eventType?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: billing_event_log */
export type BillingEventLogsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "billing_event_log" */
export type BillingEventLogsSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdBy'
  /** column name */
  | 'eventType'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceId'
  /** column name */
  | 'message'
  | '%future added value';

/** input type for updating data in table "billing_event_log" */
export type BillingEventLogsSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<Scalars['uuid']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
};

/** Streaming cursor of the table "billingEventLogs" */
export type BillingEventLogsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: BillingEventLogsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type BillingEventLogsStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<Scalars['uuid']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
};

/** update columns of table "billing_event_log" */
export type BillingEventLogsUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdBy'
  /** column name */
  | 'eventType'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceId'
  /** column name */
  | 'message'
  | '%future added value';

export type BillingEventLogsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<BillingEventLogsSetInput>;
  /** filter the rows which have to be updated */
  where: BillingEventLogsBoolExp;
};

/** columns and relationships of "billing_invoice" */
export type BillingInvoice = {
  __typename?: 'billingInvoice';
  /** An array relationship */
  billingEventLogs: Array<BillingEventLogs>;
  /** An aggregate relationship */
  billingEventLogsAggregate: BillingEventLogsAggregate;
  /** An array relationship */
  billingInvoiceItems: Array<BillingInvoiceItem>;
  /** An aggregate relationship */
  billingInvoiceItemsAggregate: BillingInvoiceItemAggregate;
  /** An object relationship */
  billingPeriod?: Maybe<BillingPeriods>;
  billingPeriodEnd: Scalars['date']['output'];
  /** Reference to billing period this invoice covers */
  billingPeriodId?: Maybe<Scalars['uuid']['output']>;
  billingPeriodStart: Scalars['date']['output'];
  /** An object relationship */
  client: Clients;
  clientId: Scalars['uuid']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['date']['output']>;
  id: Scalars['uuid']['output'];
  /** Unique invoice number for client reference */
  invoiceNumber?: Maybe<Scalars['String']['output']>;
  issuedDate?: Maybe<Scalars['date']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Int']['output']>;
  status: Scalars['String']['output'];
  totalAmount: Scalars['numeric']['output'];
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "billing_invoice" */
export type BillingInvoiceBillingEventLogsArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


/** columns and relationships of "billing_invoice" */
export type BillingInvoiceBillingEventLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


/** columns and relationships of "billing_invoice" */
export type BillingInvoiceBillingInvoiceItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


/** columns and relationships of "billing_invoice" */
export type BillingInvoiceBillingInvoiceItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};

/** aggregated selection of "billing_invoice" */
export type BillingInvoiceAggregate = {
  __typename?: 'billingInvoiceAggregate';
  aggregate?: Maybe<BillingInvoiceAggregateFields>;
  nodes: Array<BillingInvoice>;
};

export type BillingInvoiceAggregateBoolExp = {
  count?: InputMaybe<BillingInvoiceAggregateBoolExpCount>;
};

export type BillingInvoiceAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BillingInvoiceBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "billing_invoice" */
export type BillingInvoiceAggregateFields = {
  __typename?: 'billingInvoiceAggregateFields';
  avg?: Maybe<BillingInvoiceAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BillingInvoiceMaxFields>;
  min?: Maybe<BillingInvoiceMinFields>;
  stddev?: Maybe<BillingInvoiceStddevFields>;
  stddevPop?: Maybe<BillingInvoiceStddevPopFields>;
  stddevSamp?: Maybe<BillingInvoiceStddevSampFields>;
  sum?: Maybe<BillingInvoiceSumFields>;
  varPop?: Maybe<BillingInvoiceVarPopFields>;
  varSamp?: Maybe<BillingInvoiceVarSampFields>;
  variance?: Maybe<BillingInvoiceVarianceFields>;
};


/** aggregate fields of "billing_invoice" */
export type BillingInvoiceAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "billing_invoice" */
export type BillingInvoiceAggregateOrderBy = {
  avg?: InputMaybe<BillingInvoiceAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BillingInvoiceMaxOrderBy>;
  min?: InputMaybe<BillingInvoiceMinOrderBy>;
  stddev?: InputMaybe<BillingInvoiceStddevOrderBy>;
  stddevPop?: InputMaybe<BillingInvoiceStddevPopOrderBy>;
  stddevSamp?: InputMaybe<BillingInvoiceStddevSampOrderBy>;
  sum?: InputMaybe<BillingInvoiceSumOrderBy>;
  varPop?: InputMaybe<BillingInvoiceVarPopOrderBy>;
  varSamp?: InputMaybe<BillingInvoiceVarSampOrderBy>;
  variance?: InputMaybe<BillingInvoiceVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "billing_invoice" */
export type BillingInvoiceArrRelInsertInput = {
  data: Array<BillingInvoiceInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<BillingInvoiceOnConflict>;
};

/** aggregate avg on columns */
export type BillingInvoiceAvgFields = {
  __typename?: 'billingInvoiceAvgFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "billing_invoice" */
export type BillingInvoiceAvgOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "billing_invoice". All fields are combined with a logical 'AND'. */
export type BillingInvoiceBoolExp = {
  _and?: InputMaybe<Array<BillingInvoiceBoolExp>>;
  _not?: InputMaybe<BillingInvoiceBoolExp>;
  _or?: InputMaybe<Array<BillingInvoiceBoolExp>>;
  billingEventLogs?: InputMaybe<BillingEventLogsBoolExp>;
  billingEventLogsAggregate?: InputMaybe<BillingEventLogsAggregateBoolExp>;
  billingInvoiceItems?: InputMaybe<BillingInvoiceItemBoolExp>;
  billingInvoiceItemsAggregate?: InputMaybe<BillingInvoiceItemAggregateBoolExp>;
  billingPeriod?: InputMaybe<BillingPeriodsBoolExp>;
  billingPeriodEnd?: InputMaybe<DateComparisonExp>;
  billingPeriodId?: InputMaybe<UuidComparisonExp>;
  billingPeriodStart?: InputMaybe<DateComparisonExp>;
  client?: InputMaybe<ClientsBoolExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  currency?: InputMaybe<StringComparisonExp>;
  dueDate?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  invoiceNumber?: InputMaybe<StringComparisonExp>;
  issuedDate?: InputMaybe<DateComparisonExp>;
  notes?: InputMaybe<StringComparisonExp>;
  payrollCount?: InputMaybe<IntComparisonExp>;
  status?: InputMaybe<StringComparisonExp>;
  totalAmount?: InputMaybe<NumericComparisonExp>;
  totalHours?: InputMaybe<NumericComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "billing_invoice" */
export type BillingInvoiceConstraint =
  /** unique or primary key constraint on columns "invoice_number" */
  | 'billing_invoice_invoice_number_key'
  /** unique or primary key constraint on columns "id" */
  | 'billing_invoice_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "billing_invoice" */
export type BillingInvoiceIncInput = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<Scalars['Int']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "billing_invoice" */
export type BillingInvoiceInsertInput = {
  billingEventLogs?: InputMaybe<BillingEventLogsArrRelInsertInput>;
  billingInvoiceItems?: InputMaybe<BillingInvoiceItemArrRelInsertInput>;
  billingPeriod?: InputMaybe<BillingPeriodsObjRelInsertInput>;
  billingPeriodEnd?: InputMaybe<Scalars['date']['input']>;
  /** Reference to billing period this invoice covers */
  billingPeriodId?: InputMaybe<Scalars['uuid']['input']>;
  billingPeriodStart?: InputMaybe<Scalars['date']['input']>;
  client?: InputMaybe<ClientsObjRelInsertInput>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  dueDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique invoice number for client reference */
  invoiceNumber?: InputMaybe<Scalars['String']['input']>;
  issuedDate?: InputMaybe<Scalars['date']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** columns and relationships of "billing_invoice_item" */
export type BillingInvoiceItem = {
  __typename?: 'billingInvoiceItem';
  /** An object relationship */
  billingInvoice: BillingInvoice;
  /** An object relationship */
  billingItem?: Maybe<BillingItems>;
  billingPeriodEnd: Scalars['date']['output'];
  billingPeriodStart: Scalars['date']['output'];
  createdAt: Scalars['timestamptz']['output'];
  descriptionOverride?: Maybe<Scalars['String']['output']>;
  hourlyRate: Scalars['numeric']['output'];
  id: Scalars['uuid']['output'];
  invoiceId: Scalars['uuid']['output'];
  itemId?: Maybe<Scalars['uuid']['output']>;
  lineItemType?: Maybe<Scalars['String']['output']>;
  netAmount?: Maybe<Scalars['numeric']['output']>;
  quantityHours: Scalars['numeric']['output'];
  taxAmount: Scalars['numeric']['output'];
  totalAmount: Scalars['numeric']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "billing_invoice_item" */
export type BillingInvoiceItemAggregate = {
  __typename?: 'billingInvoiceItemAggregate';
  aggregate?: Maybe<BillingInvoiceItemAggregateFields>;
  nodes: Array<BillingInvoiceItem>;
};

export type BillingInvoiceItemAggregateBoolExp = {
  count?: InputMaybe<BillingInvoiceItemAggregateBoolExpCount>;
};

export type BillingInvoiceItemAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BillingInvoiceItemBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "billing_invoice_item" */
export type BillingInvoiceItemAggregateFields = {
  __typename?: 'billingInvoiceItemAggregateFields';
  avg?: Maybe<BillingInvoiceItemAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BillingInvoiceItemMaxFields>;
  min?: Maybe<BillingInvoiceItemMinFields>;
  stddev?: Maybe<BillingInvoiceItemStddevFields>;
  stddevPop?: Maybe<BillingInvoiceItemStddevPopFields>;
  stddevSamp?: Maybe<BillingInvoiceItemStddevSampFields>;
  sum?: Maybe<BillingInvoiceItemSumFields>;
  varPop?: Maybe<BillingInvoiceItemVarPopFields>;
  varSamp?: Maybe<BillingInvoiceItemVarSampFields>;
  variance?: Maybe<BillingInvoiceItemVarianceFields>;
};


/** aggregate fields of "billing_invoice_item" */
export type BillingInvoiceItemAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "billing_invoice_item" */
export type BillingInvoiceItemAggregateOrderBy = {
  avg?: InputMaybe<BillingInvoiceItemAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BillingInvoiceItemMaxOrderBy>;
  min?: InputMaybe<BillingInvoiceItemMinOrderBy>;
  stddev?: InputMaybe<BillingInvoiceItemStddevOrderBy>;
  stddevPop?: InputMaybe<BillingInvoiceItemStddevPopOrderBy>;
  stddevSamp?: InputMaybe<BillingInvoiceItemStddevSampOrderBy>;
  sum?: InputMaybe<BillingInvoiceItemSumOrderBy>;
  varPop?: InputMaybe<BillingInvoiceItemVarPopOrderBy>;
  varSamp?: InputMaybe<BillingInvoiceItemVarSampOrderBy>;
  variance?: InputMaybe<BillingInvoiceItemVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "billing_invoice_item" */
export type BillingInvoiceItemArrRelInsertInput = {
  data: Array<BillingInvoiceItemInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<BillingInvoiceItemOnConflict>;
};

/** aggregate avg on columns */
export type BillingInvoiceItemAvgFields = {
  __typename?: 'billingInvoiceItemAvgFields';
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  netAmount?: Maybe<Scalars['Float']['output']>;
  quantityHours?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemAvgOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "billing_invoice_item". All fields are combined with a logical 'AND'. */
export type BillingInvoiceItemBoolExp = {
  _and?: InputMaybe<Array<BillingInvoiceItemBoolExp>>;
  _not?: InputMaybe<BillingInvoiceItemBoolExp>;
  _or?: InputMaybe<Array<BillingInvoiceItemBoolExp>>;
  billingInvoice?: InputMaybe<BillingInvoiceBoolExp>;
  billingItem?: InputMaybe<BillingItemsBoolExp>;
  billingPeriodEnd?: InputMaybe<DateComparisonExp>;
  billingPeriodStart?: InputMaybe<DateComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  descriptionOverride?: InputMaybe<StringComparisonExp>;
  hourlyRate?: InputMaybe<NumericComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  invoiceId?: InputMaybe<UuidComparisonExp>;
  itemId?: InputMaybe<UuidComparisonExp>;
  lineItemType?: InputMaybe<StringComparisonExp>;
  netAmount?: InputMaybe<NumericComparisonExp>;
  quantityHours?: InputMaybe<NumericComparisonExp>;
  taxAmount?: InputMaybe<NumericComparisonExp>;
  totalAmount?: InputMaybe<NumericComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "billing_invoice_item" */
export type BillingInvoiceItemConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'billing_invoice_item_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "billing_invoice_item" */
export type BillingInvoiceItemIncInput = {
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  quantityHours?: InputMaybe<Scalars['numeric']['input']>;
  taxAmount?: InputMaybe<Scalars['numeric']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "billing_invoice_item" */
export type BillingInvoiceItemInsertInput = {
  billingInvoice?: InputMaybe<BillingInvoiceObjRelInsertInput>;
  billingItem?: InputMaybe<BillingItemsObjRelInsertInput>;
  billingPeriodEnd?: InputMaybe<Scalars['date']['input']>;
  billingPeriodStart?: InputMaybe<Scalars['date']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  descriptionOverride?: InputMaybe<Scalars['String']['input']>;
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  itemId?: InputMaybe<Scalars['uuid']['input']>;
  lineItemType?: InputMaybe<Scalars['String']['input']>;
  quantityHours?: InputMaybe<Scalars['numeric']['input']>;
  taxAmount?: InputMaybe<Scalars['numeric']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type BillingInvoiceItemMaxFields = {
  __typename?: 'billingInvoiceItemMaxFields';
  billingPeriodEnd?: Maybe<Scalars['date']['output']>;
  billingPeriodStart?: Maybe<Scalars['date']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  descriptionOverride?: Maybe<Scalars['String']['output']>;
  hourlyRate?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  itemId?: Maybe<Scalars['uuid']['output']>;
  lineItemType?: Maybe<Scalars['String']['output']>;
  netAmount?: Maybe<Scalars['numeric']['output']>;
  quantityHours?: Maybe<Scalars['numeric']['output']>;
  taxAmount?: Maybe<Scalars['numeric']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemMaxOrderBy = {
  billingPeriodEnd?: InputMaybe<OrderBy>;
  billingPeriodStart?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  descriptionOverride?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  itemId?: InputMaybe<OrderBy>;
  lineItemType?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type BillingInvoiceItemMinFields = {
  __typename?: 'billingInvoiceItemMinFields';
  billingPeriodEnd?: Maybe<Scalars['date']['output']>;
  billingPeriodStart?: Maybe<Scalars['date']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  descriptionOverride?: Maybe<Scalars['String']['output']>;
  hourlyRate?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  itemId?: Maybe<Scalars['uuid']['output']>;
  lineItemType?: Maybe<Scalars['String']['output']>;
  netAmount?: Maybe<Scalars['numeric']['output']>;
  quantityHours?: Maybe<Scalars['numeric']['output']>;
  taxAmount?: Maybe<Scalars['numeric']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemMinOrderBy = {
  billingPeriodEnd?: InputMaybe<OrderBy>;
  billingPeriodStart?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  descriptionOverride?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  itemId?: InputMaybe<OrderBy>;
  lineItemType?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "billing_invoice_item" */
export type BillingInvoiceItemMutationResponse = {
  __typename?: 'billingInvoiceItemMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<BillingInvoiceItem>;
};

/** on_conflict condition type for table "billing_invoice_item" */
export type BillingInvoiceItemOnConflict = {
  constraint: BillingInvoiceItemConstraint;
  updateColumns?: Array<BillingInvoiceItemUpdateColumn>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};

/** Ordering options when selecting data from "billing_invoice_item". */
export type BillingInvoiceItemOrderBy = {
  billingInvoice?: InputMaybe<BillingInvoiceOrderBy>;
  billingItem?: InputMaybe<BillingItemsOrderBy>;
  billingPeriodEnd?: InputMaybe<OrderBy>;
  billingPeriodStart?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  descriptionOverride?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  itemId?: InputMaybe<OrderBy>;
  lineItemType?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: billing_invoice_item */
export type BillingInvoiceItemPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "billing_invoice_item" */
export type BillingInvoiceItemSelectColumn =
  /** column name */
  | 'billingPeriodEnd'
  /** column name */
  | 'billingPeriodStart'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'descriptionOverride'
  /** column name */
  | 'hourlyRate'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceId'
  /** column name */
  | 'itemId'
  /** column name */
  | 'lineItemType'
  /** column name */
  | 'netAmount'
  /** column name */
  | 'quantityHours'
  /** column name */
  | 'taxAmount'
  /** column name */
  | 'totalAmount'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "billing_invoice_item" */
export type BillingInvoiceItemSetInput = {
  billingPeriodEnd?: InputMaybe<Scalars['date']['input']>;
  billingPeriodStart?: InputMaybe<Scalars['date']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  descriptionOverride?: InputMaybe<Scalars['String']['input']>;
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  itemId?: InputMaybe<Scalars['uuid']['input']>;
  lineItemType?: InputMaybe<Scalars['String']['input']>;
  quantityHours?: InputMaybe<Scalars['numeric']['input']>;
  taxAmount?: InputMaybe<Scalars['numeric']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type BillingInvoiceItemStddevFields = {
  __typename?: 'billingInvoiceItemStddevFields';
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  netAmount?: Maybe<Scalars['Float']['output']>;
  quantityHours?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemStddevOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type BillingInvoiceItemStddevPopFields = {
  __typename?: 'billingInvoiceItemStddevPopFields';
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  netAmount?: Maybe<Scalars['Float']['output']>;
  quantityHours?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemStddevPopOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type BillingInvoiceItemStddevSampFields = {
  __typename?: 'billingInvoiceItemStddevSampFields';
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  netAmount?: Maybe<Scalars['Float']['output']>;
  quantityHours?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemStddevSampOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "billingInvoiceItem" */
export type BillingInvoiceItemStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: BillingInvoiceItemStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type BillingInvoiceItemStreamCursorValueInput = {
  billingPeriodEnd?: InputMaybe<Scalars['date']['input']>;
  billingPeriodStart?: InputMaybe<Scalars['date']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  descriptionOverride?: InputMaybe<Scalars['String']['input']>;
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  itemId?: InputMaybe<Scalars['uuid']['input']>;
  lineItemType?: InputMaybe<Scalars['String']['input']>;
  netAmount?: InputMaybe<Scalars['numeric']['input']>;
  quantityHours?: InputMaybe<Scalars['numeric']['input']>;
  taxAmount?: InputMaybe<Scalars['numeric']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type BillingInvoiceItemSumFields = {
  __typename?: 'billingInvoiceItemSumFields';
  hourlyRate?: Maybe<Scalars['numeric']['output']>;
  netAmount?: Maybe<Scalars['numeric']['output']>;
  quantityHours?: Maybe<Scalars['numeric']['output']>;
  taxAmount?: Maybe<Scalars['numeric']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemSumOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** update columns of table "billing_invoice_item" */
export type BillingInvoiceItemUpdateColumn =
  /** column name */
  | 'billingPeriodEnd'
  /** column name */
  | 'billingPeriodStart'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'descriptionOverride'
  /** column name */
  | 'hourlyRate'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceId'
  /** column name */
  | 'itemId'
  /** column name */
  | 'lineItemType'
  /** column name */
  | 'quantityHours'
  /** column name */
  | 'taxAmount'
  /** column name */
  | 'totalAmount'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type BillingInvoiceItemUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<BillingInvoiceItemIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<BillingInvoiceItemSetInput>;
  /** filter the rows which have to be updated */
  where: BillingInvoiceItemBoolExp;
};

/** aggregate varPop on columns */
export type BillingInvoiceItemVarPopFields = {
  __typename?: 'billingInvoiceItemVarPopFields';
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  netAmount?: Maybe<Scalars['Float']['output']>;
  quantityHours?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemVarPopOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type BillingInvoiceItemVarSampFields = {
  __typename?: 'billingInvoiceItemVarSampFields';
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  netAmount?: Maybe<Scalars['Float']['output']>;
  quantityHours?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemVarSampOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type BillingInvoiceItemVarianceFields = {
  __typename?: 'billingInvoiceItemVarianceFields';
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  netAmount?: Maybe<Scalars['Float']['output']>;
  quantityHours?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "billing_invoice_item" */
export type BillingInvoiceItemVarianceOrderBy = {
  hourlyRate?: InputMaybe<OrderBy>;
  netAmount?: InputMaybe<OrderBy>;
  quantityHours?: InputMaybe<OrderBy>;
  taxAmount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
};

/** aggregate max on columns */
export type BillingInvoiceMaxFields = {
  __typename?: 'billingInvoiceMaxFields';
  billingPeriodEnd?: Maybe<Scalars['date']['output']>;
  /** Reference to billing period this invoice covers */
  billingPeriodId?: Maybe<Scalars['uuid']['output']>;
  billingPeriodStart?: Maybe<Scalars['date']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  /** Unique invoice number for client reference */
  invoiceNumber?: Maybe<Scalars['String']['output']>;
  issuedDate?: Maybe<Scalars['date']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "billing_invoice" */
export type BillingInvoiceMaxOrderBy = {
  billingPeriodEnd?: InputMaybe<OrderBy>;
  /** Reference to billing period this invoice covers */
  billingPeriodId?: InputMaybe<OrderBy>;
  billingPeriodStart?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  currency?: InputMaybe<OrderBy>;
  dueDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  /** Unique invoice number for client reference */
  invoiceNumber?: InputMaybe<OrderBy>;
  issuedDate?: InputMaybe<OrderBy>;
  notes?: InputMaybe<OrderBy>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type BillingInvoiceMinFields = {
  __typename?: 'billingInvoiceMinFields';
  billingPeriodEnd?: Maybe<Scalars['date']['output']>;
  /** Reference to billing period this invoice covers */
  billingPeriodId?: Maybe<Scalars['uuid']['output']>;
  billingPeriodStart?: Maybe<Scalars['date']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  dueDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  /** Unique invoice number for client reference */
  invoiceNumber?: Maybe<Scalars['String']['output']>;
  issuedDate?: Maybe<Scalars['date']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "billing_invoice" */
export type BillingInvoiceMinOrderBy = {
  billingPeriodEnd?: InputMaybe<OrderBy>;
  /** Reference to billing period this invoice covers */
  billingPeriodId?: InputMaybe<OrderBy>;
  billingPeriodStart?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  currency?: InputMaybe<OrderBy>;
  dueDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  /** Unique invoice number for client reference */
  invoiceNumber?: InputMaybe<OrderBy>;
  issuedDate?: InputMaybe<OrderBy>;
  notes?: InputMaybe<OrderBy>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "billing_invoice" */
export type BillingInvoiceMutationResponse = {
  __typename?: 'billingInvoiceMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<BillingInvoice>;
};

/** input type for inserting object relation for remote table "billing_invoice" */
export type BillingInvoiceObjRelInsertInput = {
  data: BillingInvoiceInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<BillingInvoiceOnConflict>;
};

/** on_conflict condition type for table "billing_invoice" */
export type BillingInvoiceOnConflict = {
  constraint: BillingInvoiceConstraint;
  updateColumns?: Array<BillingInvoiceUpdateColumn>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};

/** Ordering options when selecting data from "billing_invoice". */
export type BillingInvoiceOrderBy = {
  billingEventLogsAggregate?: InputMaybe<BillingEventLogsAggregateOrderBy>;
  billingInvoiceItemsAggregate?: InputMaybe<BillingInvoiceItemAggregateOrderBy>;
  billingPeriod?: InputMaybe<BillingPeriodsOrderBy>;
  billingPeriodEnd?: InputMaybe<OrderBy>;
  billingPeriodId?: InputMaybe<OrderBy>;
  billingPeriodStart?: InputMaybe<OrderBy>;
  client?: InputMaybe<ClientsOrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  currency?: InputMaybe<OrderBy>;
  dueDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceNumber?: InputMaybe<OrderBy>;
  issuedDate?: InputMaybe<OrderBy>;
  notes?: InputMaybe<OrderBy>;
  payrollCount?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  totalHours?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: billing_invoice */
export type BillingInvoicePkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "billing_invoice" */
export type BillingInvoiceSelectColumn =
  /** column name */
  | 'billingPeriodEnd'
  /** column name */
  | 'billingPeriodId'
  /** column name */
  | 'billingPeriodStart'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'dueDate'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceNumber'
  /** column name */
  | 'issuedDate'
  /** column name */
  | 'notes'
  /** column name */
  | 'payrollCount'
  /** column name */
  | 'status'
  /** column name */
  | 'totalAmount'
  /** column name */
  | 'totalHours'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "billing_invoice" */
export type BillingInvoiceSetInput = {
  billingPeriodEnd?: InputMaybe<Scalars['date']['input']>;
  /** Reference to billing period this invoice covers */
  billingPeriodId?: InputMaybe<Scalars['uuid']['input']>;
  billingPeriodStart?: InputMaybe<Scalars['date']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  dueDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique invoice number for client reference */
  invoiceNumber?: InputMaybe<Scalars['String']['input']>;
  issuedDate?: InputMaybe<Scalars['date']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type BillingInvoiceStddevFields = {
  __typename?: 'billingInvoiceStddevFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "billing_invoice" */
export type BillingInvoiceStddevOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type BillingInvoiceStddevPopFields = {
  __typename?: 'billingInvoiceStddevPopFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "billing_invoice" */
export type BillingInvoiceStddevPopOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type BillingInvoiceStddevSampFields = {
  __typename?: 'billingInvoiceStddevSampFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "billing_invoice" */
export type BillingInvoiceStddevSampOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "billingInvoice" */
export type BillingInvoiceStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: BillingInvoiceStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type BillingInvoiceStreamCursorValueInput = {
  billingPeriodEnd?: InputMaybe<Scalars['date']['input']>;
  /** Reference to billing period this invoice covers */
  billingPeriodId?: InputMaybe<Scalars['uuid']['input']>;
  billingPeriodStart?: InputMaybe<Scalars['date']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  dueDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique invoice number for client reference */
  invoiceNumber?: InputMaybe<Scalars['String']['input']>;
  issuedDate?: InputMaybe<Scalars['date']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type BillingInvoiceSumFields = {
  __typename?: 'billingInvoiceSumFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Int']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "billing_invoice" */
export type BillingInvoiceSumOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** update columns of table "billing_invoice" */
export type BillingInvoiceUpdateColumn =
  /** column name */
  | 'billingPeriodEnd'
  /** column name */
  | 'billingPeriodId'
  /** column name */
  | 'billingPeriodStart'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'dueDate'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceNumber'
  /** column name */
  | 'issuedDate'
  /** column name */
  | 'notes'
  /** column name */
  | 'payrollCount'
  /** column name */
  | 'status'
  /** column name */
  | 'totalAmount'
  /** column name */
  | 'totalHours'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type BillingInvoiceUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<BillingInvoiceIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<BillingInvoiceSetInput>;
  /** filter the rows which have to be updated */
  where: BillingInvoiceBoolExp;
};

/** aggregate varPop on columns */
export type BillingInvoiceVarPopFields = {
  __typename?: 'billingInvoiceVarPopFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "billing_invoice" */
export type BillingInvoiceVarPopOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type BillingInvoiceVarSampFields = {
  __typename?: 'billingInvoiceVarSampFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "billing_invoice" */
export type BillingInvoiceVarSampOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type BillingInvoiceVarianceFields = {
  __typename?: 'billingInvoiceVarianceFields';
  /** Number of payroll jobs included in this invoice */
  payrollCount?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  /** Total hours spent on services in this invoice */
  totalHours?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "billing_invoice" */
export type BillingInvoiceVarianceOrderBy = {
  /** Number of payroll jobs included in this invoice */
  payrollCount?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  /** Total hours spent on services in this invoice */
  totalHours?: InputMaybe<OrderBy>;
};

/** columns and relationships of "billing_items" */
export type BillingItems = {
  __typename?: 'billingItems';
  amount?: Maybe<Scalars['numeric']['output']>;
  approvalDate?: Maybe<Scalars['timestamptz']['output']>;
  approvedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  approver?: Maybe<Users>;
  /** An array relationship */
  billingInvoiceItems: Array<BillingInvoiceItem>;
  /** An aggregate relationship */
  billingInvoiceItemsAggregate: BillingInvoiceItemAggregate;
  billingPlanId?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  billingPlanItems?: Maybe<BillingPlans>;
  /** An object relationship */
  billingServicePlan?: Maybe<BillingPlans>;
  /** An object relationship */
  client?: Maybe<Clients>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  /** When this item was confirmed by manager */
  confirmedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Manager who confirmed this item */
  confirmedBy?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hourlyRate?: Maybe<Scalars['numeric']['output']>;
  id: Scalars['uuid']['output'];
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  isApproved?: Maybe<Scalars['Boolean']['output']>;
  /** Additional notes about this billing item */
  notes?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  quantity: Scalars['Int']['output'];
  /** An object relationship */
  relatedPayroll?: Maybe<Payrolls>;
  /** Reference to the service from service catalog */
  serviceId?: Maybe<Scalars['uuid']['output']>;
  serviceName?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  staffUser?: Maybe<Users>;
  /** Staff member who performed the service */
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  /** Status: draft, confirmed, billed */
  status?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  timeEntries: Array<TimeEntries>;
  /** An aggregate relationship */
  timeEntriesAggregate: TimeEntriesAggregate;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  unitPrice: Scalars['numeric']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "billing_items" */
export type BillingItemsBillingInvoiceItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


/** columns and relationships of "billing_items" */
export type BillingItemsBillingInvoiceItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


/** columns and relationships of "billing_items" */
export type BillingItemsTimeEntriesArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


/** columns and relationships of "billing_items" */
export type BillingItemsTimeEntriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};

/** aggregated selection of "billing_items" */
export type BillingItemsAggregate = {
  __typename?: 'billingItemsAggregate';
  aggregate?: Maybe<BillingItemsAggregateFields>;
  nodes: Array<BillingItems>;
};

export type BillingItemsAggregateBoolExp = {
  bool_and?: InputMaybe<BillingItemsAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<BillingItemsAggregateBoolExpBool_Or>;
  count?: InputMaybe<BillingItemsAggregateBoolExpCount>;
};

export type BillingItemsAggregateBoolExpBool_And = {
  arguments: BillingItemsSelectColumnBillingItemsAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BillingItemsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type BillingItemsAggregateBoolExpBool_Or = {
  arguments: BillingItemsSelectColumnBillingItemsAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BillingItemsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type BillingItemsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BillingItemsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BillingItemsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "billing_items" */
export type BillingItemsAggregateFields = {
  __typename?: 'billingItemsAggregateFields';
  avg?: Maybe<BillingItemsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BillingItemsMaxFields>;
  min?: Maybe<BillingItemsMinFields>;
  stddev?: Maybe<BillingItemsStddevFields>;
  stddevPop?: Maybe<BillingItemsStddevPopFields>;
  stddevSamp?: Maybe<BillingItemsStddevSampFields>;
  sum?: Maybe<BillingItemsSumFields>;
  varPop?: Maybe<BillingItemsVarPopFields>;
  varSamp?: Maybe<BillingItemsVarSampFields>;
  variance?: Maybe<BillingItemsVarianceFields>;
};


/** aggregate fields of "billing_items" */
export type BillingItemsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BillingItemsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "billing_items" */
export type BillingItemsAggregateOrderBy = {
  avg?: InputMaybe<BillingItemsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BillingItemsMaxOrderBy>;
  min?: InputMaybe<BillingItemsMinOrderBy>;
  stddev?: InputMaybe<BillingItemsStddevOrderBy>;
  stddevPop?: InputMaybe<BillingItemsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<BillingItemsStddevSampOrderBy>;
  sum?: InputMaybe<BillingItemsSumOrderBy>;
  varPop?: InputMaybe<BillingItemsVarPopOrderBy>;
  varSamp?: InputMaybe<BillingItemsVarSampOrderBy>;
  variance?: InputMaybe<BillingItemsVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "billing_items" */
export type BillingItemsArrRelInsertInput = {
  data: Array<BillingItemsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<BillingItemsOnConflict>;
};

/** aggregate avg on columns */
export type BillingItemsAvgFields = {
  __typename?: 'billingItemsAvgFields';
  amount?: Maybe<Scalars['Float']['output']>;
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  unitPrice?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "billing_items" */
export type BillingItemsAvgOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "billing_items". All fields are combined with a logical 'AND'. */
export type BillingItemsBoolExp = {
  _and?: InputMaybe<Array<BillingItemsBoolExp>>;
  _not?: InputMaybe<BillingItemsBoolExp>;
  _or?: InputMaybe<Array<BillingItemsBoolExp>>;
  amount?: InputMaybe<NumericComparisonExp>;
  approvalDate?: InputMaybe<TimestamptzComparisonExp>;
  approvedBy?: InputMaybe<UuidComparisonExp>;
  approver?: InputMaybe<UsersBoolExp>;
  billingInvoiceItems?: InputMaybe<BillingInvoiceItemBoolExp>;
  billingInvoiceItemsAggregate?: InputMaybe<BillingInvoiceItemAggregateBoolExp>;
  billingPlanId?: InputMaybe<UuidComparisonExp>;
  billingPlanItems?: InputMaybe<BillingPlansBoolExp>;
  billingServicePlan?: InputMaybe<BillingPlansBoolExp>;
  client?: InputMaybe<ClientsBoolExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  confirmedAt?: InputMaybe<TimestamptzComparisonExp>;
  confirmedBy?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestampComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hourlyRate?: InputMaybe<NumericComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  invoiceId?: InputMaybe<UuidComparisonExp>;
  isApproved?: InputMaybe<BooleanComparisonExp>;
  notes?: InputMaybe<StringComparisonExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  quantity?: InputMaybe<IntComparisonExp>;
  relatedPayroll?: InputMaybe<PayrollsBoolExp>;
  serviceId?: InputMaybe<UuidComparisonExp>;
  serviceName?: InputMaybe<StringComparisonExp>;
  staffUser?: InputMaybe<UsersBoolExp>;
  staffUserId?: InputMaybe<UuidComparisonExp>;
  status?: InputMaybe<StringComparisonExp>;
  timeEntries?: InputMaybe<TimeEntriesBoolExp>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateBoolExp>;
  totalAmount?: InputMaybe<NumericComparisonExp>;
  unitPrice?: InputMaybe<NumericComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
};

/** unique or primary key constraints on table "billing_items" */
export type BillingItemsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'billing_items_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "billing_items" */
export type BillingItemsIncInput = {
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  unitPrice?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "billing_items" */
export type BillingItemsInsertInput = {
  approvalDate?: InputMaybe<Scalars['timestamptz']['input']>;
  approvedBy?: InputMaybe<Scalars['uuid']['input']>;
  approver?: InputMaybe<UsersObjRelInsertInput>;
  billingInvoiceItems?: InputMaybe<BillingInvoiceItemArrRelInsertInput>;
  billingPlanId?: InputMaybe<Scalars['uuid']['input']>;
  billingPlanItems?: InputMaybe<BillingPlansObjRelInsertInput>;
  billingServicePlan?: InputMaybe<BillingPlansObjRelInsertInput>;
  client?: InputMaybe<ClientsObjRelInsertInput>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** When this item was confirmed by manager */
  confirmedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Manager who confirmed this item */
  confirmedBy?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  /** Additional notes about this billing item */
  notes?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  relatedPayroll?: InputMaybe<PayrollsObjRelInsertInput>;
  /** Reference to the service from service catalog */
  serviceId?: InputMaybe<Scalars['uuid']['input']>;
  serviceName?: InputMaybe<Scalars['String']['input']>;
  staffUser?: InputMaybe<UsersObjRelInsertInput>;
  /** Staff member who performed the service */
  staffUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Status: draft, confirmed, billed */
  status?: InputMaybe<Scalars['String']['input']>;
  timeEntries?: InputMaybe<TimeEntriesArrRelInsertInput>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  unitPrice?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
};

/** aggregate max on columns */
export type BillingItemsMaxFields = {
  __typename?: 'billingItemsMaxFields';
  amount?: Maybe<Scalars['numeric']['output']>;
  approvalDate?: Maybe<Scalars['timestamptz']['output']>;
  approvedBy?: Maybe<Scalars['uuid']['output']>;
  billingPlanId?: Maybe<Scalars['uuid']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  /** When this item was confirmed by manager */
  confirmedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Manager who confirmed this item */
  confirmedBy?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hourlyRate?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  /** Additional notes about this billing item */
  notes?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  /** Reference to the service from service catalog */
  serviceId?: Maybe<Scalars['uuid']['output']>;
  serviceName?: Maybe<Scalars['String']['output']>;
  /** Staff member who performed the service */
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  /** Status: draft, confirmed, billed */
  status?: Maybe<Scalars['String']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  unitPrice?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "billing_items" */
export type BillingItemsMaxOrderBy = {
  amount?: InputMaybe<OrderBy>;
  approvalDate?: InputMaybe<OrderBy>;
  approvedBy?: InputMaybe<OrderBy>;
  billingPlanId?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  /** When this item was confirmed by manager */
  confirmedAt?: InputMaybe<OrderBy>;
  /** Manager who confirmed this item */
  confirmedBy?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  /** Additional notes about this billing item */
  notes?: InputMaybe<OrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  /** Reference to the service from service catalog */
  serviceId?: InputMaybe<OrderBy>;
  serviceName?: InputMaybe<OrderBy>;
  /** Staff member who performed the service */
  staffUserId?: InputMaybe<OrderBy>;
  /** Status: draft, confirmed, billed */
  status?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type BillingItemsMinFields = {
  __typename?: 'billingItemsMinFields';
  amount?: Maybe<Scalars['numeric']['output']>;
  approvalDate?: Maybe<Scalars['timestamptz']['output']>;
  approvedBy?: Maybe<Scalars['uuid']['output']>;
  billingPlanId?: Maybe<Scalars['uuid']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  /** When this item was confirmed by manager */
  confirmedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Manager who confirmed this item */
  confirmedBy?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  hourlyRate?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invoiceId?: Maybe<Scalars['uuid']['output']>;
  /** Additional notes about this billing item */
  notes?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  /** Reference to the service from service catalog */
  serviceId?: Maybe<Scalars['uuid']['output']>;
  serviceName?: Maybe<Scalars['String']['output']>;
  /** Staff member who performed the service */
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  /** Status: draft, confirmed, billed */
  status?: Maybe<Scalars['String']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  unitPrice?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "billing_items" */
export type BillingItemsMinOrderBy = {
  amount?: InputMaybe<OrderBy>;
  approvalDate?: InputMaybe<OrderBy>;
  approvedBy?: InputMaybe<OrderBy>;
  billingPlanId?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  /** When this item was confirmed by manager */
  confirmedAt?: InputMaybe<OrderBy>;
  /** Manager who confirmed this item */
  confirmedBy?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  /** Additional notes about this billing item */
  notes?: InputMaybe<OrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  /** Reference to the service from service catalog */
  serviceId?: InputMaybe<OrderBy>;
  serviceName?: InputMaybe<OrderBy>;
  /** Staff member who performed the service */
  staffUserId?: InputMaybe<OrderBy>;
  /** Status: draft, confirmed, billed */
  status?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "billing_items" */
export type BillingItemsMutationResponse = {
  __typename?: 'billingItemsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<BillingItems>;
};

/** input type for inserting object relation for remote table "billing_items" */
export type BillingItemsObjRelInsertInput = {
  data: BillingItemsInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<BillingItemsOnConflict>;
};

/** on_conflict condition type for table "billing_items" */
export type BillingItemsOnConflict = {
  constraint: BillingItemsConstraint;
  updateColumns?: Array<BillingItemsUpdateColumn>;
  where?: InputMaybe<BillingItemsBoolExp>;
};

/** Ordering options when selecting data from "billing_items". */
export type BillingItemsOrderBy = {
  amount?: InputMaybe<OrderBy>;
  approvalDate?: InputMaybe<OrderBy>;
  approvedBy?: InputMaybe<OrderBy>;
  approver?: InputMaybe<UsersOrderBy>;
  billingInvoiceItemsAggregate?: InputMaybe<BillingInvoiceItemAggregateOrderBy>;
  billingPlanId?: InputMaybe<OrderBy>;
  billingPlanItems?: InputMaybe<BillingPlansOrderBy>;
  billingServicePlan?: InputMaybe<BillingPlansOrderBy>;
  client?: InputMaybe<ClientsOrderBy>;
  clientId?: InputMaybe<OrderBy>;
  confirmedAt?: InputMaybe<OrderBy>;
  confirmedBy?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invoiceId?: InputMaybe<OrderBy>;
  isApproved?: InputMaybe<OrderBy>;
  notes?: InputMaybe<OrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  relatedPayroll?: InputMaybe<PayrollsOrderBy>;
  serviceId?: InputMaybe<OrderBy>;
  serviceName?: InputMaybe<OrderBy>;
  staffUser?: InputMaybe<UsersOrderBy>;
  staffUserId?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateOrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
};

/** primary key columns input for table: billing_items */
export type BillingItemsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "billing_items" */
export type BillingItemsSelectColumn =
  /** column name */
  | 'amount'
  /** column name */
  | 'approvalDate'
  /** column name */
  | 'approvedBy'
  /** column name */
  | 'billingPlanId'
  /** column name */
  | 'clientId'
  /** column name */
  | 'confirmedAt'
  /** column name */
  | 'confirmedBy'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'hourlyRate'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceId'
  /** column name */
  | 'isApproved'
  /** column name */
  | 'notes'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'quantity'
  /** column name */
  | 'serviceId'
  /** column name */
  | 'serviceName'
  /** column name */
  | 'staffUserId'
  /** column name */
  | 'status'
  /** column name */
  | 'totalAmount'
  /** column name */
  | 'unitPrice'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** select "billingItemsAggregateBoolExpBool_andArgumentsColumns" columns of table "billing_items" */
export type BillingItemsSelectColumnBillingItemsAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isApproved'
  | '%future added value';

/** select "billingItemsAggregateBoolExpBool_orArgumentsColumns" columns of table "billing_items" */
export type BillingItemsSelectColumnBillingItemsAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isApproved'
  | '%future added value';

/** input type for updating data in table "billing_items" */
export type BillingItemsSetInput = {
  approvalDate?: InputMaybe<Scalars['timestamptz']['input']>;
  approvedBy?: InputMaybe<Scalars['uuid']['input']>;
  billingPlanId?: InputMaybe<Scalars['uuid']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** When this item was confirmed by manager */
  confirmedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Manager who confirmed this item */
  confirmedBy?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  /** Additional notes about this billing item */
  notes?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  /** Reference to the service from service catalog */
  serviceId?: InputMaybe<Scalars['uuid']['input']>;
  serviceName?: InputMaybe<Scalars['String']['input']>;
  /** Staff member who performed the service */
  staffUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Status: draft, confirmed, billed */
  status?: InputMaybe<Scalars['String']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  unitPrice?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type BillingItemsStddevFields = {
  __typename?: 'billingItemsStddevFields';
  amount?: Maybe<Scalars['Float']['output']>;
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  unitPrice?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "billing_items" */
export type BillingItemsStddevOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type BillingItemsStddevPopFields = {
  __typename?: 'billingItemsStddevPopFields';
  amount?: Maybe<Scalars['Float']['output']>;
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  unitPrice?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "billing_items" */
export type BillingItemsStddevPopOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type BillingItemsStddevSampFields = {
  __typename?: 'billingItemsStddevSampFields';
  amount?: Maybe<Scalars['Float']['output']>;
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  unitPrice?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "billing_items" */
export type BillingItemsStddevSampOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "billingItems" */
export type BillingItemsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: BillingItemsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type BillingItemsStreamCursorValueInput = {
  amount?: InputMaybe<Scalars['numeric']['input']>;
  approvalDate?: InputMaybe<Scalars['timestamptz']['input']>;
  approvedBy?: InputMaybe<Scalars['uuid']['input']>;
  billingPlanId?: InputMaybe<Scalars['uuid']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** When this item was confirmed by manager */
  confirmedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Manager who confirmed this item */
  confirmedBy?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hourlyRate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invoiceId?: InputMaybe<Scalars['uuid']['input']>;
  isApproved?: InputMaybe<Scalars['Boolean']['input']>;
  /** Additional notes about this billing item */
  notes?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  /** Reference to the service from service catalog */
  serviceId?: InputMaybe<Scalars['uuid']['input']>;
  serviceName?: InputMaybe<Scalars['String']['input']>;
  /** Staff member who performed the service */
  staffUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Status: draft, confirmed, billed */
  status?: InputMaybe<Scalars['String']['input']>;
  totalAmount?: InputMaybe<Scalars['numeric']['input']>;
  unitPrice?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type BillingItemsSumFields = {
  __typename?: 'billingItemsSumFields';
  amount?: Maybe<Scalars['numeric']['output']>;
  hourlyRate?: Maybe<Scalars['numeric']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  totalAmount?: Maybe<Scalars['numeric']['output']>;
  unitPrice?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "billing_items" */
export type BillingItemsSumOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** update columns of table "billing_items" */
export type BillingItemsUpdateColumn =
  /** column name */
  | 'approvalDate'
  /** column name */
  | 'approvedBy'
  /** column name */
  | 'billingPlanId'
  /** column name */
  | 'clientId'
  /** column name */
  | 'confirmedAt'
  /** column name */
  | 'confirmedBy'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'hourlyRate'
  /** column name */
  | 'id'
  /** column name */
  | 'invoiceId'
  /** column name */
  | 'isApproved'
  /** column name */
  | 'notes'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'quantity'
  /** column name */
  | 'serviceId'
  /** column name */
  | 'serviceName'
  /** column name */
  | 'staffUserId'
  /** column name */
  | 'status'
  /** column name */
  | 'totalAmount'
  /** column name */
  | 'unitPrice'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type BillingItemsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<BillingItemsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<BillingItemsSetInput>;
  /** filter the rows which have to be updated */
  where: BillingItemsBoolExp;
};

/** aggregate varPop on columns */
export type BillingItemsVarPopFields = {
  __typename?: 'billingItemsVarPopFields';
  amount?: Maybe<Scalars['Float']['output']>;
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  unitPrice?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "billing_items" */
export type BillingItemsVarPopOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type BillingItemsVarSampFields = {
  __typename?: 'billingItemsVarSampFields';
  amount?: Maybe<Scalars['Float']['output']>;
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  unitPrice?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "billing_items" */
export type BillingItemsVarSampOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type BillingItemsVarianceFields = {
  __typename?: 'billingItemsVarianceFields';
  amount?: Maybe<Scalars['Float']['output']>;
  hourlyRate?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  unitPrice?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "billing_items" */
export type BillingItemsVarianceOrderBy = {
  amount?: InputMaybe<OrderBy>;
  hourlyRate?: InputMaybe<OrderBy>;
  quantity?: InputMaybe<OrderBy>;
  totalAmount?: InputMaybe<OrderBy>;
  unitPrice?: InputMaybe<OrderBy>;
};

/** Billing periods for consolidating multiple payroll jobs into client invoices */
export type BillingPeriods = {
  __typename?: 'billingPeriods';
  /** An array relationship */
  billingInvoices: Array<BillingInvoice>;
  /** An aggregate relationship */
  billingInvoicesAggregate: BillingInvoiceAggregate;
  /** An object relationship */
  client: Clients;
  /** Client this billing period is for */
  clientId: Scalars['uuid']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['uuid']['output'];
  /** End date of billing period */
  periodEnd: Scalars['date']['output'];
  /** Start date of billing period */
  periodStart: Scalars['date']['output'];
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** Billing periods for consolidating multiple payroll jobs into client invoices */
export type BillingPeriodsBillingInvoicesArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


/** Billing periods for consolidating multiple payroll jobs into client invoices */
export type BillingPeriodsBillingInvoicesAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};

/** aggregated selection of "billing_periods" */
export type BillingPeriodsAggregate = {
  __typename?: 'billingPeriodsAggregate';
  aggregate?: Maybe<BillingPeriodsAggregateFields>;
  nodes: Array<BillingPeriods>;
};

export type BillingPeriodsAggregateBoolExp = {
  count?: InputMaybe<BillingPeriodsAggregateBoolExpCount>;
};

export type BillingPeriodsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BillingPeriodsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "billing_periods" */
export type BillingPeriodsAggregateFields = {
  __typename?: 'billingPeriodsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<BillingPeriodsMaxFields>;
  min?: Maybe<BillingPeriodsMinFields>;
};


/** aggregate fields of "billing_periods" */
export type BillingPeriodsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "billing_periods" */
export type BillingPeriodsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<BillingPeriodsMaxOrderBy>;
  min?: InputMaybe<BillingPeriodsMinOrderBy>;
};

/** input type for inserting array relation for remote table "billing_periods" */
export type BillingPeriodsArrRelInsertInput = {
  data: Array<BillingPeriodsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<BillingPeriodsOnConflict>;
};

/** Boolean expression to filter rows from the table "billing_periods". All fields are combined with a logical 'AND'. */
export type BillingPeriodsBoolExp = {
  _and?: InputMaybe<Array<BillingPeriodsBoolExp>>;
  _not?: InputMaybe<BillingPeriodsBoolExp>;
  _or?: InputMaybe<Array<BillingPeriodsBoolExp>>;
  billingInvoices?: InputMaybe<BillingInvoiceBoolExp>;
  billingInvoicesAggregate?: InputMaybe<BillingInvoiceAggregateBoolExp>;
  client?: InputMaybe<ClientsBoolExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  periodEnd?: InputMaybe<DateComparisonExp>;
  periodStart?: InputMaybe<DateComparisonExp>;
  status?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "billing_periods" */
export type BillingPeriodsConstraint =
  /** unique or primary key constraint on columns "period_end", "period_start", "client_id" */
  | 'billing_periods_client_id_period_start_period_end_key'
  /** unique or primary key constraint on columns "id" */
  | 'billing_periods_pkey'
  | '%future added value';

/** input type for inserting data into table "billing_periods" */
export type BillingPeriodsInsertInput = {
  billingInvoices?: InputMaybe<BillingInvoiceArrRelInsertInput>;
  client?: InputMaybe<ClientsObjRelInsertInput>;
  /** Client this billing period is for */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** End date of billing period */
  periodEnd?: InputMaybe<Scalars['date']['input']>;
  /** Start date of billing period */
  periodStart?: InputMaybe<Scalars['date']['input']>;
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type BillingPeriodsMaxFields = {
  __typename?: 'billingPeriodsMaxFields';
  /** Client this billing period is for */
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  /** End date of billing period */
  periodEnd?: Maybe<Scalars['date']['output']>;
  /** Start date of billing period */
  periodStart?: Maybe<Scalars['date']['output']>;
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "billing_periods" */
export type BillingPeriodsMaxOrderBy = {
  /** Client this billing period is for */
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  /** End date of billing period */
  periodEnd?: InputMaybe<OrderBy>;
  /** Start date of billing period */
  periodStart?: InputMaybe<OrderBy>;
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type BillingPeriodsMinFields = {
  __typename?: 'billingPeriodsMinFields';
  /** Client this billing period is for */
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  /** End date of billing period */
  periodEnd?: Maybe<Scalars['date']['output']>;
  /** Start date of billing period */
  periodStart?: Maybe<Scalars['date']['output']>;
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "billing_periods" */
export type BillingPeriodsMinOrderBy = {
  /** Client this billing period is for */
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  /** End date of billing period */
  periodEnd?: InputMaybe<OrderBy>;
  /** Start date of billing period */
  periodStart?: InputMaybe<OrderBy>;
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "billing_periods" */
export type BillingPeriodsMutationResponse = {
  __typename?: 'billingPeriodsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<BillingPeriods>;
};

/** input type for inserting object relation for remote table "billing_periods" */
export type BillingPeriodsObjRelInsertInput = {
  data: BillingPeriodsInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<BillingPeriodsOnConflict>;
};

/** on_conflict condition type for table "billing_periods" */
export type BillingPeriodsOnConflict = {
  constraint: BillingPeriodsConstraint;
  updateColumns?: Array<BillingPeriodsUpdateColumn>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};

/** Ordering options when selecting data from "billing_periods". */
export type BillingPeriodsOrderBy = {
  billingInvoicesAggregate?: InputMaybe<BillingInvoiceAggregateOrderBy>;
  client?: InputMaybe<ClientsOrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  periodEnd?: InputMaybe<OrderBy>;
  periodStart?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: billing_periods */
export type BillingPeriodsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "billing_periods" */
export type BillingPeriodsSelectColumn =
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'periodEnd'
  /** column name */
  | 'periodStart'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "billing_periods" */
export type BillingPeriodsSetInput = {
  /** Client this billing period is for */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** End date of billing period */
  periodEnd?: InputMaybe<Scalars['date']['input']>;
  /** Start date of billing period */
  periodStart?: InputMaybe<Scalars['date']['input']>;
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "billingPeriods" */
export type BillingPeriodsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: BillingPeriodsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type BillingPeriodsStreamCursorValueInput = {
  /** Client this billing period is for */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** End date of billing period */
  periodEnd?: InputMaybe<Scalars['date']['input']>;
  /** Start date of billing period */
  periodStart?: InputMaybe<Scalars['date']['input']>;
  /** Status: open, ready_to_invoice, invoiced, paid */
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "billing_periods" */
export type BillingPeriodsUpdateColumn =
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'periodEnd'
  /** column name */
  | 'periodStart'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type BillingPeriodsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<BillingPeriodsSetInput>;
  /** filter the rows which have to be updated */
  where: BillingPeriodsBoolExp;
};

/** columns and relationships of "billing_plan" */
export type BillingPlans = {
  __typename?: 'billingPlans';
  /** An array relationship */
  billingPlanItems: Array<BillingItems>;
  /** An aggregate relationship */
  billingPlanItemsAggregate: BillingItemsAggregate;
  /** An array relationship */
  billingServiceItems: Array<BillingItems>;
  /** An aggregate relationship */
  billingServiceItemsAggregate: BillingItemsAggregate;
  /** Unit of billing: Per Payroll, Per Payslip, Per Employee, Per Hour, Per State, Once Off, Per Month */
  billingUnit?: Maybe<Scalars['String']['output']>;
  /** Service category: Processing, Setup, Employee Management, Compliance, etc. */
  category?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  clientBillingAssignments: Array<ClientBillingAssignments>;
  /** An aggregate relationship */
  clientBillingAssignmentsAggregate: ClientBillingAssignmentsAggregate;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency: Scalars['String']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['uuid']['output'];
  /** Whether this service is currently available */
  isActive?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  /** Standard rate for this service */
  standardRate: Scalars['numeric']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "billing_plan" */
export type BillingPlansBillingPlanItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "billing_plan" */
export type BillingPlansBillingPlanItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "billing_plan" */
export type BillingPlansBillingServiceItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "billing_plan" */
export type BillingPlansBillingServiceItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "billing_plan" */
export type BillingPlansClientBillingAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


/** columns and relationships of "billing_plan" */
export type BillingPlansClientBillingAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};

/** aggregated selection of "billing_plan" */
export type BillingPlansAggregate = {
  __typename?: 'billingPlansAggregate';
  aggregate?: Maybe<BillingPlansAggregateFields>;
  nodes: Array<BillingPlans>;
};

/** aggregate fields of "billing_plan" */
export type BillingPlansAggregateFields = {
  __typename?: 'billingPlansAggregateFields';
  avg?: Maybe<BillingPlansAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BillingPlansMaxFields>;
  min?: Maybe<BillingPlansMinFields>;
  stddev?: Maybe<BillingPlansStddevFields>;
  stddevPop?: Maybe<BillingPlansStddevPopFields>;
  stddevSamp?: Maybe<BillingPlansStddevSampFields>;
  sum?: Maybe<BillingPlansSumFields>;
  varPop?: Maybe<BillingPlansVarPopFields>;
  varSamp?: Maybe<BillingPlansVarSampFields>;
  variance?: Maybe<BillingPlansVarianceFields>;
};


/** aggregate fields of "billing_plan" */
export type BillingPlansAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<BillingPlansSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type BillingPlansAvgFields = {
  __typename?: 'billingPlansAvgFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "billing_plan". All fields are combined with a logical 'AND'. */
export type BillingPlansBoolExp = {
  _and?: InputMaybe<Array<BillingPlansBoolExp>>;
  _not?: InputMaybe<BillingPlansBoolExp>;
  _or?: InputMaybe<Array<BillingPlansBoolExp>>;
  billingPlanItems?: InputMaybe<BillingItemsBoolExp>;
  billingPlanItemsAggregate?: InputMaybe<BillingItemsAggregateBoolExp>;
  billingServiceItems?: InputMaybe<BillingItemsBoolExp>;
  billingServiceItemsAggregate?: InputMaybe<BillingItemsAggregateBoolExp>;
  billingUnit?: InputMaybe<StringComparisonExp>;
  category?: InputMaybe<StringComparisonExp>;
  clientBillingAssignments?: InputMaybe<ClientBillingAssignmentsBoolExp>;
  clientBillingAssignmentsAggregate?: InputMaybe<ClientBillingAssignmentsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  currency?: InputMaybe<StringComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  standardRate?: InputMaybe<NumericComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "billing_plan" */
export type BillingPlansConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'billing_plan_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "billing_plan" */
export type BillingPlansIncInput = {
  /** Standard rate for this service */
  standardRate?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "billing_plan" */
export type BillingPlansInsertInput = {
  billingPlanItems?: InputMaybe<BillingItemsArrRelInsertInput>;
  billingServiceItems?: InputMaybe<BillingItemsArrRelInsertInput>;
  /** Unit of billing: Per Payroll, Per Payslip, Per Employee, Per Hour, Per State, Once Off, Per Month */
  billingUnit?: InputMaybe<Scalars['String']['input']>;
  /** Service category: Processing, Setup, Employee Management, Compliance, etc. */
  category?: InputMaybe<Scalars['String']['input']>;
  clientBillingAssignments?: InputMaybe<ClientBillingAssignmentsArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether this service is currently available */
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  /** Standard rate for this service */
  standardRate?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type BillingPlansMaxFields = {
  __typename?: 'billingPlansMaxFields';
  /** Unit of billing: Per Payroll, Per Payslip, Per Employee, Per Hour, Per State, Once Off, Per Month */
  billingUnit?: Maybe<Scalars['String']['output']>;
  /** Service category: Processing, Setup, Employee Management, Compliance, etc. */
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type BillingPlansMinFields = {
  __typename?: 'billingPlansMinFields';
  /** Unit of billing: Per Payroll, Per Payslip, Per Employee, Per Hour, Per State, Once Off, Per Month */
  billingUnit?: Maybe<Scalars['String']['output']>;
  /** Service category: Processing, Setup, Employee Management, Compliance, etc. */
  category?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "billing_plan" */
export type BillingPlansMutationResponse = {
  __typename?: 'billingPlansMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<BillingPlans>;
};

/** input type for inserting object relation for remote table "billing_plan" */
export type BillingPlansObjRelInsertInput = {
  data: BillingPlansInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<BillingPlansOnConflict>;
};

/** on_conflict condition type for table "billing_plan" */
export type BillingPlansOnConflict = {
  constraint: BillingPlansConstraint;
  updateColumns?: Array<BillingPlansUpdateColumn>;
  where?: InputMaybe<BillingPlansBoolExp>;
};

/** Ordering options when selecting data from "billing_plan". */
export type BillingPlansOrderBy = {
  billingPlanItemsAggregate?: InputMaybe<BillingItemsAggregateOrderBy>;
  billingServiceItemsAggregate?: InputMaybe<BillingItemsAggregateOrderBy>;
  billingUnit?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  clientBillingAssignmentsAggregate?: InputMaybe<ClientBillingAssignmentsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  currency?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  standardRate?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: billing_plan */
export type BillingPlansPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "billing_plan" */
export type BillingPlansSelectColumn =
  /** column name */
  | 'billingUnit'
  /** column name */
  | 'category'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'name'
  /** column name */
  | 'standardRate'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "billing_plan" */
export type BillingPlansSetInput = {
  /** Unit of billing: Per Payroll, Per Payslip, Per Employee, Per Hour, Per State, Once Off, Per Month */
  billingUnit?: InputMaybe<Scalars['String']['input']>;
  /** Service category: Processing, Setup, Employee Management, Compliance, etc. */
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether this service is currently available */
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  /** Standard rate for this service */
  standardRate?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type BillingPlansStddevFields = {
  __typename?: 'billingPlansStddevFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type BillingPlansStddevPopFields = {
  __typename?: 'billingPlansStddevPopFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type BillingPlansStddevSampFields = {
  __typename?: 'billingPlansStddevSampFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "billingPlans" */
export type BillingPlansStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: BillingPlansStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type BillingPlansStreamCursorValueInput = {
  /** Unit of billing: Per Payroll, Per Payslip, Per Employee, Per Hour, Per State, Once Off, Per Month */
  billingUnit?: InputMaybe<Scalars['String']['input']>;
  /** Service category: Processing, Setup, Employee Management, Compliance, etc. */
  category?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether this service is currently available */
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  /** Standard rate for this service */
  standardRate?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type BillingPlansSumFields = {
  __typename?: 'billingPlansSumFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['numeric']['output']>;
};

/** update columns of table "billing_plan" */
export type BillingPlansUpdateColumn =
  /** column name */
  | 'billingUnit'
  /** column name */
  | 'category'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'name'
  /** column name */
  | 'standardRate'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type BillingPlansUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<BillingPlansIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<BillingPlansSetInput>;
  /** filter the rows which have to be updated */
  where: BillingPlansBoolExp;
};

/** aggregate varPop on columns */
export type BillingPlansVarPopFields = {
  __typename?: 'billingPlansVarPopFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type BillingPlansVarSampFields = {
  __typename?: 'billingPlansVarSampFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type BillingPlansVarianceFields = {
  __typename?: 'billingPlansVarianceFields';
  /** Standard rate for this service */
  standardRate?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "client_billing_assignment" */
export type ClientBillingAssignments = {
  __typename?: 'clientBillingAssignments';
  /** An object relationship */
  assignedBillingPlan: BillingPlans;
  /** An object relationship */
  assignedClient: Clients;
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: Maybe<Scalars['String']['output']>;
  billingPlanId: Scalars['uuid']['output'];
  clientId: Scalars['uuid']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['numeric']['output']>;
  /** When this rate agreement becomes effective */
  effectiveDate?: Maybe<Scalars['date']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id: Scalars['uuid']['output'];
  isActive?: Maybe<Scalars['Boolean']['output']>;
  /** Whether this service is enabled for this client */
  isEnabled?: Maybe<Scalars['Boolean']['output']>;
  startDate: Scalars['date']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "client_billing_assignment" */
export type ClientBillingAssignmentsAggregate = {
  __typename?: 'clientBillingAssignmentsAggregate';
  aggregate?: Maybe<ClientBillingAssignmentsAggregateFields>;
  nodes: Array<ClientBillingAssignments>;
};

export type ClientBillingAssignmentsAggregateBoolExp = {
  bool_and?: InputMaybe<ClientBillingAssignmentsAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<ClientBillingAssignmentsAggregateBoolExpBool_Or>;
  count?: InputMaybe<ClientBillingAssignmentsAggregateBoolExpCount>;
};

export type ClientBillingAssignmentsAggregateBoolExpBool_And = {
  arguments: ClientBillingAssignmentsSelectColumnClientBillingAssignmentsAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientBillingAssignmentsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ClientBillingAssignmentsAggregateBoolExpBool_Or = {
  arguments: ClientBillingAssignmentsSelectColumnClientBillingAssignmentsAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientBillingAssignmentsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ClientBillingAssignmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientBillingAssignmentsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "client_billing_assignment" */
export type ClientBillingAssignmentsAggregateFields = {
  __typename?: 'clientBillingAssignmentsAggregateFields';
  avg?: Maybe<ClientBillingAssignmentsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientBillingAssignmentsMaxFields>;
  min?: Maybe<ClientBillingAssignmentsMinFields>;
  stddev?: Maybe<ClientBillingAssignmentsStddevFields>;
  stddevPop?: Maybe<ClientBillingAssignmentsStddevPopFields>;
  stddevSamp?: Maybe<ClientBillingAssignmentsStddevSampFields>;
  sum?: Maybe<ClientBillingAssignmentsSumFields>;
  varPop?: Maybe<ClientBillingAssignmentsVarPopFields>;
  varSamp?: Maybe<ClientBillingAssignmentsVarSampFields>;
  variance?: Maybe<ClientBillingAssignmentsVarianceFields>;
};


/** aggregate fields of "client_billing_assignment" */
export type ClientBillingAssignmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "client_billing_assignment" */
export type ClientBillingAssignmentsAggregateOrderBy = {
  avg?: InputMaybe<ClientBillingAssignmentsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ClientBillingAssignmentsMaxOrderBy>;
  min?: InputMaybe<ClientBillingAssignmentsMinOrderBy>;
  stddev?: InputMaybe<ClientBillingAssignmentsStddevOrderBy>;
  stddevPop?: InputMaybe<ClientBillingAssignmentsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<ClientBillingAssignmentsStddevSampOrderBy>;
  sum?: InputMaybe<ClientBillingAssignmentsSumOrderBy>;
  varPop?: InputMaybe<ClientBillingAssignmentsVarPopOrderBy>;
  varSamp?: InputMaybe<ClientBillingAssignmentsVarSampOrderBy>;
  variance?: InputMaybe<ClientBillingAssignmentsVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "client_billing_assignment" */
export type ClientBillingAssignmentsArrRelInsertInput = {
  data: Array<ClientBillingAssignmentsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<ClientBillingAssignmentsOnConflict>;
};

/** aggregate avg on columns */
export type ClientBillingAssignmentsAvgFields = {
  __typename?: 'clientBillingAssignmentsAvgFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsAvgOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "client_billing_assignment". All fields are combined with a logical 'AND'. */
export type ClientBillingAssignmentsBoolExp = {
  _and?: InputMaybe<Array<ClientBillingAssignmentsBoolExp>>;
  _not?: InputMaybe<ClientBillingAssignmentsBoolExp>;
  _or?: InputMaybe<Array<ClientBillingAssignmentsBoolExp>>;
  assignedBillingPlan?: InputMaybe<BillingPlansBoolExp>;
  assignedClient?: InputMaybe<ClientsBoolExp>;
  billingFrequency?: InputMaybe<StringComparisonExp>;
  billingPlanId?: InputMaybe<UuidComparisonExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  customRate?: InputMaybe<NumericComparisonExp>;
  effectiveDate?: InputMaybe<DateComparisonExp>;
  endDate?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  isEnabled?: InputMaybe<BooleanComparisonExp>;
  startDate?: InputMaybe<DateComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "client_billing_assignment" */
export type ClientBillingAssignmentsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'client_billing_assignment_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "client_billing_assignment" */
export type ClientBillingAssignmentsIncInput = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "client_billing_assignment" */
export type ClientBillingAssignmentsInsertInput = {
  assignedBillingPlan?: InputMaybe<BillingPlansObjRelInsertInput>;
  assignedClient?: InputMaybe<ClientsObjRelInsertInput>;
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: InputMaybe<Scalars['String']['input']>;
  billingPlanId?: InputMaybe<Scalars['uuid']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<Scalars['numeric']['input']>;
  /** When this rate agreement becomes effective */
  effectiveDate?: InputMaybe<Scalars['date']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether this service is enabled for this client */
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ClientBillingAssignmentsMaxFields = {
  __typename?: 'clientBillingAssignmentsMaxFields';
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: Maybe<Scalars['String']['output']>;
  billingPlanId?: Maybe<Scalars['uuid']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['numeric']['output']>;
  /** When this rate agreement becomes effective */
  effectiveDate?: Maybe<Scalars['date']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsMaxOrderBy = {
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: InputMaybe<OrderBy>;
  billingPlanId?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
  /** When this rate agreement becomes effective */
  effectiveDate?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type ClientBillingAssignmentsMinFields = {
  __typename?: 'clientBillingAssignmentsMinFields';
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: Maybe<Scalars['String']['output']>;
  billingPlanId?: Maybe<Scalars['uuid']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['numeric']['output']>;
  /** When this rate agreement becomes effective */
  effectiveDate?: Maybe<Scalars['date']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsMinOrderBy = {
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: InputMaybe<OrderBy>;
  billingPlanId?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
  /** When this rate agreement becomes effective */
  effectiveDate?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "client_billing_assignment" */
export type ClientBillingAssignmentsMutationResponse = {
  __typename?: 'clientBillingAssignmentsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientBillingAssignments>;
};

/** on_conflict condition type for table "client_billing_assignment" */
export type ClientBillingAssignmentsOnConflict = {
  constraint: ClientBillingAssignmentsConstraint;
  updateColumns?: Array<ClientBillingAssignmentsUpdateColumn>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};

/** Ordering options when selecting data from "client_billing_assignment". */
export type ClientBillingAssignmentsOrderBy = {
  assignedBillingPlan?: InputMaybe<BillingPlansOrderBy>;
  assignedClient?: InputMaybe<ClientsOrderBy>;
  billingFrequency?: InputMaybe<OrderBy>;
  billingPlanId?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  customRate?: InputMaybe<OrderBy>;
  effectiveDate?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  isEnabled?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: client_billing_assignment */
export type ClientBillingAssignmentsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsSelectColumn =
  /** column name */
  | 'billingFrequency'
  /** column name */
  | 'billingPlanId'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customRate'
  /** column name */
  | 'effectiveDate'
  /** column name */
  | 'endDate'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isEnabled'
  /** column name */
  | 'startDate'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** select "clientBillingAssignmentsAggregateBoolExpBool_andArgumentsColumns" columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsSelectColumnClientBillingAssignmentsAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isActive'
  /** column name */
  | 'isEnabled'
  | '%future added value';

/** select "clientBillingAssignmentsAggregateBoolExpBool_orArgumentsColumns" columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsSelectColumnClientBillingAssignmentsAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isActive'
  /** column name */
  | 'isEnabled'
  | '%future added value';

/** input type for updating data in table "client_billing_assignment" */
export type ClientBillingAssignmentsSetInput = {
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: InputMaybe<Scalars['String']['input']>;
  billingPlanId?: InputMaybe<Scalars['uuid']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<Scalars['numeric']['input']>;
  /** When this rate agreement becomes effective */
  effectiveDate?: InputMaybe<Scalars['date']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether this service is enabled for this client */
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ClientBillingAssignmentsStddevFields = {
  __typename?: 'clientBillingAssignmentsStddevFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsStddevOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type ClientBillingAssignmentsStddevPopFields = {
  __typename?: 'clientBillingAssignmentsStddevPopFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsStddevPopOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type ClientBillingAssignmentsStddevSampFields = {
  __typename?: 'clientBillingAssignmentsStddevSampFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsStddevSampOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "clientBillingAssignments" */
export type ClientBillingAssignmentsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: ClientBillingAssignmentsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientBillingAssignmentsStreamCursorValueInput = {
  /** How often this service is billed: Per Job, Monthly, Quarterly, etc. */
  billingFrequency?: InputMaybe<Scalars['String']['input']>;
  billingPlanId?: InputMaybe<Scalars['uuid']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<Scalars['numeric']['input']>;
  /** When this rate agreement becomes effective */
  effectiveDate?: InputMaybe<Scalars['date']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether this service is enabled for this client */
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ClientBillingAssignmentsSumFields = {
  __typename?: 'clientBillingAssignmentsSumFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsSumOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** update columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsUpdateColumn =
  /** column name */
  | 'billingFrequency'
  /** column name */
  | 'billingPlanId'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customRate'
  /** column name */
  | 'effectiveDate'
  /** column name */
  | 'endDate'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isEnabled'
  /** column name */
  | 'startDate'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type ClientBillingAssignmentsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ClientBillingAssignmentsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientBillingAssignmentsSetInput>;
  /** filter the rows which have to be updated */
  where: ClientBillingAssignmentsBoolExp;
};

/** aggregate varPop on columns */
export type ClientBillingAssignmentsVarPopFields = {
  __typename?: 'clientBillingAssignmentsVarPopFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsVarPopOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type ClientBillingAssignmentsVarSampFields = {
  __typename?: 'clientBillingAssignmentsVarSampFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsVarSampOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type ClientBillingAssignmentsVarianceFields = {
  __typename?: 'clientBillingAssignmentsVarianceFields';
  /** Client-specific rate override (null uses standard rate) */
  customRate?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "client_billing_assignment" */
export type ClientBillingAssignmentsVarianceOrderBy = {
  /** Client-specific rate override (null uses standard rate) */
  customRate?: InputMaybe<OrderBy>;
};

/** columns and relationships of "client_external_systems" */
export type ClientExternalSystems = {
  __typename?: 'clientExternalSystems';
  /** Reference to the client */
  clientId: Scalars['uuid']['output'];
  /** Timestamp when the mapping was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the external system */
  externalSystemId: Scalars['uuid']['output'];
  /** Unique identifier for the client-system mapping */
  id: Scalars['uuid']['output'];
  /** An object relationship */
  linkedClient: Clients;
  /** An object relationship */
  linkedExternalSystem: ExternalSystems;
  /** Client identifier in the external system */
  systemClientId?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "client_external_systems" */
export type ClientExternalSystemsAggregate = {
  __typename?: 'clientExternalSystemsAggregate';
  aggregate?: Maybe<ClientExternalSystemsAggregateFields>;
  nodes: Array<ClientExternalSystems>;
};

export type ClientExternalSystemsAggregateBoolExp = {
  count?: InputMaybe<ClientExternalSystemsAggregateBoolExpCount>;
};

export type ClientExternalSystemsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientExternalSystemsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "client_external_systems" */
export type ClientExternalSystemsAggregateFields = {
  __typename?: 'clientExternalSystemsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<ClientExternalSystemsMaxFields>;
  min?: Maybe<ClientExternalSystemsMinFields>;
};


/** aggregate fields of "client_external_systems" */
export type ClientExternalSystemsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "client_external_systems" */
export type ClientExternalSystemsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ClientExternalSystemsMaxOrderBy>;
  min?: InputMaybe<ClientExternalSystemsMinOrderBy>;
};

/** input type for inserting array relation for remote table "client_external_systems" */
export type ClientExternalSystemsArrRelInsertInput = {
  data: Array<ClientExternalSystemsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<ClientExternalSystemsOnConflict>;
};

/** Boolean expression to filter rows from the table "client_external_systems". All fields are combined with a logical 'AND'. */
export type ClientExternalSystemsBoolExp = {
  _and?: InputMaybe<Array<ClientExternalSystemsBoolExp>>;
  _not?: InputMaybe<ClientExternalSystemsBoolExp>;
  _or?: InputMaybe<Array<ClientExternalSystemsBoolExp>>;
  clientId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  externalSystemId?: InputMaybe<UuidComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  linkedClient?: InputMaybe<ClientsBoolExp>;
  linkedExternalSystem?: InputMaybe<ExternalSystemsBoolExp>;
  systemClientId?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "client_external_systems" */
export type ClientExternalSystemsConstraint =
  /** unique or primary key constraint on columns "system_id", "client_id" */
  | 'client_external_systems_client_id_system_id_key'
  /** unique or primary key constraint on columns "id" */
  | 'client_external_systems_pkey'
  | '%future added value';

/** input type for inserting data into table "client_external_systems" */
export type ClientExternalSystemsInsertInput = {
  /** Reference to the client */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the mapping was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the external system */
  externalSystemId?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique identifier for the client-system mapping */
  id?: InputMaybe<Scalars['uuid']['input']>;
  linkedClient?: InputMaybe<ClientsObjRelInsertInput>;
  linkedExternalSystem?: InputMaybe<ExternalSystemsObjRelInsertInput>;
  /** Client identifier in the external system */
  systemClientId?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ClientExternalSystemsMaxFields = {
  __typename?: 'clientExternalSystemsMaxFields';
  /** Reference to the client */
  clientId?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the mapping was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the external system */
  externalSystemId?: Maybe<Scalars['uuid']['output']>;
  /** Unique identifier for the client-system mapping */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Client identifier in the external system */
  systemClientId?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "client_external_systems" */
export type ClientExternalSystemsMaxOrderBy = {
  /** Reference to the client */
  clientId?: InputMaybe<OrderBy>;
  /** Timestamp when the mapping was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Reference to the external system */
  externalSystemId?: InputMaybe<OrderBy>;
  /** Unique identifier for the client-system mapping */
  id?: InputMaybe<OrderBy>;
  /** Client identifier in the external system */
  systemClientId?: InputMaybe<OrderBy>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type ClientExternalSystemsMinFields = {
  __typename?: 'clientExternalSystemsMinFields';
  /** Reference to the client */
  clientId?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the mapping was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the external system */
  externalSystemId?: Maybe<Scalars['uuid']['output']>;
  /** Unique identifier for the client-system mapping */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Client identifier in the external system */
  systemClientId?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "client_external_systems" */
export type ClientExternalSystemsMinOrderBy = {
  /** Reference to the client */
  clientId?: InputMaybe<OrderBy>;
  /** Timestamp when the mapping was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Reference to the external system */
  externalSystemId?: InputMaybe<OrderBy>;
  /** Unique identifier for the client-system mapping */
  id?: InputMaybe<OrderBy>;
  /** Client identifier in the external system */
  systemClientId?: InputMaybe<OrderBy>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "client_external_systems" */
export type ClientExternalSystemsMutationResponse = {
  __typename?: 'clientExternalSystemsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientExternalSystems>;
};

/** on_conflict condition type for table "client_external_systems" */
export type ClientExternalSystemsOnConflict = {
  constraint: ClientExternalSystemsConstraint;
  updateColumns?: Array<ClientExternalSystemsUpdateColumn>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};

/** Ordering options when selecting data from "client_external_systems". */
export type ClientExternalSystemsOrderBy = {
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  externalSystemId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  linkedClient?: InputMaybe<ClientsOrderBy>;
  linkedExternalSystem?: InputMaybe<ExternalSystemsOrderBy>;
  systemClientId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: client_external_systems */
export type ClientExternalSystemsPkColumnsInput = {
  /** Unique identifier for the client-system mapping */
  id: Scalars['uuid']['input'];
};

/** select columns of table "client_external_systems" */
export type ClientExternalSystemsSelectColumn =
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'externalSystemId'
  /** column name */
  | 'id'
  /** column name */
  | 'systemClientId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "client_external_systems" */
export type ClientExternalSystemsSetInput = {
  /** Reference to the client */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the mapping was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the external system */
  externalSystemId?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique identifier for the client-system mapping */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Client identifier in the external system */
  systemClientId?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "clientExternalSystems" */
export type ClientExternalSystemsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: ClientExternalSystemsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientExternalSystemsStreamCursorValueInput = {
  /** Reference to the client */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the mapping was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the external system */
  externalSystemId?: InputMaybe<Scalars['uuid']['input']>;
  /** Unique identifier for the client-system mapping */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Client identifier in the external system */
  systemClientId?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the mapping was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "client_external_systems" */
export type ClientExternalSystemsUpdateColumn =
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'externalSystemId'
  /** column name */
  | 'id'
  /** column name */
  | 'systemClientId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type ClientExternalSystemsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientExternalSystemsSetInput>;
  /** filter the rows which have to be updated */
  where: ClientExternalSystemsBoolExp;
};

/** columns and relationships of "clients" */
export type Clients = {
  __typename?: 'clients';
  /** Whether the client is currently active */
  active?: Maybe<Scalars['Boolean']['output']>;
  /** An array relationship */
  billingAssignments: Array<ClientBillingAssignments>;
  /** An aggregate relationship */
  billingAssignmentsAggregate: ClientBillingAssignmentsAggregate;
  /** An array relationship */
  billingInvoices: Array<BillingInvoice>;
  /** An aggregate relationship */
  billingInvoicesAggregate: BillingInvoiceAggregate;
  /** An array relationship */
  billingItems: Array<BillingItems>;
  /** An aggregate relationship */
  billingItemsAggregate: BillingItemsAggregate;
  /** An array relationship */
  billingPeriods: Array<BillingPeriods>;
  /** An aggregate relationship */
  billingPeriodsAggregate: BillingPeriodsAggregate;
  /** Email address for the client contact */
  contactEmail?: Maybe<Scalars['String']['output']>;
  /** Primary contact person at the client */
  contactPerson?: Maybe<Scalars['String']['output']>;
  /** Phone number for the client contact */
  contactPhone?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the client was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An array relationship */
  externalSystems: Array<ClientExternalSystems>;
  /** An aggregate relationship */
  externalSystemsAggregate: ClientExternalSystemsAggregate;
  /** Unique identifier for the client */
  id: Scalars['uuid']['output'];
  /** Client company name */
  name: Scalars['String']['output'];
  /** An array relationship */
  payrolls: Array<Payrolls>;
  /** An aggregate relationship */
  payrollsAggregate: PayrollsAggregate;
  /** An array relationship */
  timeEntries: Array<TimeEntries>;
  /** An aggregate relationship */
  timeEntriesAggregate: TimeEntriesAggregate;
  /** Timestamp when the client was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "clients" */
export type ClientsBillingAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsBillingAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsBillingInvoicesArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsBillingInvoicesAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsBillingItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsBillingItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsBillingPeriodsArgs = {
  distinctOn?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPeriodsOrderBy>>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsBillingPeriodsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPeriodsOrderBy>>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsExternalSystemsArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsExternalSystemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsTimeEntriesArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


/** columns and relationships of "clients" */
export type ClientsTimeEntriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};

/** aggregated selection of "clients" */
export type ClientsAggregate = {
  __typename?: 'clientsAggregate';
  aggregate?: Maybe<ClientsAggregateFields>;
  nodes: Array<Clients>;
};

export type ClientsAggregateBoolExp = {
  bool_and?: InputMaybe<ClientsAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<ClientsAggregateBoolExpBool_Or>;
  count?: InputMaybe<ClientsAggregateBoolExpCount>;
};

export type ClientsAggregateBoolExpBool_And = {
  arguments: ClientsSelectColumnClientsAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ClientsAggregateBoolExpBool_Or = {
  arguments: ClientsSelectColumnClientsAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type ClientsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<ClientsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "clients" */
export type ClientsAggregateFields = {
  __typename?: 'clientsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<ClientsMaxFields>;
  min?: Maybe<ClientsMinFields>;
};


/** aggregate fields of "clients" */
export type ClientsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ClientsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "clients" */
export type ClientsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<ClientsMaxOrderBy>;
  min?: InputMaybe<ClientsMinOrderBy>;
};

/** input type for inserting array relation for remote table "clients" */
export type ClientsArrRelInsertInput = {
  data: Array<ClientsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<ClientsOnConflict>;
};

/** Boolean expression to filter rows from the table "clients". All fields are combined with a logical 'AND'. */
export type ClientsBoolExp = {
  _and?: InputMaybe<Array<ClientsBoolExp>>;
  _not?: InputMaybe<ClientsBoolExp>;
  _or?: InputMaybe<Array<ClientsBoolExp>>;
  active?: InputMaybe<BooleanComparisonExp>;
  billingAssignments?: InputMaybe<ClientBillingAssignmentsBoolExp>;
  billingAssignmentsAggregate?: InputMaybe<ClientBillingAssignmentsAggregateBoolExp>;
  billingInvoices?: InputMaybe<BillingInvoiceBoolExp>;
  billingInvoicesAggregate?: InputMaybe<BillingInvoiceAggregateBoolExp>;
  billingItems?: InputMaybe<BillingItemsBoolExp>;
  billingItemsAggregate?: InputMaybe<BillingItemsAggregateBoolExp>;
  billingPeriods?: InputMaybe<BillingPeriodsBoolExp>;
  billingPeriodsAggregate?: InputMaybe<BillingPeriodsAggregateBoolExp>;
  contactEmail?: InputMaybe<StringComparisonExp>;
  contactPerson?: InputMaybe<StringComparisonExp>;
  contactPhone?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  externalSystems?: InputMaybe<ClientExternalSystemsBoolExp>;
  externalSystemsAggregate?: InputMaybe<ClientExternalSystemsAggregateBoolExp>;
  id?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  payrolls?: InputMaybe<PayrollsBoolExp>;
  payrollsAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  timeEntries?: InputMaybe<TimeEntriesBoolExp>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "clients" */
export type ClientsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'clients_pkey'
  | '%future added value';

/** input type for inserting data into table "clients" */
export type ClientsInsertInput = {
  /** Whether the client is currently active */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  billingAssignments?: InputMaybe<ClientBillingAssignmentsArrRelInsertInput>;
  billingInvoices?: InputMaybe<BillingInvoiceArrRelInsertInput>;
  billingItems?: InputMaybe<BillingItemsArrRelInsertInput>;
  billingPeriods?: InputMaybe<BillingPeriodsArrRelInsertInput>;
  /** Email address for the client contact */
  contactEmail?: InputMaybe<Scalars['String']['input']>;
  /** Primary contact person at the client */
  contactPerson?: InputMaybe<Scalars['String']['input']>;
  /** Phone number for the client contact */
  contactPhone?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the client was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  externalSystems?: InputMaybe<ClientExternalSystemsArrRelInsertInput>;
  /** Unique identifier for the client */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Client company name */
  name?: InputMaybe<Scalars['String']['input']>;
  payrolls?: InputMaybe<PayrollsArrRelInsertInput>;
  timeEntries?: InputMaybe<TimeEntriesArrRelInsertInput>;
  /** Timestamp when the client was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ClientsMaxFields = {
  __typename?: 'clientsMaxFields';
  /** Email address for the client contact */
  contactEmail?: Maybe<Scalars['String']['output']>;
  /** Primary contact person at the client */
  contactPerson?: Maybe<Scalars['String']['output']>;
  /** Phone number for the client contact */
  contactPhone?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the client was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Unique identifier for the client */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Client company name */
  name?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the client was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "clients" */
export type ClientsMaxOrderBy = {
  /** Email address for the client contact */
  contactEmail?: InputMaybe<OrderBy>;
  /** Primary contact person at the client */
  contactPerson?: InputMaybe<OrderBy>;
  /** Phone number for the client contact */
  contactPhone?: InputMaybe<OrderBy>;
  /** Timestamp when the client was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Unique identifier for the client */
  id?: InputMaybe<OrderBy>;
  /** Client company name */
  name?: InputMaybe<OrderBy>;
  /** Timestamp when the client was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type ClientsMinFields = {
  __typename?: 'clientsMinFields';
  /** Email address for the client contact */
  contactEmail?: Maybe<Scalars['String']['output']>;
  /** Primary contact person at the client */
  contactPerson?: Maybe<Scalars['String']['output']>;
  /** Phone number for the client contact */
  contactPhone?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the client was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Unique identifier for the client */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Client company name */
  name?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the client was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "clients" */
export type ClientsMinOrderBy = {
  /** Email address for the client contact */
  contactEmail?: InputMaybe<OrderBy>;
  /** Primary contact person at the client */
  contactPerson?: InputMaybe<OrderBy>;
  /** Phone number for the client contact */
  contactPhone?: InputMaybe<OrderBy>;
  /** Timestamp when the client was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Unique identifier for the client */
  id?: InputMaybe<OrderBy>;
  /** Client company name */
  name?: InputMaybe<OrderBy>;
  /** Timestamp when the client was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "clients" */
export type ClientsMutationResponse = {
  __typename?: 'clientsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Clients>;
};

/** input type for inserting object relation for remote table "clients" */
export type ClientsObjRelInsertInput = {
  data: ClientsInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<ClientsOnConflict>;
};

/** on_conflict condition type for table "clients" */
export type ClientsOnConflict = {
  constraint: ClientsConstraint;
  updateColumns?: Array<ClientsUpdateColumn>;
  where?: InputMaybe<ClientsBoolExp>;
};

/** Ordering options when selecting data from "clients". */
export type ClientsOrderBy = {
  active?: InputMaybe<OrderBy>;
  billingAssignmentsAggregate?: InputMaybe<ClientBillingAssignmentsAggregateOrderBy>;
  billingInvoicesAggregate?: InputMaybe<BillingInvoiceAggregateOrderBy>;
  billingItemsAggregate?: InputMaybe<BillingItemsAggregateOrderBy>;
  billingPeriodsAggregate?: InputMaybe<BillingPeriodsAggregateOrderBy>;
  contactEmail?: InputMaybe<OrderBy>;
  contactPerson?: InputMaybe<OrderBy>;
  contactPhone?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  externalSystemsAggregate?: InputMaybe<ClientExternalSystemsAggregateOrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payrollsAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: clients */
export type ClientsPkColumnsInput = {
  /** Unique identifier for the client */
  id: Scalars['uuid']['input'];
};

/** select columns of table "clients" */
export type ClientsSelectColumn =
  /** column name */
  | 'active'
  /** column name */
  | 'contactEmail'
  /** column name */
  | 'contactPerson'
  /** column name */
  | 'contactPhone'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** select "clientsAggregateBoolExpBool_andArgumentsColumns" columns of table "clients" */
export type ClientsSelectColumnClientsAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'active'
  | '%future added value';

/** select "clientsAggregateBoolExpBool_orArgumentsColumns" columns of table "clients" */
export type ClientsSelectColumnClientsAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'active'
  | '%future added value';

/** input type for updating data in table "clients" */
export type ClientsSetInput = {
  /** Whether the client is currently active */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  /** Email address for the client contact */
  contactEmail?: InputMaybe<Scalars['String']['input']>;
  /** Primary contact person at the client */
  contactPerson?: InputMaybe<Scalars['String']['input']>;
  /** Phone number for the client contact */
  contactPhone?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the client was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Unique identifier for the client */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Client company name */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the client was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "clients" */
export type ClientsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: ClientsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientsStreamCursorValueInput = {
  /** Whether the client is currently active */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  /** Email address for the client contact */
  contactEmail?: InputMaybe<Scalars['String']['input']>;
  /** Primary contact person at the client */
  contactPerson?: InputMaybe<Scalars['String']['input']>;
  /** Phone number for the client contact */
  contactPhone?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the client was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Unique identifier for the client */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Client company name */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the client was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "clients" */
export type ClientsUpdateColumn =
  /** column name */
  | 'active'
  /** column name */
  | 'contactEmail'
  /** column name */
  | 'contactPerson'
  /** column name */
  | 'contactPhone'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type ClientsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientsSetInput>;
  /** filter the rows which have to be updated */
  where: ClientsBoolExp;
};

export type CreatePayrollVersionArgs = {
  p_created_by_user_id?: InputMaybe<Scalars['uuid']['input']>;
  p_go_live_date?: InputMaybe<Scalars['date']['input']>;
  p_new_backup_consultant_user_id?: InputMaybe<Scalars['uuid']['input']>;
  p_new_client_id?: InputMaybe<Scalars['uuid']['input']>;
  p_new_cycle_id?: InputMaybe<Scalars['uuid']['input']>;
  p_new_date_type_id?: InputMaybe<Scalars['uuid']['input']>;
  p_new_date_value?: InputMaybe<Scalars['Int']['input']>;
  p_new_manager_user_id?: InputMaybe<Scalars['uuid']['input']>;
  p_new_name?: InputMaybe<Scalars['String']['input']>;
  p_new_primary_consultant_user_id?: InputMaybe<Scalars['uuid']['input']>;
  p_original_payroll_id?: InputMaybe<Scalars['uuid']['input']>;
  p_version_reason?: InputMaybe<Scalars['String']['input']>;
};

export type CreatePayrollVersionSimpleArgs = {
  payroll_id?: InputMaybe<Scalars['uuid']['input']>;
  version_reason?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "current_payrolls" */
export type CurrentPayrolls = {
  __typename?: 'currentPayrolls';
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  cycleId?: Maybe<Scalars['uuid']['output']>;
  dateTypeId?: Maybe<Scalars['uuid']['output']>;
  dateValue?: Maybe<Scalars['Int']['output']>;
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parentPayrollId?: Maybe<Scalars['uuid']['output']>;
  payrollCycleName?: Maybe<Scalars['payroll_cycle_type']['output']>;
  payrollDateTypeName?: Maybe<Scalars['payroll_date_type']['output']>;
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "current_payrolls" */
export type CurrentPayrollsAggregate = {
  __typename?: 'currentPayrollsAggregate';
  aggregate?: Maybe<CurrentPayrollsAggregateFields>;
  nodes: Array<CurrentPayrolls>;
};

/** aggregate fields of "current_payrolls" */
export type CurrentPayrollsAggregateFields = {
  __typename?: 'currentPayrollsAggregateFields';
  avg?: Maybe<CurrentPayrollsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CurrentPayrollsMaxFields>;
  min?: Maybe<CurrentPayrollsMinFields>;
  stddev?: Maybe<CurrentPayrollsStddevFields>;
  stddevPop?: Maybe<CurrentPayrollsStddevPopFields>;
  stddevSamp?: Maybe<CurrentPayrollsStddevSampFields>;
  sum?: Maybe<CurrentPayrollsSumFields>;
  varPop?: Maybe<CurrentPayrollsVarPopFields>;
  varSamp?: Maybe<CurrentPayrollsVarSampFields>;
  variance?: Maybe<CurrentPayrollsVarianceFields>;
};


/** aggregate fields of "current_payrolls" */
export type CurrentPayrollsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<CurrentPayrollsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type CurrentPayrollsAvgFields = {
  __typename?: 'currentPayrollsAvgFields';
  dateValue?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "current_payrolls". All fields are combined with a logical 'AND'. */
export type CurrentPayrollsBoolExp = {
  _and?: InputMaybe<Array<CurrentPayrollsBoolExp>>;
  _not?: InputMaybe<CurrentPayrollsBoolExp>;
  _or?: InputMaybe<Array<CurrentPayrollsBoolExp>>;
  backupConsultantUserId?: InputMaybe<UuidComparisonExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  clientName?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  cycleId?: InputMaybe<UuidComparisonExp>;
  dateTypeId?: InputMaybe<UuidComparisonExp>;
  dateValue?: InputMaybe<IntComparisonExp>;
  goLiveDate?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  managerUserId?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  parentPayrollId?: InputMaybe<UuidComparisonExp>;
  payrollCycleName?: InputMaybe<PayrollCycleTypeComparisonExp>;
  payrollDateTypeName?: InputMaybe<PayrollDateTypeComparisonExp>;
  primaryConsultantUserId?: InputMaybe<UuidComparisonExp>;
  supersededDate?: InputMaybe<DateComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  versionNumber?: InputMaybe<IntComparisonExp>;
  versionReason?: InputMaybe<StringComparisonExp>;
};

/** aggregate max on columns */
export type CurrentPayrollsMaxFields = {
  __typename?: 'currentPayrollsMaxFields';
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  cycleId?: Maybe<Scalars['uuid']['output']>;
  dateTypeId?: Maybe<Scalars['uuid']['output']>;
  dateValue?: Maybe<Scalars['Int']['output']>;
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parentPayrollId?: Maybe<Scalars['uuid']['output']>;
  payrollCycleName?: Maybe<Scalars['payroll_cycle_type']['output']>;
  payrollDateTypeName?: Maybe<Scalars['payroll_date_type']['output']>;
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type CurrentPayrollsMinFields = {
  __typename?: 'currentPayrollsMinFields';
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  clientId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  cycleId?: Maybe<Scalars['uuid']['output']>;
  dateTypeId?: Maybe<Scalars['uuid']['output']>;
  dateValue?: Maybe<Scalars['Int']['output']>;
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parentPayrollId?: Maybe<Scalars['uuid']['output']>;
  payrollCycleName?: Maybe<Scalars['payroll_cycle_type']['output']>;
  payrollDateTypeName?: Maybe<Scalars['payroll_date_type']['output']>;
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "current_payrolls". */
export type CurrentPayrollsOrderBy = {
  backupConsultantUserId?: InputMaybe<OrderBy>;
  clientId?: InputMaybe<OrderBy>;
  clientName?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  cycleId?: InputMaybe<OrderBy>;
  dateTypeId?: InputMaybe<OrderBy>;
  dateValue?: InputMaybe<OrderBy>;
  goLiveDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerUserId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  parentPayrollId?: InputMaybe<OrderBy>;
  payrollCycleName?: InputMaybe<OrderBy>;
  payrollDateTypeName?: InputMaybe<OrderBy>;
  primaryConsultantUserId?: InputMaybe<OrderBy>;
  supersededDate?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
  versionReason?: InputMaybe<OrderBy>;
};

/** select columns of table "current_payrolls" */
export type CurrentPayrollsSelectColumn =
  /** column name */
  | 'backupConsultantUserId'
  /** column name */
  | 'clientId'
  /** column name */
  | 'clientName'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'cycleId'
  /** column name */
  | 'dateTypeId'
  /** column name */
  | 'dateValue'
  /** column name */
  | 'goLiveDate'
  /** column name */
  | 'id'
  /** column name */
  | 'managerUserId'
  /** column name */
  | 'name'
  /** column name */
  | 'parentPayrollId'
  /** column name */
  | 'payrollCycleName'
  /** column name */
  | 'payrollDateTypeName'
  /** column name */
  | 'primaryConsultantUserId'
  /** column name */
  | 'supersededDate'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'versionNumber'
  /** column name */
  | 'versionReason'
  | '%future added value';

/** aggregate stddev on columns */
export type CurrentPayrollsStddevFields = {
  __typename?: 'currentPayrollsStddevFields';
  dateValue?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type CurrentPayrollsStddevPopFields = {
  __typename?: 'currentPayrollsStddevPopFields';
  dateValue?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type CurrentPayrollsStddevSampFields = {
  __typename?: 'currentPayrollsStddevSampFields';
  dateValue?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "currentPayrolls" */
export type CurrentPayrollsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: CurrentPayrollsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type CurrentPayrollsStreamCursorValueInput = {
  backupConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  clientName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  cycleId?: InputMaybe<Scalars['uuid']['input']>;
  dateTypeId?: InputMaybe<Scalars['uuid']['input']>;
  dateValue?: InputMaybe<Scalars['Int']['input']>;
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  managerUserId?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentPayrollId?: InputMaybe<Scalars['uuid']['input']>;
  payrollCycleName?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  payrollDateTypeName?: InputMaybe<Scalars['payroll_date_type']['input']>;
  primaryConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  supersededDate?: InputMaybe<Scalars['date']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
  versionReason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type CurrentPayrollsSumFields = {
  __typename?: 'currentPayrollsSumFields';
  dateValue?: Maybe<Scalars['Int']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** aggregate varPop on columns */
export type CurrentPayrollsVarPopFields = {
  __typename?: 'currentPayrollsVarPopFields';
  dateValue?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type CurrentPayrollsVarSampFields = {
  __typename?: 'currentPayrollsVarSampFields';
  dateValue?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type CurrentPayrollsVarianceFields = {
  __typename?: 'currentPayrollsVarianceFields';
  dateValue?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "audit.data_access_log" */
export type DataAccessLogs = {
  __typename?: 'dataAccessLogs';
  accessType: Scalars['String']['output'];
  accessedAt: Scalars['timestamptz']['output'];
  dataClassification?: Maybe<Scalars['String']['output']>;
  fieldsAccessed?: Maybe<Array<Scalars['String']['output']>>;
  id: Scalars['uuid']['output'];
  ipAddress?: Maybe<Scalars['inet']['output']>;
  metadata?: Maybe<Scalars['jsonb']['output']>;
  queryExecuted?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['String']['output']>;
  resourceType: Scalars['String']['output'];
  rowCount?: Maybe<Scalars['Int']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
  userId: Scalars['uuid']['output'];
};


/** columns and relationships of "audit.data_access_log" */
export type DataAccessLogsMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "audit.data_access_log" */
export type DataAccessLogsAggregate = {
  __typename?: 'dataAccessLogsAggregate';
  aggregate?: Maybe<DataAccessLogsAggregateFields>;
  nodes: Array<DataAccessLogs>;
};

/** aggregate fields of "audit.data_access_log" */
export type DataAccessLogsAggregateFields = {
  __typename?: 'dataAccessLogsAggregateFields';
  avg?: Maybe<DataAccessLogsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DataAccessLogsMaxFields>;
  min?: Maybe<DataAccessLogsMinFields>;
  stddev?: Maybe<DataAccessLogsStddevFields>;
  stddevPop?: Maybe<DataAccessLogsStddevPopFields>;
  stddevSamp?: Maybe<DataAccessLogsStddevSampFields>;
  sum?: Maybe<DataAccessLogsSumFields>;
  varPop?: Maybe<DataAccessLogsVarPopFields>;
  varSamp?: Maybe<DataAccessLogsVarSampFields>;
  variance?: Maybe<DataAccessLogsVarianceFields>;
};


/** aggregate fields of "audit.data_access_log" */
export type DataAccessLogsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<DataAccessLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type DataAccessLogsAppendInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type DataAccessLogsAvgFields = {
  __typename?: 'dataAccessLogsAvgFields';
  rowCount?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "audit.data_access_log". All fields are combined with a logical 'AND'. */
export type DataAccessLogsBoolExp = {
  _and?: InputMaybe<Array<DataAccessLogsBoolExp>>;
  _not?: InputMaybe<DataAccessLogsBoolExp>;
  _or?: InputMaybe<Array<DataAccessLogsBoolExp>>;
  accessType?: InputMaybe<StringComparisonExp>;
  accessedAt?: InputMaybe<TimestamptzComparisonExp>;
  dataClassification?: InputMaybe<StringComparisonExp>;
  fieldsAccessed?: InputMaybe<StringArrayComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  ipAddress?: InputMaybe<InetComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  queryExecuted?: InputMaybe<StringComparisonExp>;
  resourceId?: InputMaybe<StringComparisonExp>;
  resourceType?: InputMaybe<StringComparisonExp>;
  rowCount?: InputMaybe<IntComparisonExp>;
  sessionId?: InputMaybe<StringComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "audit.data_access_log" */
export type DataAccessLogsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'data_access_log_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type DataAccessLogsDeleteAtPathInput = {
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type DataAccessLogsDeleteElemInput = {
  metadata?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type DataAccessLogsDeleteKeyInput = {
  metadata?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "audit.data_access_log" */
export type DataAccessLogsIncInput = {
  rowCount?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "audit.data_access_log" */
export type DataAccessLogsInsertInput = {
  accessType?: InputMaybe<Scalars['String']['input']>;
  accessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataClassification?: InputMaybe<Scalars['String']['input']>;
  fieldsAccessed?: InputMaybe<Array<Scalars['String']['input']>>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  queryExecuted?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['String']['input']>;
  resourceType?: InputMaybe<Scalars['String']['input']>;
  rowCount?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type DataAccessLogsMaxFields = {
  __typename?: 'dataAccessLogsMaxFields';
  accessType?: Maybe<Scalars['String']['output']>;
  accessedAt?: Maybe<Scalars['timestamptz']['output']>;
  dataClassification?: Maybe<Scalars['String']['output']>;
  fieldsAccessed?: Maybe<Array<Scalars['String']['output']>>;
  id?: Maybe<Scalars['uuid']['output']>;
  queryExecuted?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['String']['output']>;
  resourceType?: Maybe<Scalars['String']['output']>;
  rowCount?: Maybe<Scalars['Int']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregate min on columns */
export type DataAccessLogsMinFields = {
  __typename?: 'dataAccessLogsMinFields';
  accessType?: Maybe<Scalars['String']['output']>;
  accessedAt?: Maybe<Scalars['timestamptz']['output']>;
  dataClassification?: Maybe<Scalars['String']['output']>;
  fieldsAccessed?: Maybe<Array<Scalars['String']['output']>>;
  id?: Maybe<Scalars['uuid']['output']>;
  queryExecuted?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['String']['output']>;
  resourceType?: Maybe<Scalars['String']['output']>;
  rowCount?: Maybe<Scalars['Int']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** response of any mutation on the table "audit.data_access_log" */
export type DataAccessLogsMutationResponse = {
  __typename?: 'dataAccessLogsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DataAccessLogs>;
};

/** on_conflict condition type for table "audit.data_access_log" */
export type DataAccessLogsOnConflict = {
  constraint: DataAccessLogsConstraint;
  updateColumns?: Array<DataAccessLogsUpdateColumn>;
  where?: InputMaybe<DataAccessLogsBoolExp>;
};

/** Ordering options when selecting data from "audit.data_access_log". */
export type DataAccessLogsOrderBy = {
  accessType?: InputMaybe<OrderBy>;
  accessedAt?: InputMaybe<OrderBy>;
  dataClassification?: InputMaybe<OrderBy>;
  fieldsAccessed?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  ipAddress?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  queryExecuted?: InputMaybe<OrderBy>;
  resourceId?: InputMaybe<OrderBy>;
  resourceType?: InputMaybe<OrderBy>;
  rowCount?: InputMaybe<OrderBy>;
  sessionId?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: audit.data_access_log */
export type DataAccessLogsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type DataAccessLogsPrependInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "audit.data_access_log" */
export type DataAccessLogsSelectColumn =
  /** column name */
  | 'accessType'
  /** column name */
  | 'accessedAt'
  /** column name */
  | 'dataClassification'
  /** column name */
  | 'fieldsAccessed'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'metadata'
  /** column name */
  | 'queryExecuted'
  /** column name */
  | 'resourceId'
  /** column name */
  | 'resourceType'
  /** column name */
  | 'rowCount'
  /** column name */
  | 'sessionId'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "audit.data_access_log" */
export type DataAccessLogsSetInput = {
  accessType?: InputMaybe<Scalars['String']['input']>;
  accessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataClassification?: InputMaybe<Scalars['String']['input']>;
  fieldsAccessed?: InputMaybe<Array<Scalars['String']['input']>>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  queryExecuted?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['String']['input']>;
  resourceType?: InputMaybe<Scalars['String']['input']>;
  rowCount?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate stddev on columns */
export type DataAccessLogsStddevFields = {
  __typename?: 'dataAccessLogsStddevFields';
  rowCount?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type DataAccessLogsStddevPopFields = {
  __typename?: 'dataAccessLogsStddevPopFields';
  rowCount?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type DataAccessLogsStddevSampFields = {
  __typename?: 'dataAccessLogsStddevSampFields';
  rowCount?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "dataAccessLogs" */
export type DataAccessLogsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: DataAccessLogsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type DataAccessLogsStreamCursorValueInput = {
  accessType?: InputMaybe<Scalars['String']['input']>;
  accessedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataClassification?: InputMaybe<Scalars['String']['input']>;
  fieldsAccessed?: InputMaybe<Array<Scalars['String']['input']>>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  queryExecuted?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['String']['input']>;
  resourceType?: InputMaybe<Scalars['String']['input']>;
  rowCount?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate sum on columns */
export type DataAccessLogsSumFields = {
  __typename?: 'dataAccessLogsSumFields';
  rowCount?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "audit.data_access_log" */
export type DataAccessLogsUpdateColumn =
  /** column name */
  | 'accessType'
  /** column name */
  | 'accessedAt'
  /** column name */
  | 'dataClassification'
  /** column name */
  | 'fieldsAccessed'
  /** column name */
  | 'id'
  /** column name */
  | 'ipAddress'
  /** column name */
  | 'metadata'
  /** column name */
  | 'queryExecuted'
  /** column name */
  | 'resourceId'
  /** column name */
  | 'resourceType'
  /** column name */
  | 'rowCount'
  /** column name */
  | 'sessionId'
  /** column name */
  | 'userId'
  | '%future added value';

export type DataAccessLogsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<DataAccessLogsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<DataAccessLogsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<DataAccessLogsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<DataAccessLogsDeleteKeyInput>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DataAccessLogsIncInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<DataAccessLogsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DataAccessLogsSetInput>;
  /** filter the rows which have to be updated */
  where: DataAccessLogsBoolExp;
};

/** aggregate varPop on columns */
export type DataAccessLogsVarPopFields = {
  __typename?: 'dataAccessLogsVarPopFields';
  rowCount?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type DataAccessLogsVarSampFields = {
  __typename?: 'dataAccessLogsVarSampFields';
  rowCount?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type DataAccessLogsVarianceFields = {
  __typename?: 'dataAccessLogsVarianceFields';
  rowCount?: Maybe<Scalars['Float']['output']>;
};

export type DataBackupsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<DataBackupsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<DataBackupsBoolExp>;
  predicate: IntComparisonExp;
};

export type EmailDraftsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EmailDraftsBoolExp>;
  predicate: IntComparisonExp;
};

export type EmailSendLogsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EmailSendLogsBoolExp>;
  predicate: IntComparisonExp;
};

export type EmailTemplatesAggregateBoolExpBool_And = {
  arguments: EmailTemplatesSelectColumnEmailTemplatesAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EmailTemplatesBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EmailTemplatesAggregateBoolExpBool_Or = {
  arguments: EmailTemplatesSelectColumnEmailTemplatesAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EmailTemplatesBoolExp>;
  predicate: BooleanComparisonExp;
};

export type EmailTemplatesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EmailTemplatesBoolExp>;
  predicate: IntComparisonExp;
};

/** columns and relationships of "external_systems" */
export type ExternalSystems = {
  __typename?: 'externalSystems';
  /** An array relationship */
  clientExternalSystems: Array<ClientExternalSystems>;
  /** An aggregate relationship */
  clientExternalSystemsAggregate: ClientExternalSystemsAggregate;
  /** Timestamp when the system was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Description of the external system and its purpose */
  description?: Maybe<Scalars['String']['output']>;
  /** Path or reference to the system icon */
  icon?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the external system */
  id: Scalars['uuid']['output'];
  /** Name of the external system */
  name: Scalars['String']['output'];
  /** Timestamp when the system was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** URL endpoint for the external system */
  url: Scalars['String']['output'];
};


/** columns and relationships of "external_systems" */
export type ExternalSystemsClientExternalSystemsArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


/** columns and relationships of "external_systems" */
export type ExternalSystemsClientExternalSystemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};

/** aggregated selection of "external_systems" */
export type ExternalSystemsAggregate = {
  __typename?: 'externalSystemsAggregate';
  aggregate?: Maybe<ExternalSystemsAggregateFields>;
  nodes: Array<ExternalSystems>;
};

/** aggregate fields of "external_systems" */
export type ExternalSystemsAggregateFields = {
  __typename?: 'externalSystemsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<ExternalSystemsMaxFields>;
  min?: Maybe<ExternalSystemsMinFields>;
};


/** aggregate fields of "external_systems" */
export type ExternalSystemsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ExternalSystemsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "external_systems". All fields are combined with a logical 'AND'. */
export type ExternalSystemsBoolExp = {
  _and?: InputMaybe<Array<ExternalSystemsBoolExp>>;
  _not?: InputMaybe<ExternalSystemsBoolExp>;
  _or?: InputMaybe<Array<ExternalSystemsBoolExp>>;
  clientExternalSystems?: InputMaybe<ClientExternalSystemsBoolExp>;
  clientExternalSystemsAggregate?: InputMaybe<ClientExternalSystemsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  icon?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  url?: InputMaybe<StringComparisonExp>;
};

/** unique or primary key constraints on table "external_systems" */
export type ExternalSystemsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'external_systems_pkey'
  | '%future added value';

/** input type for inserting data into table "external_systems" */
export type ExternalSystemsInsertInput = {
  clientExternalSystems?: InputMaybe<ClientExternalSystemsArrRelInsertInput>;
  /** Timestamp when the system was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Description of the external system and its purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Path or reference to the system icon */
  icon?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the external system */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the external system */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the system was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** URL endpoint for the external system */
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ExternalSystemsMaxFields = {
  __typename?: 'externalSystemsMaxFields';
  /** Timestamp when the system was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Description of the external system and its purpose */
  description?: Maybe<Scalars['String']['output']>;
  /** Path or reference to the system icon */
  icon?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the external system */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Name of the external system */
  name?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the system was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** URL endpoint for the external system */
  url?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ExternalSystemsMinFields = {
  __typename?: 'externalSystemsMinFields';
  /** Timestamp when the system was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Description of the external system and its purpose */
  description?: Maybe<Scalars['String']['output']>;
  /** Path or reference to the system icon */
  icon?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the external system */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Name of the external system */
  name?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the system was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** URL endpoint for the external system */
  url?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "external_systems" */
export type ExternalSystemsMutationResponse = {
  __typename?: 'externalSystemsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ExternalSystems>;
};

/** input type for inserting object relation for remote table "external_systems" */
export type ExternalSystemsObjRelInsertInput = {
  data: ExternalSystemsInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<ExternalSystemsOnConflict>;
};

/** on_conflict condition type for table "external_systems" */
export type ExternalSystemsOnConflict = {
  constraint: ExternalSystemsConstraint;
  updateColumns?: Array<ExternalSystemsUpdateColumn>;
  where?: InputMaybe<ExternalSystemsBoolExp>;
};

/** Ordering options when selecting data from "external_systems". */
export type ExternalSystemsOrderBy = {
  clientExternalSystemsAggregate?: InputMaybe<ClientExternalSystemsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  icon?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  url?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: external_systems */
export type ExternalSystemsPkColumnsInput = {
  /** Unique identifier for the external system */
  id: Scalars['uuid']['input'];
};

/** select columns of table "external_systems" */
export type ExternalSystemsSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'icon'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  | '%future added value';

/** input type for updating data in table "external_systems" */
export type ExternalSystemsSetInput = {
  /** Timestamp when the system was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Description of the external system and its purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Path or reference to the system icon */
  icon?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the external system */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the external system */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the system was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** URL endpoint for the external system */
  url?: InputMaybe<Scalars['String']['input']>;
};

/** Streaming cursor of the table "externalSystems" */
export type ExternalSystemsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: ExternalSystemsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type ExternalSystemsStreamCursorValueInput = {
  /** Timestamp when the system was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Description of the external system and its purpose */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Path or reference to the system icon */
  icon?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the external system */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the external system */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the system was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** URL endpoint for the external system */
  url?: InputMaybe<Scalars['String']['input']>;
};

/** update columns of table "external_systems" */
export type ExternalSystemsUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'icon'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  | '%future added value';

export type ExternalSystemsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ExternalSystemsSetInput>;
  /** filter the rows which have to be updated */
  where: ExternalSystemsBoolExp;
};

/** columns and relationships of "feature_flags" */
export type FeatureFlags = {
  __typename?: 'featureFlags';
  /** JSON array of roles that can access this feature */
  allowedRoles: Scalars['jsonb']['output'];
  /** Name of the feature controlled by this flag */
  featureName: Scalars['String']['output'];
  /** Unique identifier for the feature flag */
  id: Scalars['uuid']['output'];
  /** Whether the feature is currently enabled */
  isEnabled?: Maybe<Scalars['Boolean']['output']>;
  /** Timestamp when the feature flag was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "feature_flags" */
export type FeatureFlagsAllowedRolesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "feature_flags" */
export type FeatureFlagsAggregate = {
  __typename?: 'featureFlagsAggregate';
  aggregate?: Maybe<FeatureFlagsAggregateFields>;
  nodes: Array<FeatureFlags>;
};

/** aggregate fields of "feature_flags" */
export type FeatureFlagsAggregateFields = {
  __typename?: 'featureFlagsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<FeatureFlagsMaxFields>;
  min?: Maybe<FeatureFlagsMinFields>;
};


/** aggregate fields of "feature_flags" */
export type FeatureFlagsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FeatureFlagsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type FeatureFlagsAppendInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Boolean expression to filter rows from the table "feature_flags". All fields are combined with a logical 'AND'. */
export type FeatureFlagsBoolExp = {
  _and?: InputMaybe<Array<FeatureFlagsBoolExp>>;
  _not?: InputMaybe<FeatureFlagsBoolExp>;
  _or?: InputMaybe<Array<FeatureFlagsBoolExp>>;
  allowedRoles?: InputMaybe<JsonbComparisonExp>;
  featureName?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isEnabled?: InputMaybe<BooleanComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "feature_flags" */
export type FeatureFlagsConstraint =
  /** unique or primary key constraint on columns "feature_name" */
  | 'feature_flags_feature_name_key'
  /** unique or primary key constraint on columns "id" */
  | 'feature_flags_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type FeatureFlagsDeleteAtPathInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type FeatureFlagsDeleteElemInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type FeatureFlagsDeleteKeyInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "feature_flags" */
export type FeatureFlagsInsertInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Scalars['jsonb']['input']>;
  /** Name of the feature controlled by this flag */
  featureName?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the feature flag */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the feature is currently enabled */
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** Timestamp when the feature flag was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type FeatureFlagsMaxFields = {
  __typename?: 'featureFlagsMaxFields';
  /** Name of the feature controlled by this flag */
  featureName?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the feature flag */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the feature flag was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type FeatureFlagsMinFields = {
  __typename?: 'featureFlagsMinFields';
  /** Name of the feature controlled by this flag */
  featureName?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the feature flag */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the feature flag was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "feature_flags" */
export type FeatureFlagsMutationResponse = {
  __typename?: 'featureFlagsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<FeatureFlags>;
};

/** on_conflict condition type for table "feature_flags" */
export type FeatureFlagsOnConflict = {
  constraint: FeatureFlagsConstraint;
  updateColumns?: Array<FeatureFlagsUpdateColumn>;
  where?: InputMaybe<FeatureFlagsBoolExp>;
};

/** Ordering options when selecting data from "feature_flags". */
export type FeatureFlagsOrderBy = {
  allowedRoles?: InputMaybe<OrderBy>;
  featureName?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isEnabled?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: feature_flags */
export type FeatureFlagsPkColumnsInput = {
  /** Unique identifier for the feature flag */
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type FeatureFlagsPrependInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "feature_flags" */
export type FeatureFlagsSelectColumn =
  /** column name */
  | 'allowedRoles'
  /** column name */
  | 'featureName'
  /** column name */
  | 'id'
  /** column name */
  | 'isEnabled'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "feature_flags" */
export type FeatureFlagsSetInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Scalars['jsonb']['input']>;
  /** Name of the feature controlled by this flag */
  featureName?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the feature flag */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the feature is currently enabled */
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** Timestamp when the feature flag was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "featureFlags" */
export type FeatureFlagsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: FeatureFlagsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type FeatureFlagsStreamCursorValueInput = {
  /** JSON array of roles that can access this feature */
  allowedRoles?: InputMaybe<Scalars['jsonb']['input']>;
  /** Name of the feature controlled by this flag */
  featureName?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the feature flag */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the feature is currently enabled */
  isEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** Timestamp when the feature flag was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "feature_flags" */
export type FeatureFlagsUpdateColumn =
  /** column name */
  | 'allowedRoles'
  /** column name */
  | 'featureName'
  /** column name */
  | 'id'
  /** column name */
  | 'isEnabled'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type FeatureFlagsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<FeatureFlagsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<FeatureFlagsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<FeatureFlagsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<FeatureFlagsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<FeatureFlagsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<FeatureFlagsSetInput>;
  /** filter the rows which have to be updated */
  where: FeatureFlagsBoolExp;
};

/** columns and relationships of "files" */
export type Files = {
  __typename?: 'files';
  bucket: Scalars['String']['output'];
  /** Document category: contract, invoice, report, timesheet, correspondence, other */
  category?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  client?: Maybe<Clients>;
  /** Links document to a specific client */
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Type of file: document (MinIO) or avatar (Clerk) */
  fileType?: Maybe<Scalars['String']['output']>;
  filename: Scalars['String']['output'];
  id: Scalars['uuid']['output'];
  /** Whether document is publicly accessible within permissions */
  isPublic?: Maybe<Scalars['Boolean']['output']>;
  /** Additional document metadata as JSON */
  metadata?: Maybe<Scalars['jsonb']['output']>;
  mimetype?: Maybe<Scalars['String']['output']>;
  objectKey: Scalars['String']['output'];
  /** An object relationship */
  payroll?: Maybe<Payrolls>;
  /** Links document to a specific payroll */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  /** User who uploaded the document */
  uploadedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  uploader?: Maybe<Users>;
  url?: Maybe<Scalars['String']['output']>;
};


/** columns and relationships of "files" */
export type FilesMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "files" */
export type FilesAggregate = {
  __typename?: 'filesAggregate';
  aggregate?: Maybe<FilesAggregateFields>;
  nodes: Array<Files>;
};

/** aggregate fields of "files" */
export type FilesAggregateFields = {
  __typename?: 'filesAggregateFields';
  avg?: Maybe<FilesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FilesMaxFields>;
  min?: Maybe<FilesMinFields>;
  stddev?: Maybe<FilesStddevFields>;
  stddevPop?: Maybe<FilesStddevPopFields>;
  stddevSamp?: Maybe<FilesStddevSampFields>;
  sum?: Maybe<FilesSumFields>;
  varPop?: Maybe<FilesVarPopFields>;
  varSamp?: Maybe<FilesVarSampFields>;
  variance?: Maybe<FilesVarianceFields>;
};


/** aggregate fields of "files" */
export type FilesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<FilesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type FilesAppendInput = {
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type FilesAvgFields = {
  __typename?: 'filesAvgFields';
  size?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "files". All fields are combined with a logical 'AND'. */
export type FilesBoolExp = {
  _and?: InputMaybe<Array<FilesBoolExp>>;
  _not?: InputMaybe<FilesBoolExp>;
  _or?: InputMaybe<Array<FilesBoolExp>>;
  bucket?: InputMaybe<StringComparisonExp>;
  category?: InputMaybe<StringComparisonExp>;
  client?: InputMaybe<ClientsBoolExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  fileType?: InputMaybe<StringComparisonExp>;
  filename?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isPublic?: InputMaybe<BooleanComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  mimetype?: InputMaybe<StringComparisonExp>;
  objectKey?: InputMaybe<StringComparisonExp>;
  payroll?: InputMaybe<PayrollsBoolExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  size?: InputMaybe<IntComparisonExp>;
  uploadedBy?: InputMaybe<UuidComparisonExp>;
  uploader?: InputMaybe<UsersBoolExp>;
  url?: InputMaybe<StringComparisonExp>;
};

/** unique or primary key constraints on table "files" */
export type FilesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'files_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type FilesDeleteAtPathInput = {
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type FilesDeleteElemInput = {
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type FilesDeleteKeyInput = {
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "files" */
export type FilesIncInput = {
  size?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "files" */
export type FilesInsertInput = {
  bucket?: InputMaybe<Scalars['String']['input']>;
  /** Document category: contract, invoice, report, timesheet, correspondence, other */
  category?: InputMaybe<Scalars['String']['input']>;
  client?: InputMaybe<ClientsObjRelInsertInput>;
  /** Links document to a specific client */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Type of file: document (MinIO) or avatar (Clerk) */
  fileType?: InputMaybe<Scalars['String']['input']>;
  filename?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether document is publicly accessible within permissions */
  isPublic?: InputMaybe<Scalars['Boolean']['input']>;
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  mimetype?: InputMaybe<Scalars['String']['input']>;
  objectKey?: InputMaybe<Scalars['String']['input']>;
  payroll?: InputMaybe<PayrollsObjRelInsertInput>;
  /** Links document to a specific payroll */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  /** User who uploaded the document */
  uploadedBy?: InputMaybe<Scalars['uuid']['input']>;
  uploader?: InputMaybe<UsersObjRelInsertInput>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type FilesMaxFields = {
  __typename?: 'filesMaxFields';
  bucket?: Maybe<Scalars['String']['output']>;
  /** Document category: contract, invoice, report, timesheet, correspondence, other */
  category?: Maybe<Scalars['String']['output']>;
  /** Links document to a specific client */
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Type of file: document (MinIO) or avatar (Clerk) */
  fileType?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  mimetype?: Maybe<Scalars['String']['output']>;
  objectKey?: Maybe<Scalars['String']['output']>;
  /** Links document to a specific payroll */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  /** User who uploaded the document */
  uploadedBy?: Maybe<Scalars['uuid']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type FilesMinFields = {
  __typename?: 'filesMinFields';
  bucket?: Maybe<Scalars['String']['output']>;
  /** Document category: contract, invoice, report, timesheet, correspondence, other */
  category?: Maybe<Scalars['String']['output']>;
  /** Links document to a specific client */
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Type of file: document (MinIO) or avatar (Clerk) */
  fileType?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  mimetype?: Maybe<Scalars['String']['output']>;
  objectKey?: Maybe<Scalars['String']['output']>;
  /** Links document to a specific payroll */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  /** User who uploaded the document */
  uploadedBy?: Maybe<Scalars['uuid']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "files" */
export type FilesMutationResponse = {
  __typename?: 'filesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Files>;
};

/** on_conflict condition type for table "files" */
export type FilesOnConflict = {
  constraint: FilesConstraint;
  updateColumns?: Array<FilesUpdateColumn>;
  where?: InputMaybe<FilesBoolExp>;
};

/** Ordering options when selecting data from "files". */
export type FilesOrderBy = {
  bucket?: InputMaybe<OrderBy>;
  category?: InputMaybe<OrderBy>;
  client?: InputMaybe<ClientsOrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  fileType?: InputMaybe<OrderBy>;
  filename?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isPublic?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  mimetype?: InputMaybe<OrderBy>;
  objectKey?: InputMaybe<OrderBy>;
  payroll?: InputMaybe<PayrollsOrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  size?: InputMaybe<OrderBy>;
  uploadedBy?: InputMaybe<OrderBy>;
  uploader?: InputMaybe<UsersOrderBy>;
  url?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: files */
export type FilesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type FilesPrependInput = {
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "files" */
export type FilesSelectColumn =
  /** column name */
  | 'bucket'
  /** column name */
  | 'category'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'fileType'
  /** column name */
  | 'filename'
  /** column name */
  | 'id'
  /** column name */
  | 'isPublic'
  /** column name */
  | 'metadata'
  /** column name */
  | 'mimetype'
  /** column name */
  | 'objectKey'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'size'
  /** column name */
  | 'uploadedBy'
  /** column name */
  | 'url'
  | '%future added value';

/** input type for updating data in table "files" */
export type FilesSetInput = {
  bucket?: InputMaybe<Scalars['String']['input']>;
  /** Document category: contract, invoice, report, timesheet, correspondence, other */
  category?: InputMaybe<Scalars['String']['input']>;
  /** Links document to a specific client */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Type of file: document (MinIO) or avatar (Clerk) */
  fileType?: InputMaybe<Scalars['String']['input']>;
  filename?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether document is publicly accessible within permissions */
  isPublic?: InputMaybe<Scalars['Boolean']['input']>;
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  mimetype?: InputMaybe<Scalars['String']['input']>;
  objectKey?: InputMaybe<Scalars['String']['input']>;
  /** Links document to a specific payroll */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  /** User who uploaded the document */
  uploadedBy?: InputMaybe<Scalars['uuid']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type FilesStddevFields = {
  __typename?: 'filesStddevFields';
  size?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type FilesStddevPopFields = {
  __typename?: 'filesStddevPopFields';
  size?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type FilesStddevSampFields = {
  __typename?: 'filesStddevSampFields';
  size?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "files" */
export type FilesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: FilesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type FilesStreamCursorValueInput = {
  bucket?: InputMaybe<Scalars['String']['input']>;
  /** Document category: contract, invoice, report, timesheet, correspondence, other */
  category?: InputMaybe<Scalars['String']['input']>;
  /** Links document to a specific client */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Type of file: document (MinIO) or avatar (Clerk) */
  fileType?: InputMaybe<Scalars['String']['input']>;
  filename?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether document is publicly accessible within permissions */
  isPublic?: InputMaybe<Scalars['Boolean']['input']>;
  /** Additional document metadata as JSON */
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  mimetype?: InputMaybe<Scalars['String']['input']>;
  objectKey?: InputMaybe<Scalars['String']['input']>;
  /** Links document to a specific payroll */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
  /** User who uploaded the document */
  uploadedBy?: InputMaybe<Scalars['uuid']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type FilesSumFields = {
  __typename?: 'filesSumFields';
  size?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "files" */
export type FilesUpdateColumn =
  /** column name */
  | 'bucket'
  /** column name */
  | 'category'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'fileType'
  /** column name */
  | 'filename'
  /** column name */
  | 'id'
  /** column name */
  | 'isPublic'
  /** column name */
  | 'metadata'
  /** column name */
  | 'mimetype'
  /** column name */
  | 'objectKey'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'size'
  /** column name */
  | 'uploadedBy'
  /** column name */
  | 'url'
  | '%future added value';

export type FilesUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<FilesAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<FilesDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<FilesDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<FilesDeleteKeyInput>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<FilesIncInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<FilesPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<FilesSetInput>;
  /** filter the rows which have to be updated */
  where: FilesBoolExp;
};

/** aggregate varPop on columns */
export type FilesVarPopFields = {
  __typename?: 'filesVarPopFields';
  size?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type FilesVarSampFields = {
  __typename?: 'filesVarSampFields';
  size?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type FilesVarianceFields = {
  __typename?: 'filesVarianceFields';
  size?: Maybe<Scalars['Float']['output']>;
};

export type GeneratePayrollDatesArgs = {
  p_end_date?: InputMaybe<Scalars['date']['input']>;
  p_max_dates?: InputMaybe<Scalars['Int']['input']>;
  p_payroll_id?: InputMaybe<Scalars['uuid']['input']>;
  p_start_date?: InputMaybe<Scalars['date']['input']>;
};

export type GetLatestPayrollVersionArgs = {
  payroll_id?: InputMaybe<Scalars['uuid']['input']>;
};

export type GetPayrollVersionHistoryArgs = {
  payroll_id?: InputMaybe<Scalars['uuid']['input']>;
};

/** columns and relationships of "holidays" */
export type Holidays = {
  __typename?: 'holidays';
  /** ISO country code where the holiday is observed */
  countryCode: Scalars['bpchar']['output'];
  /** Timestamp when the holiday record was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Date of the holiday */
  date: Scalars['date']['output'];
  /** Unique identifier for the holiday */
  id: Scalars['uuid']['output'];
  /** Whether the holiday occurs on the same date each year */
  isFixed?: Maybe<Scalars['Boolean']['output']>;
  /** Whether the holiday is observed globally */
  isGlobal?: Maybe<Scalars['Boolean']['output']>;
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Int']['output']>;
  /** Name of the holiday in local language */
  localName: Scalars['String']['output'];
  /** Name of the holiday in English */
  name: Scalars['String']['output'];
  /** Array of regions within the country where the holiday applies */
  region?: Maybe<Array<Scalars['String']['output']>>;
  /** Array of holiday types (e.g., public, bank, religious) */
  types: Array<Scalars['String']['output']>;
  /** Timestamp when the holiday record was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "holidays" */
export type HolidaysAggregate = {
  __typename?: 'holidaysAggregate';
  aggregate?: Maybe<HolidaysAggregateFields>;
  nodes: Array<Holidays>;
};

/** aggregate fields of "holidays" */
export type HolidaysAggregateFields = {
  __typename?: 'holidaysAggregateFields';
  avg?: Maybe<HolidaysAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<HolidaysMaxFields>;
  min?: Maybe<HolidaysMinFields>;
  stddev?: Maybe<HolidaysStddevFields>;
  stddevPop?: Maybe<HolidaysStddevPopFields>;
  stddevSamp?: Maybe<HolidaysStddevSampFields>;
  sum?: Maybe<HolidaysSumFields>;
  varPop?: Maybe<HolidaysVarPopFields>;
  varSamp?: Maybe<HolidaysVarSampFields>;
  variance?: Maybe<HolidaysVarianceFields>;
};


/** aggregate fields of "holidays" */
export type HolidaysAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<HolidaysSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type HolidaysAvgFields = {
  __typename?: 'holidaysAvgFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "holidays". All fields are combined with a logical 'AND'. */
export type HolidaysBoolExp = {
  _and?: InputMaybe<Array<HolidaysBoolExp>>;
  _not?: InputMaybe<HolidaysBoolExp>;
  _or?: InputMaybe<Array<HolidaysBoolExp>>;
  countryCode?: InputMaybe<BpcharComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  date?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isFixed?: InputMaybe<BooleanComparisonExp>;
  isGlobal?: InputMaybe<BooleanComparisonExp>;
  launchYear?: InputMaybe<IntComparisonExp>;
  localName?: InputMaybe<StringComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  region?: InputMaybe<StringArrayComparisonExp>;
  types?: InputMaybe<StringArrayComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "holidays" */
export type HolidaysConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'holidays_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "holidays" */
export type HolidaysIncInput = {
  /** First year when the holiday was observed */
  launchYear?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "holidays" */
export type HolidaysInsertInput = {
  /** ISO country code where the holiday is observed */
  countryCode?: InputMaybe<Scalars['bpchar']['input']>;
  /** Timestamp when the holiday record was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Date of the holiday */
  date?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the holiday */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the holiday occurs on the same date each year */
  isFixed?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the holiday is observed globally */
  isGlobal?: InputMaybe<Scalars['Boolean']['input']>;
  /** First year when the holiday was observed */
  launchYear?: InputMaybe<Scalars['Int']['input']>;
  /** Name of the holiday in local language */
  localName?: InputMaybe<Scalars['String']['input']>;
  /** Name of the holiday in English */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Array of regions within the country where the holiday applies */
  region?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Array of holiday types (e.g., public, bank, religious) */
  types?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Timestamp when the holiday record was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type HolidaysMaxFields = {
  __typename?: 'holidaysMaxFields';
  /** ISO country code where the holiday is observed */
  countryCode?: Maybe<Scalars['bpchar']['output']>;
  /** Timestamp when the holiday record was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Date of the holiday */
  date?: Maybe<Scalars['date']['output']>;
  /** Unique identifier for the holiday */
  id?: Maybe<Scalars['uuid']['output']>;
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Int']['output']>;
  /** Name of the holiday in local language */
  localName?: Maybe<Scalars['String']['output']>;
  /** Name of the holiday in English */
  name?: Maybe<Scalars['String']['output']>;
  /** Array of regions within the country where the holiday applies */
  region?: Maybe<Array<Scalars['String']['output']>>;
  /** Array of holiday types (e.g., public, bank, religious) */
  types?: Maybe<Array<Scalars['String']['output']>>;
  /** Timestamp when the holiday record was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type HolidaysMinFields = {
  __typename?: 'holidaysMinFields';
  /** ISO country code where the holiday is observed */
  countryCode?: Maybe<Scalars['bpchar']['output']>;
  /** Timestamp when the holiday record was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Date of the holiday */
  date?: Maybe<Scalars['date']['output']>;
  /** Unique identifier for the holiday */
  id?: Maybe<Scalars['uuid']['output']>;
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Int']['output']>;
  /** Name of the holiday in local language */
  localName?: Maybe<Scalars['String']['output']>;
  /** Name of the holiday in English */
  name?: Maybe<Scalars['String']['output']>;
  /** Array of regions within the country where the holiday applies */
  region?: Maybe<Array<Scalars['String']['output']>>;
  /** Array of holiday types (e.g., public, bank, religious) */
  types?: Maybe<Array<Scalars['String']['output']>>;
  /** Timestamp when the holiday record was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "holidays" */
export type HolidaysMutationResponse = {
  __typename?: 'holidaysMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Holidays>;
};

/** on_conflict condition type for table "holidays" */
export type HolidaysOnConflict = {
  constraint: HolidaysConstraint;
  updateColumns?: Array<HolidaysUpdateColumn>;
  where?: InputMaybe<HolidaysBoolExp>;
};

/** Ordering options when selecting data from "holidays". */
export type HolidaysOrderBy = {
  countryCode?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  date?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isFixed?: InputMaybe<OrderBy>;
  isGlobal?: InputMaybe<OrderBy>;
  launchYear?: InputMaybe<OrderBy>;
  localName?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  region?: InputMaybe<OrderBy>;
  types?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: holidays */
export type HolidaysPkColumnsInput = {
  /** Unique identifier for the holiday */
  id: Scalars['uuid']['input'];
};

/** select columns of table "holidays" */
export type HolidaysSelectColumn =
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'date'
  /** column name */
  | 'id'
  /** column name */
  | 'isFixed'
  /** column name */
  | 'isGlobal'
  /** column name */
  | 'launchYear'
  /** column name */
  | 'localName'
  /** column name */
  | 'name'
  /** column name */
  | 'region'
  /** column name */
  | 'types'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "holidays" */
export type HolidaysSetInput = {
  /** ISO country code where the holiday is observed */
  countryCode?: InputMaybe<Scalars['bpchar']['input']>;
  /** Timestamp when the holiday record was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Date of the holiday */
  date?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the holiday */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the holiday occurs on the same date each year */
  isFixed?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the holiday is observed globally */
  isGlobal?: InputMaybe<Scalars['Boolean']['input']>;
  /** First year when the holiday was observed */
  launchYear?: InputMaybe<Scalars['Int']['input']>;
  /** Name of the holiday in local language */
  localName?: InputMaybe<Scalars['String']['input']>;
  /** Name of the holiday in English */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Array of regions within the country where the holiday applies */
  region?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Array of holiday types (e.g., public, bank, religious) */
  types?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Timestamp when the holiday record was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type HolidaysStddevFields = {
  __typename?: 'holidaysStddevFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type HolidaysStddevPopFields = {
  __typename?: 'holidaysStddevPopFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type HolidaysStddevSampFields = {
  __typename?: 'holidaysStddevSampFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "holidays" */
export type HolidaysStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: HolidaysStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type HolidaysStreamCursorValueInput = {
  /** ISO country code where the holiday is observed */
  countryCode?: InputMaybe<Scalars['bpchar']['input']>;
  /** Timestamp when the holiday record was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Date of the holiday */
  date?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the holiday */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the holiday occurs on the same date each year */
  isFixed?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the holiday is observed globally */
  isGlobal?: InputMaybe<Scalars['Boolean']['input']>;
  /** First year when the holiday was observed */
  launchYear?: InputMaybe<Scalars['Int']['input']>;
  /** Name of the holiday in local language */
  localName?: InputMaybe<Scalars['String']['input']>;
  /** Name of the holiday in English */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Array of regions within the country where the holiday applies */
  region?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Array of holiday types (e.g., public, bank, religious) */
  types?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Timestamp when the holiday record was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type HolidaysSumFields = {
  __typename?: 'holidaysSumFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "holidays" */
export type HolidaysUpdateColumn =
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'date'
  /** column name */
  | 'id'
  /** column name */
  | 'isFixed'
  /** column name */
  | 'isGlobal'
  /** column name */
  | 'launchYear'
  /** column name */
  | 'localName'
  /** column name */
  | 'name'
  /** column name */
  | 'region'
  /** column name */
  | 'types'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type HolidaysUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<HolidaysIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<HolidaysSetInput>;
  /** filter the rows which have to be updated */
  where: HolidaysBoolExp;
};

/** aggregate varPop on columns */
export type HolidaysVarPopFields = {
  __typename?: 'holidaysVarPopFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type HolidaysVarSampFields = {
  __typename?: 'holidaysVarSampFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type HolidaysVarianceFields = {
  __typename?: 'holidaysVarianceFields';
  /** First year when the holiday was observed */
  launchYear?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "latest_payroll_version_results" */
export type LatestPayrollVersionResults = {
  __typename?: 'latestPayrollVersionResults';
  active: Scalars['Boolean']['output'];
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id: Scalars['uuid']['output'];
  name: Scalars['String']['output'];
  payrollId: Scalars['uuid']['output'];
  queriedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber: Scalars['Int']['output'];
};

export type LatestPayrollVersionResultsAggregate = {
  __typename?: 'latestPayrollVersionResultsAggregate';
  aggregate?: Maybe<LatestPayrollVersionResultsAggregateFields>;
  nodes: Array<LatestPayrollVersionResults>;
};

/** aggregate fields of "latest_payroll_version_results" */
export type LatestPayrollVersionResultsAggregateFields = {
  __typename?: 'latestPayrollVersionResultsAggregateFields';
  avg?: Maybe<LatestPayrollVersionResultsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LatestPayrollVersionResultsMaxFields>;
  min?: Maybe<LatestPayrollVersionResultsMinFields>;
  stddev?: Maybe<LatestPayrollVersionResultsStddevFields>;
  stddevPop?: Maybe<LatestPayrollVersionResultsStddevPopFields>;
  stddevSamp?: Maybe<LatestPayrollVersionResultsStddevSampFields>;
  sum?: Maybe<LatestPayrollVersionResultsSumFields>;
  varPop?: Maybe<LatestPayrollVersionResultsVarPopFields>;
  varSamp?: Maybe<LatestPayrollVersionResultsVarSampFields>;
  variance?: Maybe<LatestPayrollVersionResultsVarianceFields>;
};


/** aggregate fields of "latest_payroll_version_results" */
export type LatestPayrollVersionResultsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type LatestPayrollVersionResultsAvgFields = {
  __typename?: 'latestPayrollVersionResultsAvgFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "latest_payroll_version_results". All fields are combined with a logical 'AND'. */
export type LatestPayrollVersionResultsBoolExp = {
  _and?: InputMaybe<Array<LatestPayrollVersionResultsBoolExp>>;
  _not?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
  _or?: InputMaybe<Array<LatestPayrollVersionResultsBoolExp>>;
  active?: InputMaybe<BooleanComparisonExp>;
  goLiveDate?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  queriedAt?: InputMaybe<TimestamptzComparisonExp>;
  versionNumber?: InputMaybe<IntComparisonExp>;
};

/** unique or primary key constraints on table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'latest_payroll_version_results_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsIncInput = {
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsInsertInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  queriedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type LatestPayrollVersionResultsMaxFields = {
  __typename?: 'latestPayrollVersionResultsMaxFields';
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  queriedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type LatestPayrollVersionResultsMinFields = {
  __typename?: 'latestPayrollVersionResultsMinFields';
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  queriedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsMutationResponse = {
  __typename?: 'latestPayrollVersionResultsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<LatestPayrollVersionResults>;
};

/** on_conflict condition type for table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsOnConflict = {
  constraint: LatestPayrollVersionResultsConstraint;
  updateColumns?: Array<LatestPayrollVersionResultsUpdateColumn>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};

/** Ordering options when selecting data from "latest_payroll_version_results". */
export type LatestPayrollVersionResultsOrderBy = {
  active?: InputMaybe<OrderBy>;
  goLiveDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  queriedAt?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: latest_payroll_version_results */
export type LatestPayrollVersionResultsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsSelectColumn =
  /** column name */
  | 'active'
  /** column name */
  | 'goLiveDate'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'queriedAt'
  /** column name */
  | 'versionNumber'
  | '%future added value';

/** input type for updating data in table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsSetInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  queriedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type LatestPayrollVersionResultsStddevFields = {
  __typename?: 'latestPayrollVersionResultsStddevFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type LatestPayrollVersionResultsStddevPopFields = {
  __typename?: 'latestPayrollVersionResultsStddevPopFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type LatestPayrollVersionResultsStddevSampFields = {
  __typename?: 'latestPayrollVersionResultsStddevSampFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "latestPayrollVersionResults" */
export type LatestPayrollVersionResultsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: LatestPayrollVersionResultsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type LatestPayrollVersionResultsStreamCursorValueInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  queriedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type LatestPayrollVersionResultsSumFields = {
  __typename?: 'latestPayrollVersionResultsSumFields';
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "latest_payroll_version_results" */
export type LatestPayrollVersionResultsUpdateColumn =
  /** column name */
  | 'active'
  /** column name */
  | 'goLiveDate'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'queriedAt'
  /** column name */
  | 'versionNumber'
  | '%future added value';

export type LatestPayrollVersionResultsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<LatestPayrollVersionResultsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<LatestPayrollVersionResultsSetInput>;
  /** filter the rows which have to be updated */
  where: LatestPayrollVersionResultsBoolExp;
};

/** aggregate varPop on columns */
export type LatestPayrollVersionResultsVarPopFields = {
  __typename?: 'latestPayrollVersionResultsVarPopFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type LatestPayrollVersionResultsVarSampFields = {
  __typename?: 'latestPayrollVersionResultsVarSampFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type LatestPayrollVersionResultsVarianceFields = {
  __typename?: 'latestPayrollVersionResultsVarianceFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "leave" */
export type Leave = {
  __typename?: 'leave';
  /** Timestamp when the leave request was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Last day of the leave period */
  endDate: Scalars['date']['output'];
  /** Unique identifier for the leave record */
  id: Scalars['uuid']['output'];
  /** An object relationship */
  leaveRequester: Users;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType: Scalars['String']['output'];
  /** An object relationship */
  leaveUser: Users;
  /** Reason provided for the leave request */
  reason?: Maybe<Scalars['String']['output']>;
  /** First day of the leave period */
  startDate: Scalars['date']['output'];
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: Maybe<Scalars['leave_status_enum']['output']>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the user taking leave */
  userId: Scalars['uuid']['output'];
};

/** aggregated selection of "leave" */
export type LeaveAggregate = {
  __typename?: 'leaveAggregate';
  aggregate?: Maybe<LeaveAggregateFields>;
  nodes: Array<Leave>;
};

export type LeaveAggregateBoolExp = {
  count?: InputMaybe<LeaveAggregateBoolExpCount>;
};

export type LeaveAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<LeaveSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LeaveBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "leave" */
export type LeaveAggregateFields = {
  __typename?: 'leaveAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<LeaveMaxFields>;
  min?: Maybe<LeaveMinFields>;
};


/** aggregate fields of "leave" */
export type LeaveAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<LeaveSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "leave" */
export type LeaveAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<LeaveMaxOrderBy>;
  min?: InputMaybe<LeaveMinOrderBy>;
};

/** input type for inserting array relation for remote table "leave" */
export type LeaveArrRelInsertInput = {
  data: Array<LeaveInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<LeaveOnConflict>;
};

/** Boolean expression to filter rows from the table "leave". All fields are combined with a logical 'AND'. */
export type LeaveBoolExp = {
  _and?: InputMaybe<Array<LeaveBoolExp>>;
  _not?: InputMaybe<LeaveBoolExp>;
  _or?: InputMaybe<Array<LeaveBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  endDate?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  leaveRequester?: InputMaybe<UsersBoolExp>;
  leaveType?: InputMaybe<StringComparisonExp>;
  leaveUser?: InputMaybe<UsersBoolExp>;
  reason?: InputMaybe<StringComparisonExp>;
  startDate?: InputMaybe<DateComparisonExp>;
  status?: InputMaybe<LeaveStatusEnumComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "leave" */
export type LeaveConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'leave_pkey'
  | '%future added value';

/** input type for inserting data into table "leave" */
export type LeaveInsertInput = {
  /** Timestamp when the leave request was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Last day of the leave period */
  endDate?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the leave record */
  id?: InputMaybe<Scalars['uuid']['input']>;
  leaveRequester?: InputMaybe<UsersObjRelInsertInput>;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType?: InputMaybe<Scalars['String']['input']>;
  leaveUser?: InputMaybe<UsersObjRelInsertInput>;
  /** Reason provided for the leave request */
  reason?: InputMaybe<Scalars['String']['input']>;
  /** First day of the leave period */
  startDate?: InputMaybe<Scalars['date']['input']>;
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: InputMaybe<Scalars['leave_status_enum']['input']>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the user taking leave */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type LeaveMaxFields = {
  __typename?: 'leaveMaxFields';
  /** Timestamp when the leave request was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Last day of the leave period */
  endDate?: Maybe<Scalars['date']['output']>;
  /** Unique identifier for the leave record */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType?: Maybe<Scalars['String']['output']>;
  /** Reason provided for the leave request */
  reason?: Maybe<Scalars['String']['output']>;
  /** First day of the leave period */
  startDate?: Maybe<Scalars['date']['output']>;
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: Maybe<Scalars['leave_status_enum']['output']>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the user taking leave */
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "leave" */
export type LeaveMaxOrderBy = {
  /** Timestamp when the leave request was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Last day of the leave period */
  endDate?: InputMaybe<OrderBy>;
  /** Unique identifier for the leave record */
  id?: InputMaybe<OrderBy>;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType?: InputMaybe<OrderBy>;
  /** Reason provided for the leave request */
  reason?: InputMaybe<OrderBy>;
  /** First day of the leave period */
  startDate?: InputMaybe<OrderBy>;
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: InputMaybe<OrderBy>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** Reference to the user taking leave */
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type LeaveMinFields = {
  __typename?: 'leaveMinFields';
  /** Timestamp when the leave request was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Last day of the leave period */
  endDate?: Maybe<Scalars['date']['output']>;
  /** Unique identifier for the leave record */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType?: Maybe<Scalars['String']['output']>;
  /** Reason provided for the leave request */
  reason?: Maybe<Scalars['String']['output']>;
  /** First day of the leave period */
  startDate?: Maybe<Scalars['date']['output']>;
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: Maybe<Scalars['leave_status_enum']['output']>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Reference to the user taking leave */
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "leave" */
export type LeaveMinOrderBy = {
  /** Timestamp when the leave request was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Last day of the leave period */
  endDate?: InputMaybe<OrderBy>;
  /** Unique identifier for the leave record */
  id?: InputMaybe<OrderBy>;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType?: InputMaybe<OrderBy>;
  /** Reason provided for the leave request */
  reason?: InputMaybe<OrderBy>;
  /** First day of the leave period */
  startDate?: InputMaybe<OrderBy>;
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: InputMaybe<OrderBy>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** Reference to the user taking leave */
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "leave" */
export type LeaveMutationResponse = {
  __typename?: 'leaveMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Leave>;
};

/** on_conflict condition type for table "leave" */
export type LeaveOnConflict = {
  constraint: LeaveConstraint;
  updateColumns?: Array<LeaveUpdateColumn>;
  where?: InputMaybe<LeaveBoolExp>;
};

/** Ordering options when selecting data from "leave". */
export type LeaveOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  endDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  leaveRequester?: InputMaybe<UsersOrderBy>;
  leaveType?: InputMaybe<OrderBy>;
  leaveUser?: InputMaybe<UsersOrderBy>;
  reason?: InputMaybe<OrderBy>;
  startDate?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: leave */
export type LeavePkColumnsInput = {
  /** Unique identifier for the leave record */
  id: Scalars['uuid']['input'];
};

/** select columns of table "leave" */
export type LeaveSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'endDate'
  /** column name */
  | 'id'
  /** column name */
  | 'leaveType'
  /** column name */
  | 'reason'
  /** column name */
  | 'startDate'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "leave" */
export type LeaveSetInput = {
  /** Timestamp when the leave request was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Last day of the leave period */
  endDate?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the leave record */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType?: InputMaybe<Scalars['String']['input']>;
  /** Reason provided for the leave request */
  reason?: InputMaybe<Scalars['String']['input']>;
  /** First day of the leave period */
  startDate?: InputMaybe<Scalars['date']['input']>;
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: InputMaybe<Scalars['leave_status_enum']['input']>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the user taking leave */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "leave" */
export type LeaveStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: LeaveStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type LeaveStreamCursorValueInput = {
  /** Timestamp when the leave request was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Last day of the leave period */
  endDate?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the leave record */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Type of leave (vacation, sick, personal, etc.) */
  leaveType?: InputMaybe<Scalars['String']['input']>;
  /** Reason provided for the leave request */
  reason?: InputMaybe<Scalars['String']['input']>;
  /** First day of the leave period */
  startDate?: InputMaybe<Scalars['date']['input']>;
  /** Current status of the leave request (Pending, Approved, Denied) */
  status?: InputMaybe<Scalars['leave_status_enum']['input']>;
  /** Timestamp when the leave request was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Reference to the user taking leave */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "leave" */
export type LeaveUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'endDate'
  /** column name */
  | 'id'
  /** column name */
  | 'leaveType'
  /** column name */
  | 'reason'
  /** column name */
  | 'startDate'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

export type LeaveUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<LeaveSetInput>;
  /** filter the rows which have to be updated */
  where: LeaveBoolExp;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  approve_leave_request: LeaveResponse;
  audit_event: AuditEventResponse;
  /** delete data from the table: "adjustment_rules" */
  bulkDeleteAdjustmentRules?: Maybe<AdjustmentRulesMutationResponse>;
  /** delete data from the table: "app_settings" */
  bulkDeleteAppSettings?: Maybe<AppSettingsMutationResponse>;
  /** delete data from the table: "audit.audit_log" */
  bulkDeleteAuditLogs?: Maybe<AuditLogsMutationResponse>;
  /** delete data from the table: "audit.auth_events" */
  bulkDeleteAuthEvents?: Maybe<AuthEventsMutationResponse>;
  /** delete data from the table: "billing_event_log" */
  bulkDeleteBillingEventLogs?: Maybe<BillingEventLogsMutationResponse>;
  /** delete data from the table: "billing_invoice" */
  bulkDeleteBillingInvoice?: Maybe<BillingInvoiceMutationResponse>;
  /** delete data from the table: "billing_items" */
  bulkDeleteBillingItems?: Maybe<BillingItemsMutationResponse>;
  /** delete data from the table: "billing_plan" */
  bulkDeleteBillingPlans?: Maybe<BillingPlansMutationResponse>;
  /** delete data from the table: "client_billing_assignment" */
  bulkDeleteClientBillingAssignments?: Maybe<ClientBillingAssignmentsMutationResponse>;
  /** delete data from the table: "client_external_systems" */
  bulkDeleteClientExternalSystems?: Maybe<ClientExternalSystemsMutationResponse>;
  /** delete data from the table: "clients" */
  bulkDeleteClients?: Maybe<ClientsMutationResponse>;
  /** delete data from the table: "audit.data_access_log" */
  bulkDeleteDataAccessLogs?: Maybe<DataAccessLogsMutationResponse>;
  /** delete data from the table: "external_systems" */
  bulkDeleteExternalSystems?: Maybe<ExternalSystemsMutationResponse>;
  /** delete data from the table: "feature_flags" */
  bulkDeleteFeatureFlags?: Maybe<FeatureFlagsMutationResponse>;
  /** delete data from the table: "files" */
  bulkDeleteFiles?: Maybe<FilesMutationResponse>;
  /** delete data from the table: "holidays" */
  bulkDeleteHolidays?: Maybe<HolidaysMutationResponse>;
  /** delete data from the table: "latest_payroll_version_results" */
  bulkDeleteLatestPayrollVersionResults?: Maybe<LatestPayrollVersionResultsMutationResponse>;
  /** delete data from the table: "leave" */
  bulkDeleteLeave?: Maybe<LeaveMutationResponse>;
  /** delete data from the table: "notes" */
  bulkDeleteNotes?: Maybe<NotesMutationResponse>;
  /** delete data from the table: "payroll_activation_results" */
  bulkDeletePayrollActivationResults?: Maybe<PayrollActivationResultsMutationResponse>;
  /** delete data from the table: "payroll_assignment_audit" */
  bulkDeletePayrollAssignmentAudits?: Maybe<PayrollAssignmentAuditsMutationResponse>;
  /** delete data from the table: "payroll_assignments" */
  bulkDeletePayrollAssignments?: Maybe<PayrollAssignmentsMutationResponse>;
  /** delete data from the table: "payroll_cycles" */
  bulkDeletePayrollCycles?: Maybe<PayrollCyclesMutationResponse>;
  /** delete data from the table: "payroll_date_types" */
  bulkDeletePayrollDateTypes?: Maybe<PayrollDateTypesMutationResponse>;
  /** delete data from the table: "payroll_dates" */
  bulkDeletePayrollDates?: Maybe<PayrollDatesMutationResponse>;
  /** delete data from the table: "payroll_required_skills" */
  bulkDeletePayrollRequiredSkill?: Maybe<PayrollRequiredSkillMutationResponse>;
  /** delete data from the table: "payroll_version_history_results" */
  bulkDeletePayrollVersionHistoryResults?: Maybe<PayrollVersionHistoryResultsMutationResponse>;
  /** delete data from the table: "payroll_version_results" */
  bulkDeletePayrollVersionResults?: Maybe<PayrollVersionResultsMutationResponse>;
  /** delete data from the table: "payrolls" */
  bulkDeletePayrolls?: Maybe<PayrollsMutationResponse>;
  /** delete data from the table: "permission_audit_log" */
  bulkDeletePermissionAuditLogs?: Maybe<PermissionAuditLogsMutationResponse>;
  /** delete data from the table: "audit.permission_changes" */
  bulkDeletePermissionChanges?: Maybe<PermissionChangesMutationResponse>;
  /** delete data from the table: "permission_overrides" */
  bulkDeletePermissionOverrides?: Maybe<PermissionOverridesMutationResponse>;
  /** delete data from the table: "permissions" */
  bulkDeletePermissions?: Maybe<PermissionsMutationResponse>;
  /** delete data from the table: "resources" */
  bulkDeleteResources?: Maybe<ResourcesMutationResponse>;
  /** delete data from the table: "role_permissions" */
  bulkDeleteRolePermissions?: Maybe<RolePermissionsMutationResponse>;
  /** delete data from the table: "roles" */
  bulkDeleteRoles?: Maybe<RolesMutationResponse>;
  /** delete data from the table: "audit.slow_queries" */
  bulkDeleteSlowQueries?: Maybe<SlowQueriesMutationResponse>;
  /** delete data from the table: "user_invitations" */
  bulkDeleteUserInvitations?: Maybe<UserInvitationsMutationResponse>;
  /** delete data from the table: "user_roles" */
  bulkDeleteUserRoles?: Maybe<UserRolesMutationResponse>;
  /** delete data from the table: "user_skills" */
  bulkDeleteUserSkill?: Maybe<UserSkillMutationResponse>;
  /** delete data from the table: "users" */
  bulkDeleteUsers?: Maybe<UsersMutationResponse>;
  /** delete data from the table: "users_role_backup" */
  bulkDeleteUsersRoleBackups?: Maybe<UsersRoleBackupMutationResponse>;
  /** delete data from the table: "work_schedule" */
  bulkDeleteWorkSchedule?: Maybe<WorkScheduleMutationResponse>;
  /** insert data into the table: "adjustment_rules" */
  bulkInsertAdjustmentRules?: Maybe<AdjustmentRulesMutationResponse>;
  /** insert data into the table: "app_settings" */
  bulkInsertAppSettings?: Maybe<AppSettingsMutationResponse>;
  /** insert data into the table: "audit.audit_log" */
  bulkInsertAuditLogs?: Maybe<AuditLogsMutationResponse>;
  /** insert data into the table: "audit.auth_events" */
  bulkInsertAuthEvents?: Maybe<AuthEventsMutationResponse>;
  /** insert data into the table: "billing_event_log" */
  bulkInsertBillingEventLogs?: Maybe<BillingEventLogsMutationResponse>;
  /** insert data into the table: "billing_invoice" */
  bulkInsertBillingInvoice?: Maybe<BillingInvoiceMutationResponse>;
  /** insert data into the table: "billing_items" */
  bulkInsertBillingItems?: Maybe<BillingItemsMutationResponse>;
  /** insert data into the table: "billing_plan" */
  bulkInsertBillingPlans?: Maybe<BillingPlansMutationResponse>;
  /** insert data into the table: "client_billing_assignment" */
  bulkInsertClientBillingAssignments?: Maybe<ClientBillingAssignmentsMutationResponse>;
  /** insert data into the table: "client_external_systems" */
  bulkInsertClientExternalSystems?: Maybe<ClientExternalSystemsMutationResponse>;
  /** insert data into the table: "clients" */
  bulkInsertClients?: Maybe<ClientsMutationResponse>;
  /** insert data into the table: "audit.data_access_log" */
  bulkInsertDataAccessLogs?: Maybe<DataAccessLogsMutationResponse>;
  /** insert data into the table: "external_systems" */
  bulkInsertExternalSystems?: Maybe<ExternalSystemsMutationResponse>;
  /** insert data into the table: "feature_flags" */
  bulkInsertFeatureFlags?: Maybe<FeatureFlagsMutationResponse>;
  /** insert data into the table: "files" */
  bulkInsertFiles?: Maybe<FilesMutationResponse>;
  /** insert data into the table: "holidays" */
  bulkInsertHolidays?: Maybe<HolidaysMutationResponse>;
  /** insert data into the table: "latest_payroll_version_results" */
  bulkInsertLatestPayrollVersionResults?: Maybe<LatestPayrollVersionResultsMutationResponse>;
  /** insert data into the table: "leave" */
  bulkInsertLeave?: Maybe<LeaveMutationResponse>;
  /** insert data into the table: "notes" */
  bulkInsertNotes?: Maybe<NotesMutationResponse>;
  /** insert data into the table: "payroll_activation_results" */
  bulkInsertPayrollActivationResults?: Maybe<PayrollActivationResultsMutationResponse>;
  /** insert data into the table: "payroll_assignment_audit" */
  bulkInsertPayrollAssignmentAudits?: Maybe<PayrollAssignmentAuditsMutationResponse>;
  /** insert data into the table: "payroll_assignments" */
  bulkInsertPayrollAssignments?: Maybe<PayrollAssignmentsMutationResponse>;
  /** insert data into the table: "payroll_cycles" */
  bulkInsertPayrollCycles?: Maybe<PayrollCyclesMutationResponse>;
  /** insert data into the table: "payroll_date_types" */
  bulkInsertPayrollDateTypes?: Maybe<PayrollDateTypesMutationResponse>;
  /** insert data into the table: "payroll_dates" */
  bulkInsertPayrollDates?: Maybe<PayrollDatesMutationResponse>;
  /** insert data into the table: "payroll_required_skills" */
  bulkInsertPayrollRequiredSkill?: Maybe<PayrollRequiredSkillMutationResponse>;
  /** insert data into the table: "payroll_version_history_results" */
  bulkInsertPayrollVersionHistoryResults?: Maybe<PayrollVersionHistoryResultsMutationResponse>;
  /** insert data into the table: "payroll_version_results" */
  bulkInsertPayrollVersionResults?: Maybe<PayrollVersionResultsMutationResponse>;
  /** insert data into the table: "payrolls" */
  bulkInsertPayrolls?: Maybe<PayrollsMutationResponse>;
  /** insert data into the table: "permission_audit_log" */
  bulkInsertPermissionAuditLogs?: Maybe<PermissionAuditLogsMutationResponse>;
  /** insert data into the table: "audit.permission_changes" */
  bulkInsertPermissionChanges?: Maybe<PermissionChangesMutationResponse>;
  /** insert data into the table: "permission_overrides" */
  bulkInsertPermissionOverrides?: Maybe<PermissionOverridesMutationResponse>;
  /** insert data into the table: "permissions" */
  bulkInsertPermissions?: Maybe<PermissionsMutationResponse>;
  /** insert data into the table: "resources" */
  bulkInsertResources?: Maybe<ResourcesMutationResponse>;
  /** insert data into the table: "role_permissions" */
  bulkInsertRolePermissions?: Maybe<RolePermissionsMutationResponse>;
  /** insert data into the table: "roles" */
  bulkInsertRoles?: Maybe<RolesMutationResponse>;
  /** insert data into the table: "audit.slow_queries" */
  bulkInsertSlowQueries?: Maybe<SlowQueriesMutationResponse>;
  /** insert data into the table: "user_invitations" */
  bulkInsertUserInvitations?: Maybe<UserInvitationsMutationResponse>;
  /** insert data into the table: "user_roles" */
  bulkInsertUserRoles?: Maybe<UserRolesMutationResponse>;
  /** insert data into the table: "user_skills" */
  bulkInsertUserSkill?: Maybe<UserSkillMutationResponse>;
  /** insert data into the table: "users" */
  bulkInsertUsers?: Maybe<UsersMutationResponse>;
  /** insert data into the table: "users_role_backup" */
  bulkInsertUsersRoleBackups?: Maybe<UsersRoleBackupMutationResponse>;
  /** insert data into the table: "work_schedule" */
  bulkInsertWorkSchedule?: Maybe<WorkScheduleMutationResponse>;
  /** update data of the table: "adjustment_rules" */
  bulkUpdateAdjustmentRules?: Maybe<AdjustmentRulesMutationResponse>;
  /** update data of the table: "app_settings" */
  bulkUpdateAppSettings?: Maybe<AppSettingsMutationResponse>;
  /** update data of the table: "audit.audit_log" */
  bulkUpdateAuditLogs?: Maybe<AuditLogsMutationResponse>;
  /** update data of the table: "audit.auth_events" */
  bulkUpdateAuthEvents?: Maybe<AuthEventsMutationResponse>;
  /** update data of the table: "billing_event_log" */
  bulkUpdateBillingEventLogs?: Maybe<BillingEventLogsMutationResponse>;
  /** update data of the table: "billing_invoice" */
  bulkUpdateBillingInvoice?: Maybe<BillingInvoiceMutationResponse>;
  /** update data of the table: "billing_items" */
  bulkUpdateBillingItems?: Maybe<BillingItemsMutationResponse>;
  /** update data of the table: "billing_plan" */
  bulkUpdateBillingPlans?: Maybe<BillingPlansMutationResponse>;
  /** update data of the table: "client_billing_assignment" */
  bulkUpdateClientBillingAssignments?: Maybe<ClientBillingAssignmentsMutationResponse>;
  /** update data of the table: "client_external_systems" */
  bulkUpdateClientExternalSystems?: Maybe<ClientExternalSystemsMutationResponse>;
  /** update data of the table: "clients" */
  bulkUpdateClients?: Maybe<ClientsMutationResponse>;
  /** update data of the table: "audit.data_access_log" */
  bulkUpdateDataAccessLogs?: Maybe<DataAccessLogsMutationResponse>;
  /** update data of the table: "external_systems" */
  bulkUpdateExternalSystems?: Maybe<ExternalSystemsMutationResponse>;
  /** update data of the table: "feature_flags" */
  bulkUpdateFeatureFlags?: Maybe<FeatureFlagsMutationResponse>;
  /** update data of the table: "files" */
  bulkUpdateFiles?: Maybe<FilesMutationResponse>;
  /** update data of the table: "holidays" */
  bulkUpdateHolidays?: Maybe<HolidaysMutationResponse>;
  /** update data of the table: "latest_payroll_version_results" */
  bulkUpdateLatestPayrollVersionResults?: Maybe<LatestPayrollVersionResultsMutationResponse>;
  /** update data of the table: "leave" */
  bulkUpdateLeave?: Maybe<LeaveMutationResponse>;
  /** update data of the table: "notes" */
  bulkUpdateNotes?: Maybe<NotesMutationResponse>;
  /** update data of the table: "payroll_activation_results" */
  bulkUpdatePayrollActivationResults?: Maybe<PayrollActivationResultsMutationResponse>;
  /** update data of the table: "payroll_assignment_audit" */
  bulkUpdatePayrollAssignmentAudits?: Maybe<PayrollAssignmentAuditsMutationResponse>;
  /** update data of the table: "payroll_assignments" */
  bulkUpdatePayrollAssignments?: Maybe<PayrollAssignmentsMutationResponse>;
  /** update data of the table: "payroll_cycles" */
  bulkUpdatePayrollCycles?: Maybe<PayrollCyclesMutationResponse>;
  /** update data of the table: "payroll_date_types" */
  bulkUpdatePayrollDateTypes?: Maybe<PayrollDateTypesMutationResponse>;
  /** update data of the table: "payroll_dates" */
  bulkUpdatePayrollDates?: Maybe<PayrollDatesMutationResponse>;
  /** update data of the table: "payroll_required_skills" */
  bulkUpdatePayrollRequiredSkill?: Maybe<PayrollRequiredSkillMutationResponse>;
  /** update data of the table: "payroll_version_history_results" */
  bulkUpdatePayrollVersionHistoryResults?: Maybe<PayrollVersionHistoryResultsMutationResponse>;
  /** update data of the table: "payroll_version_results" */
  bulkUpdatePayrollVersionResults?: Maybe<PayrollVersionResultsMutationResponse>;
  /** update data of the table: "payrolls" */
  bulkUpdatePayrolls?: Maybe<PayrollsMutationResponse>;
  /** update data of the table: "permission_audit_log" */
  bulkUpdatePermissionAuditLogs?: Maybe<PermissionAuditLogsMutationResponse>;
  /** update data of the table: "audit.permission_changes" */
  bulkUpdatePermissionChanges?: Maybe<PermissionChangesMutationResponse>;
  /** update data of the table: "permission_overrides" */
  bulkUpdatePermissionOverrides?: Maybe<PermissionOverridesMutationResponse>;
  /** update data of the table: "permissions" */
  bulkUpdatePermissions?: Maybe<PermissionsMutationResponse>;
  /** update data of the table: "resources" */
  bulkUpdateResources?: Maybe<ResourcesMutationResponse>;
  /** update data of the table: "role_permissions" */
  bulkUpdateRolePermissions?: Maybe<RolePermissionsMutationResponse>;
  /** update data of the table: "roles" */
  bulkUpdateRoles?: Maybe<RolesMutationResponse>;
  /** update data of the table: "audit.slow_queries" */
  bulkUpdateSlowQueries?: Maybe<SlowQueriesMutationResponse>;
  /** update data of the table: "user_invitations" */
  bulkUpdateUserInvitations?: Maybe<UserInvitationsMutationResponse>;
  /** update data of the table: "user_roles" */
  bulkUpdateUserRoles?: Maybe<UserRolesMutationResponse>;
  /** update data of the table: "user_skills" */
  bulkUpdateUserSkill?: Maybe<UserSkillMutationResponse>;
  /** update data of the table: "users" */
  bulkUpdateUsers?: Maybe<UsersMutationResponse>;
  /** update data of the table: "users_role_backup" */
  bulkUpdateUsersRoleBackups?: Maybe<UsersRoleBackupMutationResponse>;
  /** update data of the table: "work_schedule" */
  bulkUpdateWorkSchedule?: Maybe<WorkScheduleMutationResponse>;
  create_leave_request: LeaveResponse;
  create_payroll: PayrollResponse;
  create_staff_member: StaffResponse;
  /** delete single row from the table: "adjustment_rules" */
  deleteAdjustmentRuleById?: Maybe<AdjustmentRules>;
  /** delete single row from the table: "app_settings" */
  deleteAppSettingById?: Maybe<AppSettings>;
  /** delete single row from the table: "audit.audit_log" */
  deleteAuditLogById?: Maybe<AuditLogs>;
  /** delete data from the table: "audit.user_access_summary" */
  deleteAuditUserAccessSummary?: Maybe<AuditUserAccessSummaryMutationResponse>;
  /** delete single row from the table: "audit.auth_events" */
  deleteAuthEventById?: Maybe<AuthEvents>;
  /** delete single row from the table: "billing_event_log" */
  deleteBillingEventLogById?: Maybe<BillingEventLogs>;
  /** delete single row from the table: "billing_invoice" */
  deleteBillingInvoiceById?: Maybe<BillingInvoice>;
  /** delete data from the table: "billing_invoice_item" */
  deleteBillingInvoiceItem?: Maybe<BillingInvoiceItemMutationResponse>;
  /** delete single row from the table: "billing_invoice_item" */
  deleteBillingInvoiceItemById?: Maybe<BillingInvoiceItem>;
  /** delete single row from the table: "billing_items" */
  deleteBillingItemById?: Maybe<BillingItems>;
  /** delete single row from the table: "billing_periods" */
  deleteBillingPeriod?: Maybe<BillingPeriods>;
  /** delete data from the table: "billing_periods" */
  deleteBillingPeriods?: Maybe<BillingPeriodsMutationResponse>;
  /** delete single row from the table: "billing_plan" */
  deleteBillingPlanById?: Maybe<BillingPlans>;
  /** delete single row from the table: "client_billing_assignment" */
  deleteClientBillingAssignmentById?: Maybe<ClientBillingAssignments>;
  /** delete single row from the table: "clients" */
  deleteClientById?: Maybe<Clients>;
  /** delete single row from the table: "client_external_systems" */
  deleteClientExternalSystemById?: Maybe<ClientExternalSystems>;
  /** delete single row from the table: "audit.data_access_log" */
  deleteDataAccessLogById?: Maybe<DataAccessLogs>;
  /** delete data from the table: "data_backups" */
  deleteDataBackups?: Maybe<DataBackupsMutationResponse>;
  /** delete single row from the table: "data_backups" */
  deleteDataBackupsByPk?: Maybe<DataBackups>;
  /** delete data from the table: "email_drafts" */
  deleteEmailDrafts?: Maybe<EmailDraftsMutationResponse>;
  /** delete single row from the table: "email_drafts" */
  deleteEmailDraftsByPk?: Maybe<EmailDrafts>;
  /** delete data from the table: "email_send_logs" */
  deleteEmailSendLogs?: Maybe<EmailSendLogsMutationResponse>;
  /** delete single row from the table: "email_send_logs" */
  deleteEmailSendLogsByPk?: Maybe<EmailSendLogs>;
  /** delete data from the table: "email_templates" */
  deleteEmailTemplates?: Maybe<EmailTemplatesMutationResponse>;
  /** delete single row from the table: "email_templates" */
  deleteEmailTemplatesByPk?: Maybe<EmailTemplates>;
  /** delete single row from the table: "external_systems" */
  deleteExternalSystemById?: Maybe<ExternalSystems>;
  /** delete single row from the table: "feature_flags" */
  deleteFeatureFlagById?: Maybe<FeatureFlags>;
  /** delete single row from the table: "files" */
  deleteFileById?: Maybe<Files>;
  /** delete single row from the table: "holidays" */
  deleteHolidayById?: Maybe<Holidays>;
  /** delete single row from the table: "latest_payroll_version_results" */
  deleteLatestPayrollVersionResultById?: Maybe<LatestPayrollVersionResults>;
  /** delete single row from the table: "leave" */
  deleteLeaveById?: Maybe<Leave>;
  /** delete single row from the table: "notes" */
  deleteNoteById?: Maybe<Notes>;
  /** delete single row from the table: "payroll_activation_results" */
  deletePayrollActivationResultById?: Maybe<PayrollActivationResults>;
  /** delete single row from the table: "payroll_assignment_audit" */
  deletePayrollAssignmentAuditById?: Maybe<PayrollAssignmentAudits>;
  /** delete single row from the table: "payroll_assignments" */
  deletePayrollAssignmentById?: Maybe<PayrollAssignments>;
  /** delete single row from the table: "payrolls" */
  deletePayrollById?: Maybe<Payrolls>;
  /** delete single row from the table: "payroll_cycles" */
  deletePayrollCycleById?: Maybe<PayrollCycles>;
  /** delete single row from the table: "payroll_dates" */
  deletePayrollDateById?: Maybe<PayrollDates>;
  /** delete single row from the table: "payroll_date_types" */
  deletePayrollDateTypeById?: Maybe<PayrollDateTypes>;
  /** delete single row from the table: "payroll_version_history_results" */
  deletePayrollVersionHistoryResultById?: Maybe<PayrollVersionHistoryResults>;
  /** delete single row from the table: "payroll_version_results" */
  deletePayrollVersionResultById?: Maybe<PayrollVersionResults>;
  /** delete single row from the table: "permission_audit_log" */
  deletePermissionAuditLogById?: Maybe<PermissionAuditLogs>;
  /** delete single row from the table: "permissions" */
  deletePermissionById?: Maybe<Permissions>;
  /** delete single row from the table: "audit.permission_changes" */
  deletePermissionChangeById?: Maybe<PermissionChanges>;
  /** delete single row from the table: "permission_overrides" */
  deletePermissionOverrideById?: Maybe<PermissionOverrides>;
  /** delete data from the table: "position_admin_defaults" */
  deletePositionAdminDefaults?: Maybe<PositionAdminDefaultsMutationResponse>;
  /** delete single row from the table: "position_admin_defaults" */
  deletePositionAdminDefaultsByPk?: Maybe<PositionAdminDefaults>;
  /** delete data from the table: "rate_limits" */
  deleteRateLimits?: Maybe<RateLimitsMutationResponse>;
  /** delete single row from the table: "rate_limits" */
  deleteRateLimitsByPk?: Maybe<RateLimits>;
  /** delete single row from the table: "resources" */
  deleteResourceById?: Maybe<Resources>;
  /** delete single row from the table: "roles" */
  deleteRoleById?: Maybe<Roles>;
  /** delete single row from the table: "role_permissions" */
  deleteRolePermissionById?: Maybe<RolePermissions>;
  /** delete data from the table: "security_alerts" */
  deleteSecurityAlerts?: Maybe<SecurityAlertsMutationResponse>;
  /** delete single row from the table: "security_alerts" */
  deleteSecurityAlertsByPk?: Maybe<SecurityAlerts>;
  /** delete data from the table: "security_settings" */
  deleteSecuritySettings?: Maybe<SecuritySettingsMutationResponse>;
  /** delete single row from the table: "security_settings" */
  deleteSecuritySettingsByPk?: Maybe<SecuritySettings>;
  /** delete single row from the table: "audit.slow_queries" */
  deleteSlowQueryById?: Maybe<SlowQueries>;
  /** delete data from the table: "system_configuration" */
  deleteSystemConfiguration?: Maybe<SystemConfigurationMutationResponse>;
  /** delete single row from the table: "system_configuration" */
  deleteSystemConfigurationByPk?: Maybe<SystemConfiguration>;
  /** delete data from the table: "system_health" */
  deleteSystemHealth?: Maybe<SystemHealthMutationResponse>;
  /** delete single row from the table: "system_health" */
  deleteSystemHealthByPk?: Maybe<SystemHealth>;
  /** delete data from the table: "time_entries" */
  deleteTimeEntries?: Maybe<TimeEntriesMutationResponse>;
  /** delete single row from the table: "time_entries" */
  deleteTimeEntry?: Maybe<TimeEntries>;
  /** delete single row from the table: "users" */
  deleteUserById?: Maybe<Users>;
  /** delete data from the table: "user_email_template_favorites" */
  deleteUserEmailTemplateFavorites?: Maybe<UserEmailTemplateFavoritesMutationResponse>;
  /** delete single row from the table: "user_email_template_favorites" */
  deleteUserEmailTemplateFavoritesByPk?: Maybe<UserEmailTemplateFavorites>;
  /** delete single row from the table: "user_invitations" */
  deleteUserInvitationById?: Maybe<UserInvitations>;
  /** delete single row from the table: "user_roles" */
  deleteUserRoleById?: Maybe<UserRoles>;
  /** delete data from the table: "user_sessions" */
  deleteUserSessions?: Maybe<UserSessionsMutationResponse>;
  /** delete single row from the table: "user_sessions" */
  deleteUserSessionsByPk?: Maybe<UserSessions>;
  /** delete single row from the table: "work_schedule" */
  deleteWorkScheduleById?: Maybe<WorkSchedule>;
  generate_payroll_schedule: ScheduleResponse;
  /** insert a single row into the table: "adjustment_rules" */
  insertAdjustmentRule?: Maybe<AdjustmentRules>;
  /** insert a single row into the table: "app_settings" */
  insertAppSetting?: Maybe<AppSettings>;
  /** insert a single row into the table: "audit.audit_log" */
  insertAuditLog?: Maybe<AuditLogs>;
  /** insert data into the table: "audit.user_access_summary" */
  insertAuditUserAccessSummary?: Maybe<AuditUserAccessSummaryMutationResponse>;
  /** insert a single row into the table: "audit.user_access_summary" */
  insertAuditUserAccessSummaryOne?: Maybe<AuditUserAccessSummary>;
  /** insert a single row into the table: "audit.auth_events" */
  insertAuthEvent?: Maybe<AuthEvents>;
  /** insert a single row into the table: "billing_event_log" */
  insertBillingEventLog?: Maybe<BillingEventLogs>;
  /** insert a single row into the table: "billing_invoice" */
  insertBillingInvoice?: Maybe<BillingInvoice>;
  /** insert data into the table: "billing_invoice_item" */
  insertBillingInvoiceItem?: Maybe<BillingInvoiceItemMutationResponse>;
  /** insert a single row into the table: "billing_invoice_item" */
  insertBillingInvoiceItemOne?: Maybe<BillingInvoiceItem>;
  /** insert a single row into the table: "billing_items" */
  insertBillingItem?: Maybe<BillingItems>;
  /** insert data into the table: "billing_periods" */
  insertBillingPeriod?: Maybe<BillingPeriodsMutationResponse>;
  /** insert a single row into the table: "billing_periods" */
  insertBillingPeriodOne?: Maybe<BillingPeriods>;
  /** insert a single row into the table: "billing_plan" */
  insertBillingPlan?: Maybe<BillingPlans>;
  /** insert a single row into the table: "clients" */
  insertClient?: Maybe<Clients>;
  /** insert a single row into the table: "client_billing_assignment" */
  insertClientBillingAssignment?: Maybe<ClientBillingAssignments>;
  /** insert a single row into the table: "client_external_systems" */
  insertClientExternalSystem?: Maybe<ClientExternalSystems>;
  /** insert a single row into the table: "audit.data_access_log" */
  insertDataAccessLog?: Maybe<DataAccessLogs>;
  /** insert data into the table: "data_backups" */
  insertDataBackups?: Maybe<DataBackupsMutationResponse>;
  /** insert a single row into the table: "data_backups" */
  insertDataBackupsOne?: Maybe<DataBackups>;
  /** insert data into the table: "email_drafts" */
  insertEmailDrafts?: Maybe<EmailDraftsMutationResponse>;
  /** insert a single row into the table: "email_drafts" */
  insertEmailDraftsOne?: Maybe<EmailDrafts>;
  /** insert data into the table: "email_send_logs" */
  insertEmailSendLogs?: Maybe<EmailSendLogsMutationResponse>;
  /** insert a single row into the table: "email_send_logs" */
  insertEmailSendLogsOne?: Maybe<EmailSendLogs>;
  /** insert data into the table: "email_templates" */
  insertEmailTemplates?: Maybe<EmailTemplatesMutationResponse>;
  /** insert a single row into the table: "email_templates" */
  insertEmailTemplatesOne?: Maybe<EmailTemplates>;
  /** insert a single row into the table: "external_systems" */
  insertExternalSystem?: Maybe<ExternalSystems>;
  /** insert a single row into the table: "feature_flags" */
  insertFeatureFlag?: Maybe<FeatureFlags>;
  /** insert a single row into the table: "files" */
  insertFile?: Maybe<Files>;
  /** insert a single row into the table: "holidays" */
  insertHoliday?: Maybe<Holidays>;
  /** insert a single row into the table: "latest_payroll_version_results" */
  insertLatestPayrollVersionResult?: Maybe<LatestPayrollVersionResults>;
  /** insert a single row into the table: "leave" */
  insertLeave?: Maybe<Leave>;
  /** insert a single row into the table: "notes" */
  insertNote?: Maybe<Notes>;
  /** insert a single row into the table: "payrolls" */
  insertPayroll?: Maybe<Payrolls>;
  /** insert a single row into the table: "payroll_activation_results" */
  insertPayrollActivationResult?: Maybe<PayrollActivationResults>;
  /** insert a single row into the table: "payroll_assignments" */
  insertPayrollAssignment?: Maybe<PayrollAssignments>;
  /** insert a single row into the table: "payroll_assignment_audit" */
  insertPayrollAssignmentAudit?: Maybe<PayrollAssignmentAudits>;
  /** insert a single row into the table: "payroll_cycles" */
  insertPayrollCycle?: Maybe<PayrollCycles>;
  /** insert a single row into the table: "payroll_dates" */
  insertPayrollDate?: Maybe<PayrollDates>;
  /** insert a single row into the table: "payroll_date_types" */
  insertPayrollDateType?: Maybe<PayrollDateTypes>;
  /** insert a single row into the table: "payroll_required_skills" */
  insertPayrollRequiredSkill?: Maybe<PayrollRequiredSkill>;
  /** insert a single row into the table: "payroll_version_history_results" */
  insertPayrollVersionHistoryResult?: Maybe<PayrollVersionHistoryResults>;
  /** insert a single row into the table: "payroll_version_results" */
  insertPayrollVersionResult?: Maybe<PayrollVersionResults>;
  /** insert a single row into the table: "permissions" */
  insertPermission?: Maybe<Permissions>;
  /** insert a single row into the table: "permission_audit_log" */
  insertPermissionAuditLog?: Maybe<PermissionAuditLogs>;
  /** insert a single row into the table: "audit.permission_changes" */
  insertPermissionChange?: Maybe<PermissionChanges>;
  /** insert a single row into the table: "permission_overrides" */
  insertPermissionOverride?: Maybe<PermissionOverrides>;
  /** insert data into the table: "position_admin_defaults" */
  insertPositionAdminDefaults?: Maybe<PositionAdminDefaultsMutationResponse>;
  /** insert a single row into the table: "position_admin_defaults" */
  insertPositionAdminDefaultsOne?: Maybe<PositionAdminDefaults>;
  /** insert data into the table: "rate_limits" */
  insertRateLimits?: Maybe<RateLimitsMutationResponse>;
  /** insert a single row into the table: "rate_limits" */
  insertRateLimitsOne?: Maybe<RateLimits>;
  /** insert a single row into the table: "resources" */
  insertResource?: Maybe<Resources>;
  /** insert a single row into the table: "roles" */
  insertRole?: Maybe<Roles>;
  /** insert a single row into the table: "role_permissions" */
  insertRolePermission?: Maybe<RolePermissions>;
  /** insert data into the table: "security_alerts" */
  insertSecurityAlerts?: Maybe<SecurityAlertsMutationResponse>;
  /** insert a single row into the table: "security_alerts" */
  insertSecurityAlertsOne?: Maybe<SecurityAlerts>;
  /** insert data into the table: "security_settings" */
  insertSecuritySettings?: Maybe<SecuritySettingsMutationResponse>;
  /** insert a single row into the table: "security_settings" */
  insertSecuritySettingsOne?: Maybe<SecuritySettings>;
  /** insert a single row into the table: "audit.slow_queries" */
  insertSlowQuery?: Maybe<SlowQueries>;
  /** insert data into the table: "system_configuration" */
  insertSystemConfiguration?: Maybe<SystemConfigurationMutationResponse>;
  /** insert a single row into the table: "system_configuration" */
  insertSystemConfigurationOne?: Maybe<SystemConfiguration>;
  /** insert data into the table: "system_health" */
  insertSystemHealth?: Maybe<SystemHealthMutationResponse>;
  /** insert a single row into the table: "system_health" */
  insertSystemHealthOne?: Maybe<SystemHealth>;
  /** insert data into the table: "time_entries" */
  insertTimeEntry?: Maybe<TimeEntriesMutationResponse>;
  /** insert a single row into the table: "time_entries" */
  insertTimeEntryOne?: Maybe<TimeEntries>;
  /** insert a single row into the table: "users" */
  insertUser?: Maybe<Users>;
  /** insert data into the table: "user_email_template_favorites" */
  insertUserEmailTemplateFavorites?: Maybe<UserEmailTemplateFavoritesMutationResponse>;
  /** insert a single row into the table: "user_email_template_favorites" */
  insertUserEmailTemplateFavoritesOne?: Maybe<UserEmailTemplateFavorites>;
  /** insert a single row into the table: "user_invitations" */
  insertUserInvitation?: Maybe<UserInvitations>;
  /** insert a single row into the table: "user_roles" */
  insertUserRole?: Maybe<UserRoles>;
  /** insert data into the table: "user_sessions" */
  insertUserSessions?: Maybe<UserSessionsMutationResponse>;
  /** insert a single row into the table: "user_sessions" */
  insertUserSessionsOne?: Maybe<UserSessions>;
  /** insert a single row into the table: "user_skills" */
  insertUserSkill?: Maybe<UserSkill>;
  /** insert a single row into the table: "users_role_backup" */
  insertUsersRoleBackup?: Maybe<UsersRoleBackup>;
  /** insert a single row into the table: "work_schedule" */
  insertWorkSchedule?: Maybe<WorkSchedule>;
  /** update single row of the table: "adjustment_rules" */
  updateAdjustmentRuleById?: Maybe<AdjustmentRules>;
  /** update multiples rows of table: "adjustment_rules" */
  updateAdjustmentRulesMany?: Maybe<Array<Maybe<AdjustmentRulesMutationResponse>>>;
  /** update single row of the table: "app_settings" */
  updateAppSettingById?: Maybe<AppSettings>;
  /** update multiples rows of table: "app_settings" */
  updateAppSettingsMany?: Maybe<Array<Maybe<AppSettingsMutationResponse>>>;
  /** update single row of the table: "audit.audit_log" */
  updateAuditLogById?: Maybe<AuditLogs>;
  /** update multiples rows of table: "audit.audit_log" */
  updateAuditLogsMany?: Maybe<Array<Maybe<AuditLogsMutationResponse>>>;
  /** update data of the table: "audit.user_access_summary" */
  updateAuditUserAccessSummary?: Maybe<AuditUserAccessSummaryMutationResponse>;
  /** update multiples rows of table: "audit.user_access_summary" */
  updateAuditUserAccessSummaryMany?: Maybe<Array<Maybe<AuditUserAccessSummaryMutationResponse>>>;
  /** update single row of the table: "audit.auth_events" */
  updateAuthEventById?: Maybe<AuthEvents>;
  /** update multiples rows of table: "audit.auth_events" */
  updateAuthEventsMany?: Maybe<Array<Maybe<AuthEventsMutationResponse>>>;
  /** update single row of the table: "billing_event_log" */
  updateBillingEventLogById?: Maybe<BillingEventLogs>;
  /** update multiples rows of table: "billing_event_log" */
  updateBillingEventLogsMany?: Maybe<Array<Maybe<BillingEventLogsMutationResponse>>>;
  /** update single row of the table: "billing_invoice" */
  updateBillingInvoiceById?: Maybe<BillingInvoice>;
  /** update data of the table: "billing_invoice_item" */
  updateBillingInvoiceItem?: Maybe<BillingInvoiceItemMutationResponse>;
  /** update single row of the table: "billing_invoice_item" */
  updateBillingInvoiceItemById?: Maybe<BillingInvoiceItem>;
  /** update multiples rows of table: "billing_invoice_item" */
  updateBillingInvoiceItemMany?: Maybe<Array<Maybe<BillingInvoiceItemMutationResponse>>>;
  /** update multiples rows of table: "billing_invoice" */
  updateBillingInvoiceMany?: Maybe<Array<Maybe<BillingInvoiceMutationResponse>>>;
  /** update single row of the table: "billing_items" */
  updateBillingItemById?: Maybe<BillingItems>;
  /** update multiples rows of table: "billing_items" */
  updateBillingItemsMany?: Maybe<Array<Maybe<BillingItemsMutationResponse>>>;
  /** update single row of the table: "billing_periods" */
  updateBillingPeriod?: Maybe<BillingPeriods>;
  /** update data of the table: "billing_periods" */
  updateBillingPeriods?: Maybe<BillingPeriodsMutationResponse>;
  /** update multiples rows of table: "billing_periods" */
  updateBillingPeriodsMany?: Maybe<Array<Maybe<BillingPeriodsMutationResponse>>>;
  /** update single row of the table: "billing_plan" */
  updateBillingPlanById?: Maybe<BillingPlans>;
  /** update multiples rows of table: "billing_plan" */
  updateBillingPlansMany?: Maybe<Array<Maybe<BillingPlansMutationResponse>>>;
  /** update single row of the table: "client_billing_assignment" */
  updateClientBillingAssignmentById?: Maybe<ClientBillingAssignments>;
  /** update multiples rows of table: "client_billing_assignment" */
  updateClientBillingAssignmentsMany?: Maybe<Array<Maybe<ClientBillingAssignmentsMutationResponse>>>;
  /** update single row of the table: "clients" */
  updateClientById?: Maybe<Clients>;
  /** update single row of the table: "client_external_systems" */
  updateClientExternalSystemById?: Maybe<ClientExternalSystems>;
  /** update multiples rows of table: "client_external_systems" */
  updateClientExternalSystemsMany?: Maybe<Array<Maybe<ClientExternalSystemsMutationResponse>>>;
  /** update multiples rows of table: "clients" */
  updateClientsMany?: Maybe<Array<Maybe<ClientsMutationResponse>>>;
  /** update single row of the table: "audit.data_access_log" */
  updateDataAccessLogById?: Maybe<DataAccessLogs>;
  /** update multiples rows of table: "audit.data_access_log" */
  updateDataAccessLogsMany?: Maybe<Array<Maybe<DataAccessLogsMutationResponse>>>;
  /** update data of the table: "data_backups" */
  updateDataBackups?: Maybe<DataBackupsMutationResponse>;
  /** update single row of the table: "data_backups" */
  updateDataBackupsByPk?: Maybe<DataBackups>;
  /** update multiples rows of table: "data_backups" */
  updateDataBackupsMany?: Maybe<Array<Maybe<DataBackupsMutationResponse>>>;
  /** update data of the table: "email_drafts" */
  updateEmailDrafts?: Maybe<EmailDraftsMutationResponse>;
  /** update single row of the table: "email_drafts" */
  updateEmailDraftsByPk?: Maybe<EmailDrafts>;
  /** update multiples rows of table: "email_drafts" */
  updateEmailDraftsMany?: Maybe<Array<Maybe<EmailDraftsMutationResponse>>>;
  /** update data of the table: "email_send_logs" */
  updateEmailSendLogs?: Maybe<EmailSendLogsMutationResponse>;
  /** update single row of the table: "email_send_logs" */
  updateEmailSendLogsByPk?: Maybe<EmailSendLogs>;
  /** update multiples rows of table: "email_send_logs" */
  updateEmailSendLogsMany?: Maybe<Array<Maybe<EmailSendLogsMutationResponse>>>;
  /** update data of the table: "email_templates" */
  updateEmailTemplates?: Maybe<EmailTemplatesMutationResponse>;
  /** update single row of the table: "email_templates" */
  updateEmailTemplatesByPk?: Maybe<EmailTemplates>;
  /** update multiples rows of table: "email_templates" */
  updateEmailTemplatesMany?: Maybe<Array<Maybe<EmailTemplatesMutationResponse>>>;
  /** update single row of the table: "external_systems" */
  updateExternalSystemById?: Maybe<ExternalSystems>;
  /** update multiples rows of table: "external_systems" */
  updateExternalSystemsMany?: Maybe<Array<Maybe<ExternalSystemsMutationResponse>>>;
  /** update single row of the table: "feature_flags" */
  updateFeatureFlagById?: Maybe<FeatureFlags>;
  /** update multiples rows of table: "feature_flags" */
  updateFeatureFlagsMany?: Maybe<Array<Maybe<FeatureFlagsMutationResponse>>>;
  /** update single row of the table: "files" */
  updateFileById?: Maybe<Files>;
  /** update multiples rows of table: "files" */
  updateFilesMany?: Maybe<Array<Maybe<FilesMutationResponse>>>;
  /** update single row of the table: "holidays" */
  updateHolidayById?: Maybe<Holidays>;
  /** update multiples rows of table: "holidays" */
  updateHolidaysMany?: Maybe<Array<Maybe<HolidaysMutationResponse>>>;
  /** update single row of the table: "latest_payroll_version_results" */
  updateLatestPayrollVersionResultById?: Maybe<LatestPayrollVersionResults>;
  /** update multiples rows of table: "latest_payroll_version_results" */
  updateLatestPayrollVersionResultsMany?: Maybe<Array<Maybe<LatestPayrollVersionResultsMutationResponse>>>;
  /** update single row of the table: "leave" */
  updateLeaveById?: Maybe<Leave>;
  /** update multiples rows of table: "leave" */
  updateLeaveMany?: Maybe<Array<Maybe<LeaveMutationResponse>>>;
  /** update single row of the table: "notes" */
  updateNoteById?: Maybe<Notes>;
  /** update multiples rows of table: "notes" */
  updateNotesMany?: Maybe<Array<Maybe<NotesMutationResponse>>>;
  /** update single row of the table: "payroll_activation_results" */
  updatePayrollActivationResultById?: Maybe<PayrollActivationResults>;
  /** update multiples rows of table: "payroll_activation_results" */
  updatePayrollActivationResultsMany?: Maybe<Array<Maybe<PayrollActivationResultsMutationResponse>>>;
  /** update single row of the table: "payroll_assignment_audit" */
  updatePayrollAssignmentAuditById?: Maybe<PayrollAssignmentAudits>;
  /** update multiples rows of table: "payroll_assignment_audit" */
  updatePayrollAssignmentAuditsMany?: Maybe<Array<Maybe<PayrollAssignmentAuditsMutationResponse>>>;
  /** update single row of the table: "payroll_assignments" */
  updatePayrollAssignmentById?: Maybe<PayrollAssignments>;
  /** update multiples rows of table: "payroll_assignments" */
  updatePayrollAssignmentsMany?: Maybe<Array<Maybe<PayrollAssignmentsMutationResponse>>>;
  /** update single row of the table: "payrolls" */
  updatePayrollById?: Maybe<Payrolls>;
  /** update single row of the table: "payroll_cycles" */
  updatePayrollCycleById?: Maybe<PayrollCycles>;
  /** update multiples rows of table: "payroll_cycles" */
  updatePayrollCyclesMany?: Maybe<Array<Maybe<PayrollCyclesMutationResponse>>>;
  /** update single row of the table: "payroll_dates" */
  updatePayrollDateById?: Maybe<PayrollDates>;
  /** update single row of the table: "payroll_date_types" */
  updatePayrollDateTypeById?: Maybe<PayrollDateTypes>;
  /** update multiples rows of table: "payroll_date_types" */
  updatePayrollDateTypesMany?: Maybe<Array<Maybe<PayrollDateTypesMutationResponse>>>;
  /** update multiples rows of table: "payroll_dates" */
  updatePayrollDatesMany?: Maybe<Array<Maybe<PayrollDatesMutationResponse>>>;
  /** update multiples rows of table: "payroll_required_skills" */
  updatePayrollRequiredSkillMany?: Maybe<Array<Maybe<PayrollRequiredSkillMutationResponse>>>;
  /** update single row of the table: "payroll_version_history_results" */
  updatePayrollVersionHistoryResultById?: Maybe<PayrollVersionHistoryResults>;
  /** update multiples rows of table: "payroll_version_history_results" */
  updatePayrollVersionHistoryResultsMany?: Maybe<Array<Maybe<PayrollVersionHistoryResultsMutationResponse>>>;
  /** update single row of the table: "payroll_version_results" */
  updatePayrollVersionResultById?: Maybe<PayrollVersionResults>;
  /** update multiples rows of table: "payroll_version_results" */
  updatePayrollVersionResultsMany?: Maybe<Array<Maybe<PayrollVersionResultsMutationResponse>>>;
  /** update multiples rows of table: "payrolls" */
  updatePayrollsMany?: Maybe<Array<Maybe<PayrollsMutationResponse>>>;
  /** update single row of the table: "permission_audit_log" */
  updatePermissionAuditLogById?: Maybe<PermissionAuditLogs>;
  /** update multiples rows of table: "permission_audit_log" */
  updatePermissionAuditLogsMany?: Maybe<Array<Maybe<PermissionAuditLogsMutationResponse>>>;
  /** update single row of the table: "permissions" */
  updatePermissionById?: Maybe<Permissions>;
  /** update single row of the table: "audit.permission_changes" */
  updatePermissionChangeById?: Maybe<PermissionChanges>;
  /** update multiples rows of table: "audit.permission_changes" */
  updatePermissionChangesMany?: Maybe<Array<Maybe<PermissionChangesMutationResponse>>>;
  /** update single row of the table: "permission_overrides" */
  updatePermissionOverrideById?: Maybe<PermissionOverrides>;
  /** update multiples rows of table: "permission_overrides" */
  updatePermissionOverridesMany?: Maybe<Array<Maybe<PermissionOverridesMutationResponse>>>;
  /** update multiples rows of table: "permissions" */
  updatePermissionsMany?: Maybe<Array<Maybe<PermissionsMutationResponse>>>;
  /** update data of the table: "position_admin_defaults" */
  updatePositionAdminDefaults?: Maybe<PositionAdminDefaultsMutationResponse>;
  /** update single row of the table: "position_admin_defaults" */
  updatePositionAdminDefaultsByPk?: Maybe<PositionAdminDefaults>;
  /** update multiples rows of table: "position_admin_defaults" */
  updatePositionAdminDefaultsMany?: Maybe<Array<Maybe<PositionAdminDefaultsMutationResponse>>>;
  /** update data of the table: "rate_limits" */
  updateRateLimits?: Maybe<RateLimitsMutationResponse>;
  /** update single row of the table: "rate_limits" */
  updateRateLimitsByPk?: Maybe<RateLimits>;
  /** update multiples rows of table: "rate_limits" */
  updateRateLimitsMany?: Maybe<Array<Maybe<RateLimitsMutationResponse>>>;
  /** update single row of the table: "resources" */
  updateResourceById?: Maybe<Resources>;
  /** update multiples rows of table: "resources" */
  updateResourcesMany?: Maybe<Array<Maybe<ResourcesMutationResponse>>>;
  /** update single row of the table: "roles" */
  updateRoleById?: Maybe<Roles>;
  /** update single row of the table: "role_permissions" */
  updateRolePermissionById?: Maybe<RolePermissions>;
  /** update multiples rows of table: "role_permissions" */
  updateRolePermissionsMany?: Maybe<Array<Maybe<RolePermissionsMutationResponse>>>;
  /** update multiples rows of table: "roles" */
  updateRolesMany?: Maybe<Array<Maybe<RolesMutationResponse>>>;
  /** update data of the table: "security_alerts" */
  updateSecurityAlerts?: Maybe<SecurityAlertsMutationResponse>;
  /** update single row of the table: "security_alerts" */
  updateSecurityAlertsByPk?: Maybe<SecurityAlerts>;
  /** update multiples rows of table: "security_alerts" */
  updateSecurityAlertsMany?: Maybe<Array<Maybe<SecurityAlertsMutationResponse>>>;
  /** update data of the table: "security_settings" */
  updateSecuritySettings?: Maybe<SecuritySettingsMutationResponse>;
  /** update single row of the table: "security_settings" */
  updateSecuritySettingsByPk?: Maybe<SecuritySettings>;
  /** update multiples rows of table: "security_settings" */
  updateSecuritySettingsMany?: Maybe<Array<Maybe<SecuritySettingsMutationResponse>>>;
  /** update multiples rows of table: "audit.slow_queries" */
  updateSlowQueriesMany?: Maybe<Array<Maybe<SlowQueriesMutationResponse>>>;
  /** update single row of the table: "audit.slow_queries" */
  updateSlowQueryById?: Maybe<SlowQueries>;
  /** update data of the table: "system_configuration" */
  updateSystemConfiguration?: Maybe<SystemConfigurationMutationResponse>;
  /** update single row of the table: "system_configuration" */
  updateSystemConfigurationByPk?: Maybe<SystemConfiguration>;
  /** update multiples rows of table: "system_configuration" */
  updateSystemConfigurationMany?: Maybe<Array<Maybe<SystemConfigurationMutationResponse>>>;
  /** update data of the table: "system_health" */
  updateSystemHealth?: Maybe<SystemHealthMutationResponse>;
  /** update single row of the table: "system_health" */
  updateSystemHealthByPk?: Maybe<SystemHealth>;
  /** update multiples rows of table: "system_health" */
  updateSystemHealthMany?: Maybe<Array<Maybe<SystemHealthMutationResponse>>>;
  /** update data of the table: "time_entries" */
  updateTimeEntries?: Maybe<TimeEntriesMutationResponse>;
  /** update multiples rows of table: "time_entries" */
  updateTimeEntriesMany?: Maybe<Array<Maybe<TimeEntriesMutationResponse>>>;
  /** update single row of the table: "time_entries" */
  updateTimeEntry?: Maybe<TimeEntries>;
  /** update single row of the table: "users" */
  updateUserById?: Maybe<Users>;
  /** update data of the table: "user_email_template_favorites" */
  updateUserEmailTemplateFavorites?: Maybe<UserEmailTemplateFavoritesMutationResponse>;
  /** update single row of the table: "user_email_template_favorites" */
  updateUserEmailTemplateFavoritesByPk?: Maybe<UserEmailTemplateFavorites>;
  /** update multiples rows of table: "user_email_template_favorites" */
  updateUserEmailTemplateFavoritesMany?: Maybe<Array<Maybe<UserEmailTemplateFavoritesMutationResponse>>>;
  /** update single row of the table: "user_invitations" */
  updateUserInvitationById?: Maybe<UserInvitations>;
  /** update multiples rows of table: "user_invitations" */
  updateUserInvitationsMany?: Maybe<Array<Maybe<UserInvitationsMutationResponse>>>;
  /** update single row of the table: "user_roles" */
  updateUserRoleById?: Maybe<UserRoles>;
  /** update multiples rows of table: "user_roles" */
  updateUserRolesMany?: Maybe<Array<Maybe<UserRolesMutationResponse>>>;
  /** update data of the table: "user_sessions" */
  updateUserSessions?: Maybe<UserSessionsMutationResponse>;
  /** update single row of the table: "user_sessions" */
  updateUserSessionsByPk?: Maybe<UserSessions>;
  /** update multiples rows of table: "user_sessions" */
  updateUserSessionsMany?: Maybe<Array<Maybe<UserSessionsMutationResponse>>>;
  /** update multiples rows of table: "user_skills" */
  updateUserSkillMany?: Maybe<Array<Maybe<UserSkillMutationResponse>>>;
  /** update multiples rows of table: "users" */
  updateUsersMany?: Maybe<Array<Maybe<UsersMutationResponse>>>;
  /** update multiples rows of table: "users_role_backup" */
  updateUsersRoleBackupMany?: Maybe<Array<Maybe<UsersRoleBackupMutationResponse>>>;
  /** update single row of the table: "work_schedule" */
  updateWorkScheduleById?: Maybe<WorkSchedule>;
  /** update multiples rows of table: "work_schedule" */
  updateWorkScheduleMany?: Maybe<Array<Maybe<WorkScheduleMutationResponse>>>;
  update_payroll: PayrollResponse;
  update_staff_member: StaffResponse;
  update_user_role: UserRoleResponse;
};


/** mutation root */
export type Mutation_RootApprove_Leave_RequestArgs = {
  approvalStatus: Scalars['String']['input'];
  leaveId: Scalars['String']['input'];
  notes?: InputMaybe<Scalars['String']['input']>;
};


/** mutation root */
export type Mutation_RootAudit_EventArgs = {
  input: AuditEventInput;
};


/** mutation root */
export type Mutation_RootBulkDeleteAdjustmentRulesArgs = {
  where: AdjustmentRulesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteAppSettingsArgs = {
  where: AppSettingsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteAuditLogsArgs = {
  where: AuditLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteAuthEventsArgs = {
  where: AuthEventsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteBillingEventLogsArgs = {
  where: BillingEventLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteBillingInvoiceArgs = {
  where: BillingInvoiceBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteBillingItemsArgs = {
  where: BillingItemsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteBillingPlansArgs = {
  where: BillingPlansBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteClientBillingAssignmentsArgs = {
  where: ClientBillingAssignmentsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteClientExternalSystemsArgs = {
  where: ClientExternalSystemsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteClientsArgs = {
  where: ClientsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteDataAccessLogsArgs = {
  where: DataAccessLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteExternalSystemsArgs = {
  where: ExternalSystemsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteFeatureFlagsArgs = {
  where: FeatureFlagsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteFilesArgs = {
  where: FilesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteHolidaysArgs = {
  where: HolidaysBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteLatestPayrollVersionResultsArgs = {
  where: LatestPayrollVersionResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteLeaveArgs = {
  where: LeaveBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteNotesArgs = {
  where: NotesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollActivationResultsArgs = {
  where: PayrollActivationResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollAssignmentAuditsArgs = {
  where: PayrollAssignmentAuditsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollAssignmentsArgs = {
  where: PayrollAssignmentsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollCyclesArgs = {
  where: PayrollCyclesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollDateTypesArgs = {
  where: PayrollDateTypesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollDatesArgs = {
  where: PayrollDatesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollRequiredSkillArgs = {
  where: PayrollRequiredSkillBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollVersionHistoryResultsArgs = {
  where: PayrollVersionHistoryResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollVersionResultsArgs = {
  where: PayrollVersionResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePayrollsArgs = {
  where: PayrollsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePermissionAuditLogsArgs = {
  where: PermissionAuditLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePermissionChangesArgs = {
  where: PermissionChangesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePermissionOverridesArgs = {
  where: PermissionOverridesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeletePermissionsArgs = {
  where: PermissionsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteResourcesArgs = {
  where: ResourcesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteRolePermissionsArgs = {
  where: RolePermissionsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteRolesArgs = {
  where: RolesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteSlowQueriesArgs = {
  where: SlowQueriesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteUserInvitationsArgs = {
  where: UserInvitationsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteUserRolesArgs = {
  where: UserRolesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteUserSkillArgs = {
  where: UserSkillBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteUsersArgs = {
  where: UsersBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteUsersRoleBackupsArgs = {
  where: UsersRoleBackupBoolExp;
};


/** mutation root */
export type Mutation_RootBulkDeleteWorkScheduleArgs = {
  where: WorkScheduleBoolExp;
};


/** mutation root */
export type Mutation_RootBulkInsertAdjustmentRulesArgs = {
  objects: Array<AdjustmentRulesInsertInput>;
  onConflict?: InputMaybe<AdjustmentRulesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertAppSettingsArgs = {
  objects: Array<AppSettingsInsertInput>;
  onConflict?: InputMaybe<AppSettingsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertAuditLogsArgs = {
  objects: Array<AuditLogsInsertInput>;
  onConflict?: InputMaybe<AuditLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertAuthEventsArgs = {
  objects: Array<AuthEventsInsertInput>;
  onConflict?: InputMaybe<AuthEventsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertBillingEventLogsArgs = {
  objects: Array<BillingEventLogsInsertInput>;
  onConflict?: InputMaybe<BillingEventLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertBillingInvoiceArgs = {
  objects: Array<BillingInvoiceInsertInput>;
  onConflict?: InputMaybe<BillingInvoiceOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertBillingItemsArgs = {
  objects: Array<BillingItemsInsertInput>;
  onConflict?: InputMaybe<BillingItemsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertBillingPlansArgs = {
  objects: Array<BillingPlansInsertInput>;
  onConflict?: InputMaybe<BillingPlansOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertClientBillingAssignmentsArgs = {
  objects: Array<ClientBillingAssignmentsInsertInput>;
  onConflict?: InputMaybe<ClientBillingAssignmentsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertClientExternalSystemsArgs = {
  objects: Array<ClientExternalSystemsInsertInput>;
  onConflict?: InputMaybe<ClientExternalSystemsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertClientsArgs = {
  objects: Array<ClientsInsertInput>;
  onConflict?: InputMaybe<ClientsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertDataAccessLogsArgs = {
  objects: Array<DataAccessLogsInsertInput>;
  onConflict?: InputMaybe<DataAccessLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertExternalSystemsArgs = {
  objects: Array<ExternalSystemsInsertInput>;
  onConflict?: InputMaybe<ExternalSystemsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertFeatureFlagsArgs = {
  objects: Array<FeatureFlagsInsertInput>;
  onConflict?: InputMaybe<FeatureFlagsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertFilesArgs = {
  objects: Array<FilesInsertInput>;
  onConflict?: InputMaybe<FilesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertHolidaysArgs = {
  objects: Array<HolidaysInsertInput>;
  onConflict?: InputMaybe<HolidaysOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertLatestPayrollVersionResultsArgs = {
  objects: Array<LatestPayrollVersionResultsInsertInput>;
  onConflict?: InputMaybe<LatestPayrollVersionResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertLeaveArgs = {
  objects: Array<LeaveInsertInput>;
  onConflict?: InputMaybe<LeaveOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertNotesArgs = {
  objects: Array<NotesInsertInput>;
  onConflict?: InputMaybe<NotesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollActivationResultsArgs = {
  objects: Array<PayrollActivationResultsInsertInput>;
  onConflict?: InputMaybe<PayrollActivationResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollAssignmentAuditsArgs = {
  objects: Array<PayrollAssignmentAuditsInsertInput>;
  onConflict?: InputMaybe<PayrollAssignmentAuditsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollAssignmentsArgs = {
  objects: Array<PayrollAssignmentsInsertInput>;
  onConflict?: InputMaybe<PayrollAssignmentsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollCyclesArgs = {
  objects: Array<PayrollCyclesInsertInput>;
  onConflict?: InputMaybe<PayrollCyclesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollDateTypesArgs = {
  objects: Array<PayrollDateTypesInsertInput>;
  onConflict?: InputMaybe<PayrollDateTypesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollDatesArgs = {
  objects: Array<PayrollDatesInsertInput>;
  onConflict?: InputMaybe<PayrollDatesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollRequiredSkillArgs = {
  objects: Array<PayrollRequiredSkillInsertInput>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollVersionHistoryResultsArgs = {
  objects: Array<PayrollVersionHistoryResultsInsertInput>;
  onConflict?: InputMaybe<PayrollVersionHistoryResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollVersionResultsArgs = {
  objects: Array<PayrollVersionResultsInsertInput>;
  onConflict?: InputMaybe<PayrollVersionResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPayrollsArgs = {
  objects: Array<PayrollsInsertInput>;
  onConflict?: InputMaybe<PayrollsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPermissionAuditLogsArgs = {
  objects: Array<PermissionAuditLogsInsertInput>;
  onConflict?: InputMaybe<PermissionAuditLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPermissionChangesArgs = {
  objects: Array<PermissionChangesInsertInput>;
  onConflict?: InputMaybe<PermissionChangesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPermissionOverridesArgs = {
  objects: Array<PermissionOverridesInsertInput>;
  onConflict?: InputMaybe<PermissionOverridesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertPermissionsArgs = {
  objects: Array<PermissionsInsertInput>;
  onConflict?: InputMaybe<PermissionsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertResourcesArgs = {
  objects: Array<ResourcesInsertInput>;
  onConflict?: InputMaybe<ResourcesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertRolePermissionsArgs = {
  objects: Array<RolePermissionsInsertInput>;
  onConflict?: InputMaybe<RolePermissionsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertRolesArgs = {
  objects: Array<RolesInsertInput>;
  onConflict?: InputMaybe<RolesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertSlowQueriesArgs = {
  objects: Array<SlowQueriesInsertInput>;
  onConflict?: InputMaybe<SlowQueriesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertUserInvitationsArgs = {
  objects: Array<UserInvitationsInsertInput>;
  onConflict?: InputMaybe<UserInvitationsOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertUserRolesArgs = {
  objects: Array<UserRolesInsertInput>;
  onConflict?: InputMaybe<UserRolesOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertUserSkillArgs = {
  objects: Array<UserSkillInsertInput>;
};


/** mutation root */
export type Mutation_RootBulkInsertUsersArgs = {
  objects: Array<UsersInsertInput>;
  onConflict?: InputMaybe<UsersOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkInsertUsersRoleBackupsArgs = {
  objects: Array<UsersRoleBackupInsertInput>;
};


/** mutation root */
export type Mutation_RootBulkInsertWorkScheduleArgs = {
  objects: Array<WorkScheduleInsertInput>;
  onConflict?: InputMaybe<WorkScheduleOnConflict>;
};


/** mutation root */
export type Mutation_RootBulkUpdateAdjustmentRulesArgs = {
  _set?: InputMaybe<AdjustmentRulesSetInput>;
  where: AdjustmentRulesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateAppSettingsArgs = {
  _append?: InputMaybe<AppSettingsAppendInput>;
  _deleteAtPath?: InputMaybe<AppSettingsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<AppSettingsDeleteElemInput>;
  _deleteKey?: InputMaybe<AppSettingsDeleteKeyInput>;
  _prepend?: InputMaybe<AppSettingsPrependInput>;
  _set?: InputMaybe<AppSettingsSetInput>;
  where: AppSettingsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateAuditLogsArgs = {
  _append?: InputMaybe<AuditLogsAppendInput>;
  _deleteAtPath?: InputMaybe<AuditLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<AuditLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<AuditLogsDeleteKeyInput>;
  _prepend?: InputMaybe<AuditLogsPrependInput>;
  _set?: InputMaybe<AuditLogsSetInput>;
  where: AuditLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateAuthEventsArgs = {
  _append?: InputMaybe<AuthEventsAppendInput>;
  _deleteAtPath?: InputMaybe<AuthEventsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<AuthEventsDeleteElemInput>;
  _deleteKey?: InputMaybe<AuthEventsDeleteKeyInput>;
  _prepend?: InputMaybe<AuthEventsPrependInput>;
  _set?: InputMaybe<AuthEventsSetInput>;
  where: AuthEventsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateBillingEventLogsArgs = {
  _set?: InputMaybe<BillingEventLogsSetInput>;
  where: BillingEventLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateBillingInvoiceArgs = {
  _inc?: InputMaybe<BillingInvoiceIncInput>;
  _set?: InputMaybe<BillingInvoiceSetInput>;
  where: BillingInvoiceBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateBillingItemsArgs = {
  _inc?: InputMaybe<BillingItemsIncInput>;
  _set?: InputMaybe<BillingItemsSetInput>;
  where: BillingItemsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateBillingPlansArgs = {
  _inc?: InputMaybe<BillingPlansIncInput>;
  _set?: InputMaybe<BillingPlansSetInput>;
  where: BillingPlansBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateClientBillingAssignmentsArgs = {
  _inc?: InputMaybe<ClientBillingAssignmentsIncInput>;
  _set?: InputMaybe<ClientBillingAssignmentsSetInput>;
  where: ClientBillingAssignmentsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateClientExternalSystemsArgs = {
  _set?: InputMaybe<ClientExternalSystemsSetInput>;
  where: ClientExternalSystemsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateClientsArgs = {
  _set?: InputMaybe<ClientsSetInput>;
  where: ClientsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateDataAccessLogsArgs = {
  _append?: InputMaybe<DataAccessLogsAppendInput>;
  _deleteAtPath?: InputMaybe<DataAccessLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<DataAccessLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<DataAccessLogsDeleteKeyInput>;
  _inc?: InputMaybe<DataAccessLogsIncInput>;
  _prepend?: InputMaybe<DataAccessLogsPrependInput>;
  _set?: InputMaybe<DataAccessLogsSetInput>;
  where: DataAccessLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateExternalSystemsArgs = {
  _set?: InputMaybe<ExternalSystemsSetInput>;
  where: ExternalSystemsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateFeatureFlagsArgs = {
  _append?: InputMaybe<FeatureFlagsAppendInput>;
  _deleteAtPath?: InputMaybe<FeatureFlagsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FeatureFlagsDeleteElemInput>;
  _deleteKey?: InputMaybe<FeatureFlagsDeleteKeyInput>;
  _prepend?: InputMaybe<FeatureFlagsPrependInput>;
  _set?: InputMaybe<FeatureFlagsSetInput>;
  where: FeatureFlagsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateFilesArgs = {
  _append?: InputMaybe<FilesAppendInput>;
  _deleteAtPath?: InputMaybe<FilesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FilesDeleteElemInput>;
  _deleteKey?: InputMaybe<FilesDeleteKeyInput>;
  _inc?: InputMaybe<FilesIncInput>;
  _prepend?: InputMaybe<FilesPrependInput>;
  _set?: InputMaybe<FilesSetInput>;
  where: FilesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateHolidaysArgs = {
  _inc?: InputMaybe<HolidaysIncInput>;
  _set?: InputMaybe<HolidaysSetInput>;
  where: HolidaysBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateLatestPayrollVersionResultsArgs = {
  _inc?: InputMaybe<LatestPayrollVersionResultsIncInput>;
  _set?: InputMaybe<LatestPayrollVersionResultsSetInput>;
  where: LatestPayrollVersionResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateLeaveArgs = {
  _set?: InputMaybe<LeaveSetInput>;
  where: LeaveBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateNotesArgs = {
  _set?: InputMaybe<NotesSetInput>;
  where: NotesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollActivationResultsArgs = {
  _inc?: InputMaybe<PayrollActivationResultsIncInput>;
  _set?: InputMaybe<PayrollActivationResultsSetInput>;
  where: PayrollActivationResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollAssignmentAuditsArgs = {
  _set?: InputMaybe<PayrollAssignmentAuditsSetInput>;
  where: PayrollAssignmentAuditsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollAssignmentsArgs = {
  _set?: InputMaybe<PayrollAssignmentsSetInput>;
  where: PayrollAssignmentsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollCyclesArgs = {
  _set?: InputMaybe<PayrollCyclesSetInput>;
  where: PayrollCyclesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollDateTypesArgs = {
  _set?: InputMaybe<PayrollDateTypesSetInput>;
  where: PayrollDateTypesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollDatesArgs = {
  _set?: InputMaybe<PayrollDatesSetInput>;
  where: PayrollDatesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollRequiredSkillArgs = {
  _set?: InputMaybe<PayrollRequiredSkillSetInput>;
  where: PayrollRequiredSkillBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollVersionHistoryResultsArgs = {
  _inc?: InputMaybe<PayrollVersionHistoryResultsIncInput>;
  _set?: InputMaybe<PayrollVersionHistoryResultsSetInput>;
  where: PayrollVersionHistoryResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollVersionResultsArgs = {
  _inc?: InputMaybe<PayrollVersionResultsIncInput>;
  _set?: InputMaybe<PayrollVersionResultsSetInput>;
  where: PayrollVersionResultsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePayrollsArgs = {
  _inc?: InputMaybe<PayrollsIncInput>;
  _set?: InputMaybe<PayrollsSetInput>;
  where: PayrollsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePermissionAuditLogsArgs = {
  _append?: InputMaybe<PermissionAuditLogsAppendInput>;
  _deleteAtPath?: InputMaybe<PermissionAuditLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<PermissionAuditLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<PermissionAuditLogsDeleteKeyInput>;
  _prepend?: InputMaybe<PermissionAuditLogsPrependInput>;
  _set?: InputMaybe<PermissionAuditLogsSetInput>;
  where: PermissionAuditLogsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePermissionChangesArgs = {
  _append?: InputMaybe<PermissionChangesAppendInput>;
  _deleteAtPath?: InputMaybe<PermissionChangesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<PermissionChangesDeleteElemInput>;
  _deleteKey?: InputMaybe<PermissionChangesDeleteKeyInput>;
  _prepend?: InputMaybe<PermissionChangesPrependInput>;
  _set?: InputMaybe<PermissionChangesSetInput>;
  where: PermissionChangesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePermissionOverridesArgs = {
  _append?: InputMaybe<PermissionOverridesAppendInput>;
  _deleteAtPath?: InputMaybe<PermissionOverridesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<PermissionOverridesDeleteElemInput>;
  _deleteKey?: InputMaybe<PermissionOverridesDeleteKeyInput>;
  _prepend?: InputMaybe<PermissionOverridesPrependInput>;
  _set?: InputMaybe<PermissionOverridesSetInput>;
  where: PermissionOverridesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdatePermissionsArgs = {
  _set?: InputMaybe<PermissionsSetInput>;
  where: PermissionsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateResourcesArgs = {
  _set?: InputMaybe<ResourcesSetInput>;
  where: ResourcesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateRolePermissionsArgs = {
  _append?: InputMaybe<RolePermissionsAppendInput>;
  _deleteAtPath?: InputMaybe<RolePermissionsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<RolePermissionsDeleteElemInput>;
  _deleteKey?: InputMaybe<RolePermissionsDeleteKeyInput>;
  _prepend?: InputMaybe<RolePermissionsPrependInput>;
  _set?: InputMaybe<RolePermissionsSetInput>;
  where: RolePermissionsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateRolesArgs = {
  _inc?: InputMaybe<RolesIncInput>;
  _set?: InputMaybe<RolesSetInput>;
  where: RolesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateSlowQueriesArgs = {
  _set?: InputMaybe<SlowQueriesSetInput>;
  where: SlowQueriesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateUserInvitationsArgs = {
  _append?: InputMaybe<UserInvitationsAppendInput>;
  _deleteAtPath?: InputMaybe<UserInvitationsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<UserInvitationsDeleteElemInput>;
  _deleteKey?: InputMaybe<UserInvitationsDeleteKeyInput>;
  _prepend?: InputMaybe<UserInvitationsPrependInput>;
  _set?: InputMaybe<UserInvitationsSetInput>;
  where: UserInvitationsBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateUserRolesArgs = {
  _set?: InputMaybe<UserRolesSetInput>;
  where: UserRolesBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateUserSkillArgs = {
  _set?: InputMaybe<UserSkillSetInput>;
  where: UserSkillBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateUsersArgs = {
  _inc?: InputMaybe<UsersIncInput>;
  _set?: InputMaybe<UsersSetInput>;
  where: UsersBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateUsersRoleBackupsArgs = {
  _set?: InputMaybe<UsersRoleBackupSetInput>;
  where: UsersRoleBackupBoolExp;
};


/** mutation root */
export type Mutation_RootBulkUpdateWorkScheduleArgs = {
  _inc?: InputMaybe<WorkScheduleIncInput>;
  _set?: InputMaybe<WorkScheduleSetInput>;
  where: WorkScheduleBoolExp;
};


/** mutation root */
export type Mutation_RootCreate_Leave_RequestArgs = {
  endDate: Scalars['String']['input'];
  leaveType: Scalars['String']['input'];
  reason?: InputMaybe<Scalars['String']['input']>;
  startDate: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootCreate_PayrollArgs = {
  clientId: Scalars['String']['input'];
  complexity: Scalars['String']['input'];
  name: Scalars['String']['input'];
  processingTime: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootCreate_Staff_MemberArgs = {
  email: Scalars['String']['input'];
  managerId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  role: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootDeleteAdjustmentRuleByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteAppSettingByIdArgs = {
  id: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootDeleteAuditLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteAuditUserAccessSummaryArgs = {
  where: AuditUserAccessSummaryBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteAuthEventByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteBillingEventLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteBillingInvoiceByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteBillingInvoiceItemArgs = {
  where: BillingInvoiceItemBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteBillingInvoiceItemByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteBillingItemByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteBillingPeriodArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteBillingPeriodsArgs = {
  where: BillingPeriodsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteBillingPlanByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteClientBillingAssignmentByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteClientByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteClientExternalSystemByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteDataAccessLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteDataBackupsArgs = {
  where: DataBackupsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteDataBackupsByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteEmailDraftsArgs = {
  where: EmailDraftsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteEmailDraftsByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteEmailSendLogsArgs = {
  where: EmailSendLogsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteEmailSendLogsByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteEmailTemplatesArgs = {
  where: EmailTemplatesBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteEmailTemplatesByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteExternalSystemByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteFeatureFlagByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteFileByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteHolidayByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteLatestPayrollVersionResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteLeaveByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteNoteByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollActivationResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollAssignmentAuditByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollAssignmentByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollCycleByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollDateByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollDateTypeByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollVersionHistoryResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePayrollVersionResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePermissionAuditLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePermissionByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePermissionChangeByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePermissionOverrideByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeletePositionAdminDefaultsArgs = {
  where: PositionAdminDefaultsBoolExp;
};


/** mutation root */
export type Mutation_RootDeletePositionAdminDefaultsByPkArgs = {
  position: Scalars['user_position']['input'];
};


/** mutation root */
export type Mutation_RootDeleteRateLimitsArgs = {
  where: RateLimitsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteRateLimitsByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteResourceByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteRoleByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteRolePermissionByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteSecurityAlertsArgs = {
  where: SecurityAlertsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteSecurityAlertsByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteSecuritySettingsArgs = {
  where: SecuritySettingsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteSecuritySettingsByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteSlowQueryByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteSystemConfigurationArgs = {
  where: SystemConfigurationBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteSystemConfigurationByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteSystemHealthArgs = {
  where: SystemHealthBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteSystemHealthByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteTimeEntriesArgs = {
  where: TimeEntriesBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteTimeEntryArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteUserByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteUserEmailTemplateFavoritesArgs = {
  where: UserEmailTemplateFavoritesBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteUserEmailTemplateFavoritesByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteUserInvitationByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteUserRoleByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteUserSessionsArgs = {
  where: UserSessionsBoolExp;
};


/** mutation root */
export type Mutation_RootDeleteUserSessionsByPkArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootDeleteWorkScheduleByIdArgs = {
  id: Scalars['uuid']['input'];
};


/** mutation root */
export type Mutation_RootGenerate_Payroll_ScheduleArgs = {
  cycleType: Scalars['String']['input'];
  payrollId: Scalars['String']['input'];
  startDate: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootInsertAdjustmentRuleArgs = {
  object: AdjustmentRulesInsertInput;
  onConflict?: InputMaybe<AdjustmentRulesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertAppSettingArgs = {
  object: AppSettingsInsertInput;
  onConflict?: InputMaybe<AppSettingsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertAuditLogArgs = {
  object: AuditLogsInsertInput;
  onConflict?: InputMaybe<AuditLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertAuditUserAccessSummaryArgs = {
  objects: Array<AuditUserAccessSummaryInsertInput>;
};


/** mutation root */
export type Mutation_RootInsertAuditUserAccessSummaryOneArgs = {
  object: AuditUserAccessSummaryInsertInput;
};


/** mutation root */
export type Mutation_RootInsertAuthEventArgs = {
  object: AuthEventsInsertInput;
  onConflict?: InputMaybe<AuthEventsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingEventLogArgs = {
  object: BillingEventLogsInsertInput;
  onConflict?: InputMaybe<BillingEventLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingInvoiceArgs = {
  object: BillingInvoiceInsertInput;
  onConflict?: InputMaybe<BillingInvoiceOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingInvoiceItemArgs = {
  objects: Array<BillingInvoiceItemInsertInput>;
  onConflict?: InputMaybe<BillingInvoiceItemOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingInvoiceItemOneArgs = {
  object: BillingInvoiceItemInsertInput;
  onConflict?: InputMaybe<BillingInvoiceItemOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingItemArgs = {
  object: BillingItemsInsertInput;
  onConflict?: InputMaybe<BillingItemsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingPeriodArgs = {
  objects: Array<BillingPeriodsInsertInput>;
  onConflict?: InputMaybe<BillingPeriodsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingPeriodOneArgs = {
  object: BillingPeriodsInsertInput;
  onConflict?: InputMaybe<BillingPeriodsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertBillingPlanArgs = {
  object: BillingPlansInsertInput;
  onConflict?: InputMaybe<BillingPlansOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertClientArgs = {
  object: ClientsInsertInput;
  onConflict?: InputMaybe<ClientsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertClientBillingAssignmentArgs = {
  object: ClientBillingAssignmentsInsertInput;
  onConflict?: InputMaybe<ClientBillingAssignmentsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertClientExternalSystemArgs = {
  object: ClientExternalSystemsInsertInput;
  onConflict?: InputMaybe<ClientExternalSystemsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertDataAccessLogArgs = {
  object: DataAccessLogsInsertInput;
  onConflict?: InputMaybe<DataAccessLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertDataBackupsArgs = {
  objects: Array<DataBackupsInsertInput>;
  onConflict?: InputMaybe<DataBackupsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertDataBackupsOneArgs = {
  object: DataBackupsInsertInput;
  onConflict?: InputMaybe<DataBackupsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertEmailDraftsArgs = {
  objects: Array<EmailDraftsInsertInput>;
  onConflict?: InputMaybe<EmailDraftsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertEmailDraftsOneArgs = {
  object: EmailDraftsInsertInput;
  onConflict?: InputMaybe<EmailDraftsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertEmailSendLogsArgs = {
  objects: Array<EmailSendLogsInsertInput>;
  onConflict?: InputMaybe<EmailSendLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertEmailSendLogsOneArgs = {
  object: EmailSendLogsInsertInput;
  onConflict?: InputMaybe<EmailSendLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertEmailTemplatesArgs = {
  objects: Array<EmailTemplatesInsertInput>;
  onConflict?: InputMaybe<EmailTemplatesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertEmailTemplatesOneArgs = {
  object: EmailTemplatesInsertInput;
  onConflict?: InputMaybe<EmailTemplatesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertExternalSystemArgs = {
  object: ExternalSystemsInsertInput;
  onConflict?: InputMaybe<ExternalSystemsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertFeatureFlagArgs = {
  object: FeatureFlagsInsertInput;
  onConflict?: InputMaybe<FeatureFlagsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertFileArgs = {
  object: FilesInsertInput;
  onConflict?: InputMaybe<FilesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertHolidayArgs = {
  object: HolidaysInsertInput;
  onConflict?: InputMaybe<HolidaysOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertLatestPayrollVersionResultArgs = {
  object: LatestPayrollVersionResultsInsertInput;
  onConflict?: InputMaybe<LatestPayrollVersionResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertLeaveArgs = {
  object: LeaveInsertInput;
  onConflict?: InputMaybe<LeaveOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertNoteArgs = {
  object: NotesInsertInput;
  onConflict?: InputMaybe<NotesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollArgs = {
  object: PayrollsInsertInput;
  onConflict?: InputMaybe<PayrollsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollActivationResultArgs = {
  object: PayrollActivationResultsInsertInput;
  onConflict?: InputMaybe<PayrollActivationResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollAssignmentArgs = {
  object: PayrollAssignmentsInsertInput;
  onConflict?: InputMaybe<PayrollAssignmentsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollAssignmentAuditArgs = {
  object: PayrollAssignmentAuditsInsertInput;
  onConflict?: InputMaybe<PayrollAssignmentAuditsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollCycleArgs = {
  object: PayrollCyclesInsertInput;
  onConflict?: InputMaybe<PayrollCyclesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollDateArgs = {
  object: PayrollDatesInsertInput;
  onConflict?: InputMaybe<PayrollDatesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollDateTypeArgs = {
  object: PayrollDateTypesInsertInput;
  onConflict?: InputMaybe<PayrollDateTypesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollRequiredSkillArgs = {
  object: PayrollRequiredSkillInsertInput;
};


/** mutation root */
export type Mutation_RootInsertPayrollVersionHistoryResultArgs = {
  object: PayrollVersionHistoryResultsInsertInput;
  onConflict?: InputMaybe<PayrollVersionHistoryResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPayrollVersionResultArgs = {
  object: PayrollVersionResultsInsertInput;
  onConflict?: InputMaybe<PayrollVersionResultsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPermissionArgs = {
  object: PermissionsInsertInput;
  onConflict?: InputMaybe<PermissionsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPermissionAuditLogArgs = {
  object: PermissionAuditLogsInsertInput;
  onConflict?: InputMaybe<PermissionAuditLogsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPermissionChangeArgs = {
  object: PermissionChangesInsertInput;
  onConflict?: InputMaybe<PermissionChangesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPermissionOverrideArgs = {
  object: PermissionOverridesInsertInput;
  onConflict?: InputMaybe<PermissionOverridesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPositionAdminDefaultsArgs = {
  objects: Array<PositionAdminDefaultsInsertInput>;
  onConflict?: InputMaybe<PositionAdminDefaultsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertPositionAdminDefaultsOneArgs = {
  object: PositionAdminDefaultsInsertInput;
  onConflict?: InputMaybe<PositionAdminDefaultsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertRateLimitsArgs = {
  objects: Array<RateLimitsInsertInput>;
  onConflict?: InputMaybe<RateLimitsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertRateLimitsOneArgs = {
  object: RateLimitsInsertInput;
  onConflict?: InputMaybe<RateLimitsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertResourceArgs = {
  object: ResourcesInsertInput;
  onConflict?: InputMaybe<ResourcesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertRoleArgs = {
  object: RolesInsertInput;
  onConflict?: InputMaybe<RolesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertRolePermissionArgs = {
  object: RolePermissionsInsertInput;
  onConflict?: InputMaybe<RolePermissionsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSecurityAlertsArgs = {
  objects: Array<SecurityAlertsInsertInput>;
  onConflict?: InputMaybe<SecurityAlertsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSecurityAlertsOneArgs = {
  object: SecurityAlertsInsertInput;
  onConflict?: InputMaybe<SecurityAlertsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSecuritySettingsArgs = {
  objects: Array<SecuritySettingsInsertInput>;
  onConflict?: InputMaybe<SecuritySettingsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSecuritySettingsOneArgs = {
  object: SecuritySettingsInsertInput;
  onConflict?: InputMaybe<SecuritySettingsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSlowQueryArgs = {
  object: SlowQueriesInsertInput;
  onConflict?: InputMaybe<SlowQueriesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSystemConfigurationArgs = {
  objects: Array<SystemConfigurationInsertInput>;
  onConflict?: InputMaybe<SystemConfigurationOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSystemConfigurationOneArgs = {
  object: SystemConfigurationInsertInput;
  onConflict?: InputMaybe<SystemConfigurationOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSystemHealthArgs = {
  objects: Array<SystemHealthInsertInput>;
  onConflict?: InputMaybe<SystemHealthOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertSystemHealthOneArgs = {
  object: SystemHealthInsertInput;
  onConflict?: InputMaybe<SystemHealthOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertTimeEntryArgs = {
  objects: Array<TimeEntriesInsertInput>;
  onConflict?: InputMaybe<TimeEntriesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertTimeEntryOneArgs = {
  object: TimeEntriesInsertInput;
  onConflict?: InputMaybe<TimeEntriesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserArgs = {
  object: UsersInsertInput;
  onConflict?: InputMaybe<UsersOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserEmailTemplateFavoritesArgs = {
  objects: Array<UserEmailTemplateFavoritesInsertInput>;
  onConflict?: InputMaybe<UserEmailTemplateFavoritesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserEmailTemplateFavoritesOneArgs = {
  object: UserEmailTemplateFavoritesInsertInput;
  onConflict?: InputMaybe<UserEmailTemplateFavoritesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserInvitationArgs = {
  object: UserInvitationsInsertInput;
  onConflict?: InputMaybe<UserInvitationsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserRoleArgs = {
  object: UserRolesInsertInput;
  onConflict?: InputMaybe<UserRolesOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserSessionsArgs = {
  objects: Array<UserSessionsInsertInput>;
  onConflict?: InputMaybe<UserSessionsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserSessionsOneArgs = {
  object: UserSessionsInsertInput;
  onConflict?: InputMaybe<UserSessionsOnConflict>;
};


/** mutation root */
export type Mutation_RootInsertUserSkillArgs = {
  object: UserSkillInsertInput;
};


/** mutation root */
export type Mutation_RootInsertUsersRoleBackupArgs = {
  object: UsersRoleBackupInsertInput;
};


/** mutation root */
export type Mutation_RootInsertWorkScheduleArgs = {
  object: WorkScheduleInsertInput;
  onConflict?: InputMaybe<WorkScheduleOnConflict>;
};


/** mutation root */
export type Mutation_RootUpdateAdjustmentRuleByIdArgs = {
  _set?: InputMaybe<AdjustmentRulesSetInput>;
  pkColumns: AdjustmentRulesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateAdjustmentRulesManyArgs = {
  updates: Array<AdjustmentRulesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateAppSettingByIdArgs = {
  _append?: InputMaybe<AppSettingsAppendInput>;
  _deleteAtPath?: InputMaybe<AppSettingsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<AppSettingsDeleteElemInput>;
  _deleteKey?: InputMaybe<AppSettingsDeleteKeyInput>;
  _prepend?: InputMaybe<AppSettingsPrependInput>;
  _set?: InputMaybe<AppSettingsSetInput>;
  pkColumns: AppSettingsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateAppSettingsManyArgs = {
  updates: Array<AppSettingsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateAuditLogByIdArgs = {
  _append?: InputMaybe<AuditLogsAppendInput>;
  _deleteAtPath?: InputMaybe<AuditLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<AuditLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<AuditLogsDeleteKeyInput>;
  _prepend?: InputMaybe<AuditLogsPrependInput>;
  _set?: InputMaybe<AuditLogsSetInput>;
  pkColumns: AuditLogsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateAuditLogsManyArgs = {
  updates: Array<AuditLogsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateAuditUserAccessSummaryArgs = {
  _set?: InputMaybe<AuditUserAccessSummarySetInput>;
  where: AuditUserAccessSummaryBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateAuditUserAccessSummaryManyArgs = {
  updates: Array<AuditUserAccessSummaryUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateAuthEventByIdArgs = {
  _append?: InputMaybe<AuthEventsAppendInput>;
  _deleteAtPath?: InputMaybe<AuthEventsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<AuthEventsDeleteElemInput>;
  _deleteKey?: InputMaybe<AuthEventsDeleteKeyInput>;
  _prepend?: InputMaybe<AuthEventsPrependInput>;
  _set?: InputMaybe<AuthEventsSetInput>;
  pkColumns: AuthEventsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateAuthEventsManyArgs = {
  updates: Array<AuthEventsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateBillingEventLogByIdArgs = {
  _set?: InputMaybe<BillingEventLogsSetInput>;
  pkColumns: BillingEventLogsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateBillingEventLogsManyArgs = {
  updates: Array<BillingEventLogsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateBillingInvoiceByIdArgs = {
  _inc?: InputMaybe<BillingInvoiceIncInput>;
  _set?: InputMaybe<BillingInvoiceSetInput>;
  pkColumns: BillingInvoicePkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateBillingInvoiceItemArgs = {
  _inc?: InputMaybe<BillingInvoiceItemIncInput>;
  _set?: InputMaybe<BillingInvoiceItemSetInput>;
  where: BillingInvoiceItemBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateBillingInvoiceItemByIdArgs = {
  _inc?: InputMaybe<BillingInvoiceItemIncInput>;
  _set?: InputMaybe<BillingInvoiceItemSetInput>;
  pkColumns: BillingInvoiceItemPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateBillingInvoiceItemManyArgs = {
  updates: Array<BillingInvoiceItemUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateBillingInvoiceManyArgs = {
  updates: Array<BillingInvoiceUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateBillingItemByIdArgs = {
  _inc?: InputMaybe<BillingItemsIncInput>;
  _set?: InputMaybe<BillingItemsSetInput>;
  pkColumns: BillingItemsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateBillingItemsManyArgs = {
  updates: Array<BillingItemsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateBillingPeriodArgs = {
  _set?: InputMaybe<BillingPeriodsSetInput>;
  pkColumns: BillingPeriodsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateBillingPeriodsArgs = {
  _set?: InputMaybe<BillingPeriodsSetInput>;
  where: BillingPeriodsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateBillingPeriodsManyArgs = {
  updates: Array<BillingPeriodsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateBillingPlanByIdArgs = {
  _inc?: InputMaybe<BillingPlansIncInput>;
  _set?: InputMaybe<BillingPlansSetInput>;
  pkColumns: BillingPlansPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateBillingPlansManyArgs = {
  updates: Array<BillingPlansUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateClientBillingAssignmentByIdArgs = {
  _inc?: InputMaybe<ClientBillingAssignmentsIncInput>;
  _set?: InputMaybe<ClientBillingAssignmentsSetInput>;
  pkColumns: ClientBillingAssignmentsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateClientBillingAssignmentsManyArgs = {
  updates: Array<ClientBillingAssignmentsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateClientByIdArgs = {
  _set?: InputMaybe<ClientsSetInput>;
  pkColumns: ClientsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateClientExternalSystemByIdArgs = {
  _set?: InputMaybe<ClientExternalSystemsSetInput>;
  pkColumns: ClientExternalSystemsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateClientExternalSystemsManyArgs = {
  updates: Array<ClientExternalSystemsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateClientsManyArgs = {
  updates: Array<ClientsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateDataAccessLogByIdArgs = {
  _append?: InputMaybe<DataAccessLogsAppendInput>;
  _deleteAtPath?: InputMaybe<DataAccessLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<DataAccessLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<DataAccessLogsDeleteKeyInput>;
  _inc?: InputMaybe<DataAccessLogsIncInput>;
  _prepend?: InputMaybe<DataAccessLogsPrependInput>;
  _set?: InputMaybe<DataAccessLogsSetInput>;
  pkColumns: DataAccessLogsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateDataAccessLogsManyArgs = {
  updates: Array<DataAccessLogsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateDataBackupsArgs = {
  _append?: InputMaybe<DataBackupsAppendInput>;
  _deleteAtPath?: InputMaybe<DataBackupsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<DataBackupsDeleteElemInput>;
  _deleteKey?: InputMaybe<DataBackupsDeleteKeyInput>;
  _inc?: InputMaybe<DataBackupsIncInput>;
  _prepend?: InputMaybe<DataBackupsPrependInput>;
  _set?: InputMaybe<DataBackupsSetInput>;
  where: DataBackupsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateDataBackupsByPkArgs = {
  _append?: InputMaybe<DataBackupsAppendInput>;
  _deleteAtPath?: InputMaybe<DataBackupsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<DataBackupsDeleteElemInput>;
  _deleteKey?: InputMaybe<DataBackupsDeleteKeyInput>;
  _inc?: InputMaybe<DataBackupsIncInput>;
  _prepend?: InputMaybe<DataBackupsPrependInput>;
  _set?: InputMaybe<DataBackupsSetInput>;
  pkColumns: DataBackupsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateDataBackupsManyArgs = {
  updates: Array<DataBackupsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateEmailDraftsArgs = {
  _append?: InputMaybe<EmailDraftsAppendInput>;
  _deleteAtPath?: InputMaybe<EmailDraftsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EmailDraftsDeleteElemInput>;
  _deleteKey?: InputMaybe<EmailDraftsDeleteKeyInput>;
  _prepend?: InputMaybe<EmailDraftsPrependInput>;
  _set?: InputMaybe<EmailDraftsSetInput>;
  where: EmailDraftsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateEmailDraftsByPkArgs = {
  _append?: InputMaybe<EmailDraftsAppendInput>;
  _deleteAtPath?: InputMaybe<EmailDraftsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EmailDraftsDeleteElemInput>;
  _deleteKey?: InputMaybe<EmailDraftsDeleteKeyInput>;
  _prepend?: InputMaybe<EmailDraftsPrependInput>;
  _set?: InputMaybe<EmailDraftsSetInput>;
  pkColumns: EmailDraftsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateEmailDraftsManyArgs = {
  updates: Array<EmailDraftsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateEmailSendLogsArgs = {
  _append?: InputMaybe<EmailSendLogsAppendInput>;
  _deleteAtPath?: InputMaybe<EmailSendLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EmailSendLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<EmailSendLogsDeleteKeyInput>;
  _prepend?: InputMaybe<EmailSendLogsPrependInput>;
  _set?: InputMaybe<EmailSendLogsSetInput>;
  where: EmailSendLogsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateEmailSendLogsByPkArgs = {
  _append?: InputMaybe<EmailSendLogsAppendInput>;
  _deleteAtPath?: InputMaybe<EmailSendLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EmailSendLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<EmailSendLogsDeleteKeyInput>;
  _prepend?: InputMaybe<EmailSendLogsPrependInput>;
  _set?: InputMaybe<EmailSendLogsSetInput>;
  pkColumns: EmailSendLogsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateEmailSendLogsManyArgs = {
  updates: Array<EmailSendLogsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateEmailTemplatesArgs = {
  _append?: InputMaybe<EmailTemplatesAppendInput>;
  _deleteAtPath?: InputMaybe<EmailTemplatesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EmailTemplatesDeleteElemInput>;
  _deleteKey?: InputMaybe<EmailTemplatesDeleteKeyInput>;
  _prepend?: InputMaybe<EmailTemplatesPrependInput>;
  _set?: InputMaybe<EmailTemplatesSetInput>;
  where: EmailTemplatesBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateEmailTemplatesByPkArgs = {
  _append?: InputMaybe<EmailTemplatesAppendInput>;
  _deleteAtPath?: InputMaybe<EmailTemplatesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<EmailTemplatesDeleteElemInput>;
  _deleteKey?: InputMaybe<EmailTemplatesDeleteKeyInput>;
  _prepend?: InputMaybe<EmailTemplatesPrependInput>;
  _set?: InputMaybe<EmailTemplatesSetInput>;
  pkColumns: EmailTemplatesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateEmailTemplatesManyArgs = {
  updates: Array<EmailTemplatesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateExternalSystemByIdArgs = {
  _set?: InputMaybe<ExternalSystemsSetInput>;
  pkColumns: ExternalSystemsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateExternalSystemsManyArgs = {
  updates: Array<ExternalSystemsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateFeatureFlagByIdArgs = {
  _append?: InputMaybe<FeatureFlagsAppendInput>;
  _deleteAtPath?: InputMaybe<FeatureFlagsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FeatureFlagsDeleteElemInput>;
  _deleteKey?: InputMaybe<FeatureFlagsDeleteKeyInput>;
  _prepend?: InputMaybe<FeatureFlagsPrependInput>;
  _set?: InputMaybe<FeatureFlagsSetInput>;
  pkColumns: FeatureFlagsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateFeatureFlagsManyArgs = {
  updates: Array<FeatureFlagsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateFileByIdArgs = {
  _append?: InputMaybe<FilesAppendInput>;
  _deleteAtPath?: InputMaybe<FilesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<FilesDeleteElemInput>;
  _deleteKey?: InputMaybe<FilesDeleteKeyInput>;
  _inc?: InputMaybe<FilesIncInput>;
  _prepend?: InputMaybe<FilesPrependInput>;
  _set?: InputMaybe<FilesSetInput>;
  pkColumns: FilesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateFilesManyArgs = {
  updates: Array<FilesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateHolidayByIdArgs = {
  _inc?: InputMaybe<HolidaysIncInput>;
  _set?: InputMaybe<HolidaysSetInput>;
  pkColumns: HolidaysPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateHolidaysManyArgs = {
  updates: Array<HolidaysUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateLatestPayrollVersionResultByIdArgs = {
  _inc?: InputMaybe<LatestPayrollVersionResultsIncInput>;
  _set?: InputMaybe<LatestPayrollVersionResultsSetInput>;
  pkColumns: LatestPayrollVersionResultsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateLatestPayrollVersionResultsManyArgs = {
  updates: Array<LatestPayrollVersionResultsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateLeaveByIdArgs = {
  _set?: InputMaybe<LeaveSetInput>;
  pkColumns: LeavePkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateLeaveManyArgs = {
  updates: Array<LeaveUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateNoteByIdArgs = {
  _set?: InputMaybe<NotesSetInput>;
  pkColumns: NotesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateNotesManyArgs = {
  updates: Array<NotesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollActivationResultByIdArgs = {
  _inc?: InputMaybe<PayrollActivationResultsIncInput>;
  _set?: InputMaybe<PayrollActivationResultsSetInput>;
  pkColumns: PayrollActivationResultsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollActivationResultsManyArgs = {
  updates: Array<PayrollActivationResultsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollAssignmentAuditByIdArgs = {
  _set?: InputMaybe<PayrollAssignmentAuditsSetInput>;
  pkColumns: PayrollAssignmentAuditsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollAssignmentAuditsManyArgs = {
  updates: Array<PayrollAssignmentAuditsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollAssignmentByIdArgs = {
  _set?: InputMaybe<PayrollAssignmentsSetInput>;
  pkColumns: PayrollAssignmentsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollAssignmentsManyArgs = {
  updates: Array<PayrollAssignmentsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollByIdArgs = {
  _inc?: InputMaybe<PayrollsIncInput>;
  _set?: InputMaybe<PayrollsSetInput>;
  pkColumns: PayrollsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollCycleByIdArgs = {
  _set?: InputMaybe<PayrollCyclesSetInput>;
  pkColumns: PayrollCyclesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollCyclesManyArgs = {
  updates: Array<PayrollCyclesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollDateByIdArgs = {
  _set?: InputMaybe<PayrollDatesSetInput>;
  pkColumns: PayrollDatesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollDateTypeByIdArgs = {
  _set?: InputMaybe<PayrollDateTypesSetInput>;
  pkColumns: PayrollDateTypesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollDateTypesManyArgs = {
  updates: Array<PayrollDateTypesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollDatesManyArgs = {
  updates: Array<PayrollDatesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollRequiredSkillManyArgs = {
  updates: Array<PayrollRequiredSkillUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollVersionHistoryResultByIdArgs = {
  _inc?: InputMaybe<PayrollVersionHistoryResultsIncInput>;
  _set?: InputMaybe<PayrollVersionHistoryResultsSetInput>;
  pkColumns: PayrollVersionHistoryResultsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollVersionHistoryResultsManyArgs = {
  updates: Array<PayrollVersionHistoryResultsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollVersionResultByIdArgs = {
  _inc?: InputMaybe<PayrollVersionResultsIncInput>;
  _set?: InputMaybe<PayrollVersionResultsSetInput>;
  pkColumns: PayrollVersionResultsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePayrollVersionResultsManyArgs = {
  updates: Array<PayrollVersionResultsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePayrollsManyArgs = {
  updates: Array<PayrollsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePermissionAuditLogByIdArgs = {
  _append?: InputMaybe<PermissionAuditLogsAppendInput>;
  _deleteAtPath?: InputMaybe<PermissionAuditLogsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<PermissionAuditLogsDeleteElemInput>;
  _deleteKey?: InputMaybe<PermissionAuditLogsDeleteKeyInput>;
  _prepend?: InputMaybe<PermissionAuditLogsPrependInput>;
  _set?: InputMaybe<PermissionAuditLogsSetInput>;
  pkColumns: PermissionAuditLogsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePermissionAuditLogsManyArgs = {
  updates: Array<PermissionAuditLogsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePermissionByIdArgs = {
  _set?: InputMaybe<PermissionsSetInput>;
  pkColumns: PermissionsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePermissionChangeByIdArgs = {
  _append?: InputMaybe<PermissionChangesAppendInput>;
  _deleteAtPath?: InputMaybe<PermissionChangesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<PermissionChangesDeleteElemInput>;
  _deleteKey?: InputMaybe<PermissionChangesDeleteKeyInput>;
  _prepend?: InputMaybe<PermissionChangesPrependInput>;
  _set?: InputMaybe<PermissionChangesSetInput>;
  pkColumns: PermissionChangesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePermissionChangesManyArgs = {
  updates: Array<PermissionChangesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePermissionOverrideByIdArgs = {
  _append?: InputMaybe<PermissionOverridesAppendInput>;
  _deleteAtPath?: InputMaybe<PermissionOverridesDeleteAtPathInput>;
  _deleteElem?: InputMaybe<PermissionOverridesDeleteElemInput>;
  _deleteKey?: InputMaybe<PermissionOverridesDeleteKeyInput>;
  _prepend?: InputMaybe<PermissionOverridesPrependInput>;
  _set?: InputMaybe<PermissionOverridesSetInput>;
  pkColumns: PermissionOverridesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePermissionOverridesManyArgs = {
  updates: Array<PermissionOverridesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePermissionsManyArgs = {
  updates: Array<PermissionsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdatePositionAdminDefaultsArgs = {
  _inc?: InputMaybe<PositionAdminDefaultsIncInput>;
  _set?: InputMaybe<PositionAdminDefaultsSetInput>;
  where: PositionAdminDefaultsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdatePositionAdminDefaultsByPkArgs = {
  _inc?: InputMaybe<PositionAdminDefaultsIncInput>;
  _set?: InputMaybe<PositionAdminDefaultsSetInput>;
  pkColumns: PositionAdminDefaultsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdatePositionAdminDefaultsManyArgs = {
  updates: Array<PositionAdminDefaultsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateRateLimitsArgs = {
  _inc?: InputMaybe<RateLimitsIncInput>;
  _set?: InputMaybe<RateLimitsSetInput>;
  where: RateLimitsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateRateLimitsByPkArgs = {
  _inc?: InputMaybe<RateLimitsIncInput>;
  _set?: InputMaybe<RateLimitsSetInput>;
  pkColumns: RateLimitsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateRateLimitsManyArgs = {
  updates: Array<RateLimitsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateResourceByIdArgs = {
  _set?: InputMaybe<ResourcesSetInput>;
  pkColumns: ResourcesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateResourcesManyArgs = {
  updates: Array<ResourcesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateRoleByIdArgs = {
  _inc?: InputMaybe<RolesIncInput>;
  _set?: InputMaybe<RolesSetInput>;
  pkColumns: RolesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateRolePermissionByIdArgs = {
  _append?: InputMaybe<RolePermissionsAppendInput>;
  _deleteAtPath?: InputMaybe<RolePermissionsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<RolePermissionsDeleteElemInput>;
  _deleteKey?: InputMaybe<RolePermissionsDeleteKeyInput>;
  _prepend?: InputMaybe<RolePermissionsPrependInput>;
  _set?: InputMaybe<RolePermissionsSetInput>;
  pkColumns: RolePermissionsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateRolePermissionsManyArgs = {
  updates: Array<RolePermissionsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateRolesManyArgs = {
  updates: Array<RolesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateSecurityAlertsArgs = {
  _append?: InputMaybe<SecurityAlertsAppendInput>;
  _deleteAtPath?: InputMaybe<SecurityAlertsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SecurityAlertsDeleteElemInput>;
  _deleteKey?: InputMaybe<SecurityAlertsDeleteKeyInput>;
  _prepend?: InputMaybe<SecurityAlertsPrependInput>;
  _set?: InputMaybe<SecurityAlertsSetInput>;
  where: SecurityAlertsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateSecurityAlertsByPkArgs = {
  _append?: InputMaybe<SecurityAlertsAppendInput>;
  _deleteAtPath?: InputMaybe<SecurityAlertsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SecurityAlertsDeleteElemInput>;
  _deleteKey?: InputMaybe<SecurityAlertsDeleteKeyInput>;
  _prepend?: InputMaybe<SecurityAlertsPrependInput>;
  _set?: InputMaybe<SecurityAlertsSetInput>;
  pkColumns: SecurityAlertsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateSecurityAlertsManyArgs = {
  updates: Array<SecurityAlertsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateSecuritySettingsArgs = {
  _append?: InputMaybe<SecuritySettingsAppendInput>;
  _deleteAtPath?: InputMaybe<SecuritySettingsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SecuritySettingsDeleteElemInput>;
  _deleteKey?: InputMaybe<SecuritySettingsDeleteKeyInput>;
  _prepend?: InputMaybe<SecuritySettingsPrependInput>;
  _set?: InputMaybe<SecuritySettingsSetInput>;
  where: SecuritySettingsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateSecuritySettingsByPkArgs = {
  _append?: InputMaybe<SecuritySettingsAppendInput>;
  _deleteAtPath?: InputMaybe<SecuritySettingsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SecuritySettingsDeleteElemInput>;
  _deleteKey?: InputMaybe<SecuritySettingsDeleteKeyInput>;
  _prepend?: InputMaybe<SecuritySettingsPrependInput>;
  _set?: InputMaybe<SecuritySettingsSetInput>;
  pkColumns: SecuritySettingsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateSecuritySettingsManyArgs = {
  updates: Array<SecuritySettingsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateSlowQueriesManyArgs = {
  updates: Array<SlowQueriesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateSlowQueryByIdArgs = {
  _set?: InputMaybe<SlowQueriesSetInput>;
  pkColumns: SlowQueriesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateSystemConfigurationArgs = {
  _append?: InputMaybe<SystemConfigurationAppendInput>;
  _deleteAtPath?: InputMaybe<SystemConfigurationDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SystemConfigurationDeleteElemInput>;
  _deleteKey?: InputMaybe<SystemConfigurationDeleteKeyInput>;
  _prepend?: InputMaybe<SystemConfigurationPrependInput>;
  _set?: InputMaybe<SystemConfigurationSetInput>;
  where: SystemConfigurationBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateSystemConfigurationByPkArgs = {
  _append?: InputMaybe<SystemConfigurationAppendInput>;
  _deleteAtPath?: InputMaybe<SystemConfigurationDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SystemConfigurationDeleteElemInput>;
  _deleteKey?: InputMaybe<SystemConfigurationDeleteKeyInput>;
  _prepend?: InputMaybe<SystemConfigurationPrependInput>;
  _set?: InputMaybe<SystemConfigurationSetInput>;
  pkColumns: SystemConfigurationPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateSystemConfigurationManyArgs = {
  updates: Array<SystemConfigurationUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateSystemHealthArgs = {
  _append?: InputMaybe<SystemHealthAppendInput>;
  _deleteAtPath?: InputMaybe<SystemHealthDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SystemHealthDeleteElemInput>;
  _deleteKey?: InputMaybe<SystemHealthDeleteKeyInput>;
  _inc?: InputMaybe<SystemHealthIncInput>;
  _prepend?: InputMaybe<SystemHealthPrependInput>;
  _set?: InputMaybe<SystemHealthSetInput>;
  where: SystemHealthBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateSystemHealthByPkArgs = {
  _append?: InputMaybe<SystemHealthAppendInput>;
  _deleteAtPath?: InputMaybe<SystemHealthDeleteAtPathInput>;
  _deleteElem?: InputMaybe<SystemHealthDeleteElemInput>;
  _deleteKey?: InputMaybe<SystemHealthDeleteKeyInput>;
  _inc?: InputMaybe<SystemHealthIncInput>;
  _prepend?: InputMaybe<SystemHealthPrependInput>;
  _set?: InputMaybe<SystemHealthSetInput>;
  pkColumns: SystemHealthPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateSystemHealthManyArgs = {
  updates: Array<SystemHealthUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateTimeEntriesArgs = {
  _inc?: InputMaybe<TimeEntriesIncInput>;
  _set?: InputMaybe<TimeEntriesSetInput>;
  where: TimeEntriesBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateTimeEntriesManyArgs = {
  updates: Array<TimeEntriesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateTimeEntryArgs = {
  _inc?: InputMaybe<TimeEntriesIncInput>;
  _set?: InputMaybe<TimeEntriesSetInput>;
  pkColumns: TimeEntriesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateUserByIdArgs = {
  _inc?: InputMaybe<UsersIncInput>;
  _set?: InputMaybe<UsersSetInput>;
  pkColumns: UsersPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateUserEmailTemplateFavoritesArgs = {
  _set?: InputMaybe<UserEmailTemplateFavoritesSetInput>;
  where: UserEmailTemplateFavoritesBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateUserEmailTemplateFavoritesByPkArgs = {
  _set?: InputMaybe<UserEmailTemplateFavoritesSetInput>;
  pkColumns: UserEmailTemplateFavoritesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateUserEmailTemplateFavoritesManyArgs = {
  updates: Array<UserEmailTemplateFavoritesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateUserInvitationByIdArgs = {
  _append?: InputMaybe<UserInvitationsAppendInput>;
  _deleteAtPath?: InputMaybe<UserInvitationsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<UserInvitationsDeleteElemInput>;
  _deleteKey?: InputMaybe<UserInvitationsDeleteKeyInput>;
  _prepend?: InputMaybe<UserInvitationsPrependInput>;
  _set?: InputMaybe<UserInvitationsSetInput>;
  pkColumns: UserInvitationsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateUserInvitationsManyArgs = {
  updates: Array<UserInvitationsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateUserRoleByIdArgs = {
  _set?: InputMaybe<UserRolesSetInput>;
  pkColumns: UserRolesPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateUserRolesManyArgs = {
  updates: Array<UserRolesUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateUserSessionsArgs = {
  _append?: InputMaybe<UserSessionsAppendInput>;
  _deleteAtPath?: InputMaybe<UserSessionsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<UserSessionsDeleteElemInput>;
  _deleteKey?: InputMaybe<UserSessionsDeleteKeyInput>;
  _prepend?: InputMaybe<UserSessionsPrependInput>;
  _set?: InputMaybe<UserSessionsSetInput>;
  where: UserSessionsBoolExp;
};


/** mutation root */
export type Mutation_RootUpdateUserSessionsByPkArgs = {
  _append?: InputMaybe<UserSessionsAppendInput>;
  _deleteAtPath?: InputMaybe<UserSessionsDeleteAtPathInput>;
  _deleteElem?: InputMaybe<UserSessionsDeleteElemInput>;
  _deleteKey?: InputMaybe<UserSessionsDeleteKeyInput>;
  _prepend?: InputMaybe<UserSessionsPrependInput>;
  _set?: InputMaybe<UserSessionsSetInput>;
  pkColumns: UserSessionsPkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateUserSessionsManyArgs = {
  updates: Array<UserSessionsUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateUserSkillManyArgs = {
  updates: Array<UserSkillUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateUsersManyArgs = {
  updates: Array<UsersUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateUsersRoleBackupManyArgs = {
  updates: Array<UsersRoleBackupUpdates>;
};


/** mutation root */
export type Mutation_RootUpdateWorkScheduleByIdArgs = {
  _inc?: InputMaybe<WorkScheduleIncInput>;
  _set?: InputMaybe<WorkScheduleSetInput>;
  pkColumns: WorkSchedulePkColumnsInput;
};


/** mutation root */
export type Mutation_RootUpdateWorkScheduleManyArgs = {
  updates: Array<WorkScheduleUpdates>;
};


/** mutation root */
export type Mutation_RootUpdate_PayrollArgs = {
  complexity?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  processingTime?: InputMaybe<Scalars['Int']['input']>;
};


/** mutation root */
export type Mutation_RootUpdate_Staff_MemberArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
  managerId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  userId: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootUpdate_User_RoleArgs = {
  role: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

/** columns and relationships of "notes" */
export type Notes = {
  __typename?: 'notes';
  /** An object relationship */
  authorUser?: Maybe<Users>;
  /** Content of the note */
  content: Scalars['String']['output'];
  /** Timestamp when the note was created */
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  /** Identifier of the entity this note is attached to */
  entityId: Scalars['uuid']['output'];
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType: Scalars['String']['output'];
  /** Unique identifier for the note */
  id: Scalars['uuid']['output'];
  /** Whether the note is flagged as important */
  isImportant?: Maybe<Scalars['Boolean']['output']>;
  /** An array relationship */
  notesByClient: Array<Clients>;
  /** An aggregate relationship */
  notesByClientAggregate: ClientsAggregate;
  /** An array relationship */
  notesByPayroll: Array<Payrolls>;
  /** An aggregate relationship */
  notesByPayrollAggregate: PayrollsAggregate;
  /** Timestamp when the note was last updated */
  updatedAt?: Maybe<Scalars['timestamp']['output']>;
  /** User who created the note */
  userId?: Maybe<Scalars['uuid']['output']>;
};


/** columns and relationships of "notes" */
export type NotesNotesByClientArgs = {
  distinctOn?: InputMaybe<Array<ClientsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientsOrderBy>>;
  where?: InputMaybe<ClientsBoolExp>;
};


/** columns and relationships of "notes" */
export type NotesNotesByClientAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientsOrderBy>>;
  where?: InputMaybe<ClientsBoolExp>;
};


/** columns and relationships of "notes" */
export type NotesNotesByPayrollArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "notes" */
export type NotesNotesByPayrollAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};

/** aggregated selection of "notes" */
export type NotesAggregate = {
  __typename?: 'notesAggregate';
  aggregate?: Maybe<NotesAggregateFields>;
  nodes: Array<Notes>;
};

export type NotesAggregateBoolExp = {
  bool_and?: InputMaybe<NotesAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<NotesAggregateBoolExpBool_Or>;
  count?: InputMaybe<NotesAggregateBoolExpCount>;
};

export type NotesAggregateBoolExpBool_And = {
  arguments: NotesSelectColumnNotesAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<NotesBoolExp>;
  predicate: BooleanComparisonExp;
};

export type NotesAggregateBoolExpBool_Or = {
  arguments: NotesSelectColumnNotesAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<NotesBoolExp>;
  predicate: BooleanComparisonExp;
};

export type NotesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<NotesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<NotesBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "notes" */
export type NotesAggregateFields = {
  __typename?: 'notesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<NotesMaxFields>;
  min?: Maybe<NotesMinFields>;
};


/** aggregate fields of "notes" */
export type NotesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<NotesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "notes" */
export type NotesAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<NotesMaxOrderBy>;
  min?: InputMaybe<NotesMinOrderBy>;
};

/** input type for inserting array relation for remote table "notes" */
export type NotesArrRelInsertInput = {
  data: Array<NotesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<NotesOnConflict>;
};

/** Boolean expression to filter rows from the table "notes". All fields are combined with a logical 'AND'. */
export type NotesBoolExp = {
  _and?: InputMaybe<Array<NotesBoolExp>>;
  _not?: InputMaybe<NotesBoolExp>;
  _or?: InputMaybe<Array<NotesBoolExp>>;
  authorUser?: InputMaybe<UsersBoolExp>;
  content?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestampComparisonExp>;
  entityId?: InputMaybe<UuidComparisonExp>;
  entityType?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isImportant?: InputMaybe<BooleanComparisonExp>;
  notesByClient?: InputMaybe<ClientsBoolExp>;
  notesByClientAggregate?: InputMaybe<ClientsAggregateBoolExp>;
  notesByPayroll?: InputMaybe<PayrollsBoolExp>;
  notesByPayrollAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  updatedAt?: InputMaybe<TimestampComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "notes" */
export type NotesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'notes_pkey'
  | '%future added value';

/** input type for inserting data into table "notes" */
export type NotesInsertInput = {
  authorUser?: InputMaybe<UsersObjRelInsertInput>;
  /** Content of the note */
  content?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the note was created */
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Identifier of the entity this note is attached to */
  entityId?: InputMaybe<Scalars['uuid']['input']>;
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the note */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the note is flagged as important */
  isImportant?: InputMaybe<Scalars['Boolean']['input']>;
  notesByClient?: InputMaybe<ClientsArrRelInsertInput>;
  notesByPayroll?: InputMaybe<PayrollsArrRelInsertInput>;
  /** Timestamp when the note was last updated */
  updatedAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** User who created the note */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type NotesMaxFields = {
  __typename?: 'notesMaxFields';
  /** Content of the note */
  content?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the note was created */
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  /** Identifier of the entity this note is attached to */
  entityId?: Maybe<Scalars['uuid']['output']>;
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the note */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the note was last updated */
  updatedAt?: Maybe<Scalars['timestamp']['output']>;
  /** User who created the note */
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "notes" */
export type NotesMaxOrderBy = {
  /** Content of the note */
  content?: InputMaybe<OrderBy>;
  /** Timestamp when the note was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Identifier of the entity this note is attached to */
  entityId?: InputMaybe<OrderBy>;
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType?: InputMaybe<OrderBy>;
  /** Unique identifier for the note */
  id?: InputMaybe<OrderBy>;
  /** Timestamp when the note was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** User who created the note */
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type NotesMinFields = {
  __typename?: 'notesMinFields';
  /** Content of the note */
  content?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the note was created */
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  /** Identifier of the entity this note is attached to */
  entityId?: Maybe<Scalars['uuid']['output']>;
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the note */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the note was last updated */
  updatedAt?: Maybe<Scalars['timestamp']['output']>;
  /** User who created the note */
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "notes" */
export type NotesMinOrderBy = {
  /** Content of the note */
  content?: InputMaybe<OrderBy>;
  /** Timestamp when the note was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Identifier of the entity this note is attached to */
  entityId?: InputMaybe<OrderBy>;
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType?: InputMaybe<OrderBy>;
  /** Unique identifier for the note */
  id?: InputMaybe<OrderBy>;
  /** Timestamp when the note was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** User who created the note */
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "notes" */
export type NotesMutationResponse = {
  __typename?: 'notesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Notes>;
};

/** on_conflict condition type for table "notes" */
export type NotesOnConflict = {
  constraint: NotesConstraint;
  updateColumns?: Array<NotesUpdateColumn>;
  where?: InputMaybe<NotesBoolExp>;
};

/** Ordering options when selecting data from "notes". */
export type NotesOrderBy = {
  authorUser?: InputMaybe<UsersOrderBy>;
  content?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  entityId?: InputMaybe<OrderBy>;
  entityType?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isImportant?: InputMaybe<OrderBy>;
  notesByClientAggregate?: InputMaybe<ClientsAggregateOrderBy>;
  notesByPayrollAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: notes */
export type NotesPkColumnsInput = {
  /** Unique identifier for the note */
  id: Scalars['uuid']['input'];
};

/** select columns of table "notes" */
export type NotesSelectColumn =
  /** column name */
  | 'content'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'entityId'
  /** column name */
  | 'entityType'
  /** column name */
  | 'id'
  /** column name */
  | 'isImportant'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

/** select "notesAggregateBoolExpBool_andArgumentsColumns" columns of table "notes" */
export type NotesSelectColumnNotesAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isImportant'
  | '%future added value';

/** select "notesAggregateBoolExpBool_orArgumentsColumns" columns of table "notes" */
export type NotesSelectColumnNotesAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isImportant'
  | '%future added value';

/** input type for updating data in table "notes" */
export type NotesSetInput = {
  /** Content of the note */
  content?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the note was created */
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Identifier of the entity this note is attached to */
  entityId?: InputMaybe<Scalars['uuid']['input']>;
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the note */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the note is flagged as important */
  isImportant?: InputMaybe<Scalars['Boolean']['input']>;
  /** Timestamp when the note was last updated */
  updatedAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** User who created the note */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "notes" */
export type NotesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: NotesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type NotesStreamCursorValueInput = {
  /** Content of the note */
  content?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the note was created */
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Identifier of the entity this note is attached to */
  entityId?: InputMaybe<Scalars['uuid']['input']>;
  /** Type of entity this note is attached to (client, payroll, etc.) */
  entityType?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the note */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether the note is flagged as important */
  isImportant?: InputMaybe<Scalars['Boolean']['input']>;
  /** Timestamp when the note was last updated */
  updatedAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** User who created the note */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "notes" */
export type NotesUpdateColumn =
  /** column name */
  | 'content'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'entityId'
  /** column name */
  | 'entityType'
  /** column name */
  | 'id'
  /** column name */
  | 'isImportant'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

export type NotesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<NotesSetInput>;
  /** filter the rows which have to be updated */
  where: NotesBoolExp;
};

/** columns and relationships of "payroll_activation_results" */
export type PayrollActivationResults = {
  __typename?: 'payrollActivationResults';
  actionTaken: Scalars['String']['output'];
  executedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['uuid']['output'];
  payrollId: Scalars['uuid']['output'];
  versionNumber: Scalars['Int']['output'];
};

export type PayrollActivationResultsAggregate = {
  __typename?: 'payrollActivationResultsAggregate';
  aggregate?: Maybe<PayrollActivationResultsAggregateFields>;
  nodes: Array<PayrollActivationResults>;
};

/** aggregate fields of "payroll_activation_results" */
export type PayrollActivationResultsAggregateFields = {
  __typename?: 'payrollActivationResultsAggregateFields';
  avg?: Maybe<PayrollActivationResultsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollActivationResultsMaxFields>;
  min?: Maybe<PayrollActivationResultsMinFields>;
  stddev?: Maybe<PayrollActivationResultsStddevFields>;
  stddevPop?: Maybe<PayrollActivationResultsStddevPopFields>;
  stddevSamp?: Maybe<PayrollActivationResultsStddevSampFields>;
  sum?: Maybe<PayrollActivationResultsSumFields>;
  varPop?: Maybe<PayrollActivationResultsVarPopFields>;
  varSamp?: Maybe<PayrollActivationResultsVarSampFields>;
  variance?: Maybe<PayrollActivationResultsVarianceFields>;
};


/** aggregate fields of "payroll_activation_results" */
export type PayrollActivationResultsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type PayrollActivationResultsAvgFields = {
  __typename?: 'payrollActivationResultsAvgFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "payroll_activation_results". All fields are combined with a logical 'AND'. */
export type PayrollActivationResultsBoolExp = {
  _and?: InputMaybe<Array<PayrollActivationResultsBoolExp>>;
  _not?: InputMaybe<PayrollActivationResultsBoolExp>;
  _or?: InputMaybe<Array<PayrollActivationResultsBoolExp>>;
  actionTaken?: InputMaybe<StringComparisonExp>;
  executedAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  versionNumber?: InputMaybe<IntComparisonExp>;
};

/** unique or primary key constraints on table "payroll_activation_results" */
export type PayrollActivationResultsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'payroll_activation_results_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "payroll_activation_results" */
export type PayrollActivationResultsIncInput = {
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payroll_activation_results" */
export type PayrollActivationResultsInsertInput = {
  actionTaken?: InputMaybe<Scalars['String']['input']>;
  executedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type PayrollActivationResultsMaxFields = {
  __typename?: 'payrollActivationResultsMaxFields';
  actionTaken?: Maybe<Scalars['String']['output']>;
  executedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type PayrollActivationResultsMinFields = {
  __typename?: 'payrollActivationResultsMinFields';
  actionTaken?: Maybe<Scalars['String']['output']>;
  executedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "payroll_activation_results" */
export type PayrollActivationResultsMutationResponse = {
  __typename?: 'payrollActivationResultsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollActivationResults>;
};

/** on_conflict condition type for table "payroll_activation_results" */
export type PayrollActivationResultsOnConflict = {
  constraint: PayrollActivationResultsConstraint;
  updateColumns?: Array<PayrollActivationResultsUpdateColumn>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};

/** Ordering options when selecting data from "payroll_activation_results". */
export type PayrollActivationResultsOrderBy = {
  actionTaken?: InputMaybe<OrderBy>;
  executedAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_activation_results */
export type PayrollActivationResultsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_activation_results" */
export type PayrollActivationResultsSelectColumn =
  /** column name */
  | 'actionTaken'
  /** column name */
  | 'executedAt'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'versionNumber'
  | '%future added value';

/** input type for updating data in table "payroll_activation_results" */
export type PayrollActivationResultsSetInput = {
  actionTaken?: InputMaybe<Scalars['String']['input']>;
  executedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type PayrollActivationResultsStddevFields = {
  __typename?: 'payrollActivationResultsStddevFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type PayrollActivationResultsStddevPopFields = {
  __typename?: 'payrollActivationResultsStddevPopFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type PayrollActivationResultsStddevSampFields = {
  __typename?: 'payrollActivationResultsStddevSampFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "payrollActivationResults" */
export type PayrollActivationResultsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollActivationResultsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollActivationResultsStreamCursorValueInput = {
  actionTaken?: InputMaybe<Scalars['String']['input']>;
  executedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type PayrollActivationResultsSumFields = {
  __typename?: 'payrollActivationResultsSumFields';
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "payroll_activation_results" */
export type PayrollActivationResultsUpdateColumn =
  /** column name */
  | 'actionTaken'
  /** column name */
  | 'executedAt'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'versionNumber'
  | '%future added value';

export type PayrollActivationResultsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<PayrollActivationResultsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollActivationResultsSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollActivationResultsBoolExp;
};

/** aggregate varPop on columns */
export type PayrollActivationResultsVarPopFields = {
  __typename?: 'payrollActivationResultsVarPopFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type PayrollActivationResultsVarSampFields = {
  __typename?: 'payrollActivationResultsVarSampFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type PayrollActivationResultsVarianceFields = {
  __typename?: 'payrollActivationResultsVarianceFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "payroll_assignment_audit" */
export type PayrollAssignmentAudits = {
  __typename?: 'payrollAssignmentAudits';
  assignmentId?: Maybe<Scalars['uuid']['output']>;
  changeReason?: Maybe<Scalars['String']['output']>;
  changedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  changedByUser?: Maybe<Users>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  fromConsultant?: Maybe<Users>;
  fromConsultantId?: Maybe<Scalars['uuid']['output']>;
  id: Scalars['uuid']['output'];
  /** An object relationship */
  payrollAssignment?: Maybe<PayrollAssignments>;
  /** An object relationship */
  payrollDate: PayrollDates;
  payrollDateId: Scalars['uuid']['output'];
  /** An object relationship */
  toConsultant: Users;
  toConsultantId: Scalars['uuid']['output'];
};

/** aggregated selection of "payroll_assignment_audit" */
export type PayrollAssignmentAuditsAggregate = {
  __typename?: 'payrollAssignmentAuditsAggregate';
  aggregate?: Maybe<PayrollAssignmentAuditsAggregateFields>;
  nodes: Array<PayrollAssignmentAudits>;
};

export type PayrollAssignmentAuditsAggregateBoolExp = {
  count?: InputMaybe<PayrollAssignmentAuditsAggregateBoolExpCount>;
};

export type PayrollAssignmentAuditsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "payroll_assignment_audit" */
export type PayrollAssignmentAuditsAggregateFields = {
  __typename?: 'payrollAssignmentAuditsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollAssignmentAuditsMaxFields>;
  min?: Maybe<PayrollAssignmentAuditsMinFields>;
};


/** aggregate fields of "payroll_assignment_audit" */
export type PayrollAssignmentAuditsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PayrollAssignmentAuditsMaxOrderBy>;
  min?: InputMaybe<PayrollAssignmentAuditsMinOrderBy>;
};

/** input type for inserting array relation for remote table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsArrRelInsertInput = {
  data: Array<PayrollAssignmentAuditsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollAssignmentAuditsOnConflict>;
};

/** Boolean expression to filter rows from the table "payroll_assignment_audit". All fields are combined with a logical 'AND'. */
export type PayrollAssignmentAuditsBoolExp = {
  _and?: InputMaybe<Array<PayrollAssignmentAuditsBoolExp>>;
  _not?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
  _or?: InputMaybe<Array<PayrollAssignmentAuditsBoolExp>>;
  assignmentId?: InputMaybe<UuidComparisonExp>;
  changeReason?: InputMaybe<StringComparisonExp>;
  changedBy?: InputMaybe<UuidComparisonExp>;
  changedByUser?: InputMaybe<UsersBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  fromConsultant?: InputMaybe<UsersBoolExp>;
  fromConsultantId?: InputMaybe<UuidComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  payrollAssignment?: InputMaybe<PayrollAssignmentsBoolExp>;
  payrollDate?: InputMaybe<PayrollDatesBoolExp>;
  payrollDateId?: InputMaybe<UuidComparisonExp>;
  toConsultant?: InputMaybe<UsersBoolExp>;
  toConsultantId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'payroll_assignment_audit_pkey'
  | '%future added value';

/** input type for inserting data into table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsInsertInput = {
  assignmentId?: InputMaybe<Scalars['uuid']['input']>;
  changeReason?: InputMaybe<Scalars['String']['input']>;
  changedBy?: InputMaybe<Scalars['uuid']['input']>;
  changedByUser?: InputMaybe<UsersObjRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fromConsultant?: InputMaybe<UsersObjRelInsertInput>;
  fromConsultantId?: InputMaybe<Scalars['uuid']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  payrollAssignment?: InputMaybe<PayrollAssignmentsObjRelInsertInput>;
  payrollDate?: InputMaybe<PayrollDatesObjRelInsertInput>;
  payrollDateId?: InputMaybe<Scalars['uuid']['input']>;
  toConsultant?: InputMaybe<UsersObjRelInsertInput>;
  toConsultantId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type PayrollAssignmentAuditsMaxFields = {
  __typename?: 'payrollAssignmentAuditsMaxFields';
  assignmentId?: Maybe<Scalars['uuid']['output']>;
  changeReason?: Maybe<Scalars['String']['output']>;
  changedBy?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  fromConsultantId?: Maybe<Scalars['uuid']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  payrollDateId?: Maybe<Scalars['uuid']['output']>;
  toConsultantId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsMaxOrderBy = {
  assignmentId?: InputMaybe<OrderBy>;
  changeReason?: InputMaybe<OrderBy>;
  changedBy?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  fromConsultantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  payrollDateId?: InputMaybe<OrderBy>;
  toConsultantId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PayrollAssignmentAuditsMinFields = {
  __typename?: 'payrollAssignmentAuditsMinFields';
  assignmentId?: Maybe<Scalars['uuid']['output']>;
  changeReason?: Maybe<Scalars['String']['output']>;
  changedBy?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  fromConsultantId?: Maybe<Scalars['uuid']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  payrollDateId?: Maybe<Scalars['uuid']['output']>;
  toConsultantId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsMinOrderBy = {
  assignmentId?: InputMaybe<OrderBy>;
  changeReason?: InputMaybe<OrderBy>;
  changedBy?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  fromConsultantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  payrollDateId?: InputMaybe<OrderBy>;
  toConsultantId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsMutationResponse = {
  __typename?: 'payrollAssignmentAuditsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollAssignmentAudits>;
};

/** on_conflict condition type for table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsOnConflict = {
  constraint: PayrollAssignmentAuditsConstraint;
  updateColumns?: Array<PayrollAssignmentAuditsUpdateColumn>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};

/** Ordering options when selecting data from "payroll_assignment_audit". */
export type PayrollAssignmentAuditsOrderBy = {
  assignmentId?: InputMaybe<OrderBy>;
  changeReason?: InputMaybe<OrderBy>;
  changedBy?: InputMaybe<OrderBy>;
  changedByUser?: InputMaybe<UsersOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  fromConsultant?: InputMaybe<UsersOrderBy>;
  fromConsultantId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  payrollAssignment?: InputMaybe<PayrollAssignmentsOrderBy>;
  payrollDate?: InputMaybe<PayrollDatesOrderBy>;
  payrollDateId?: InputMaybe<OrderBy>;
  toConsultant?: InputMaybe<UsersOrderBy>;
  toConsultantId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_assignment_audit */
export type PayrollAssignmentAuditsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsSelectColumn =
  /** column name */
  | 'assignmentId'
  /** column name */
  | 'changeReason'
  /** column name */
  | 'changedBy'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'fromConsultantId'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollDateId'
  /** column name */
  | 'toConsultantId'
  | '%future added value';

/** input type for updating data in table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsSetInput = {
  assignmentId?: InputMaybe<Scalars['uuid']['input']>;
  changeReason?: InputMaybe<Scalars['String']['input']>;
  changedBy?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fromConsultantId?: InputMaybe<Scalars['uuid']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  payrollDateId?: InputMaybe<Scalars['uuid']['input']>;
  toConsultantId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "payrollAssignmentAudits" */
export type PayrollAssignmentAuditsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollAssignmentAuditsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollAssignmentAuditsStreamCursorValueInput = {
  assignmentId?: InputMaybe<Scalars['uuid']['input']>;
  changeReason?: InputMaybe<Scalars['String']['input']>;
  changedBy?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  fromConsultantId?: InputMaybe<Scalars['uuid']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  payrollDateId?: InputMaybe<Scalars['uuid']['input']>;
  toConsultantId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "payroll_assignment_audit" */
export type PayrollAssignmentAuditsUpdateColumn =
  /** column name */
  | 'assignmentId'
  /** column name */
  | 'changeReason'
  /** column name */
  | 'changedBy'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'fromConsultantId'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollDateId'
  /** column name */
  | 'toConsultantId'
  | '%future added value';

export type PayrollAssignmentAuditsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollAssignmentAuditsSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollAssignmentAuditsBoolExp;
};

/** columns and relationships of "payroll_assignments" */
export type PayrollAssignments = {
  __typename?: 'payrollAssignments';
  assignedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  assignedByUser?: Maybe<Users>;
  /** An object relationship */
  assignedConsultant: Users;
  assignedDate?: Maybe<Scalars['timestamptz']['output']>;
  consultantId: Scalars['uuid']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['uuid']['output'];
  isBackup?: Maybe<Scalars['Boolean']['output']>;
  /** An object relationship */
  originalConsultant?: Maybe<Users>;
  originalConsultantId?: Maybe<Scalars['uuid']['output']>;
  /** An array relationship */
  payrollAssignmentAudits: Array<PayrollAssignmentAudits>;
  /** An aggregate relationship */
  payrollAssignmentAuditsAggregate: PayrollAssignmentAuditsAggregate;
  /** An object relationship */
  payrollDate: PayrollDates;
  payrollDateId: Scalars['uuid']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "payroll_assignments" */
export type PayrollAssignmentsPayrollAssignmentAuditsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "payroll_assignments" */
export type PayrollAssignmentsPayrollAssignmentAuditsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};

/** aggregated selection of "payroll_assignments" */
export type PayrollAssignmentsAggregate = {
  __typename?: 'payrollAssignmentsAggregate';
  aggregate?: Maybe<PayrollAssignmentsAggregateFields>;
  nodes: Array<PayrollAssignments>;
};

export type PayrollAssignmentsAggregateBoolExp = {
  bool_and?: InputMaybe<PayrollAssignmentsAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<PayrollAssignmentsAggregateBoolExpBool_Or>;
  count?: InputMaybe<PayrollAssignmentsAggregateBoolExpCount>;
};

export type PayrollAssignmentsAggregateBoolExpBool_And = {
  arguments: PayrollAssignmentsSelectColumnPayrollAssignmentsAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PayrollAssignmentsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type PayrollAssignmentsAggregateBoolExpBool_Or = {
  arguments: PayrollAssignmentsSelectColumnPayrollAssignmentsAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PayrollAssignmentsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type PayrollAssignmentsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PayrollAssignmentsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "payroll_assignments" */
export type PayrollAssignmentsAggregateFields = {
  __typename?: 'payrollAssignmentsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollAssignmentsMaxFields>;
  min?: Maybe<PayrollAssignmentsMinFields>;
};


/** aggregate fields of "payroll_assignments" */
export type PayrollAssignmentsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payroll_assignments" */
export type PayrollAssignmentsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PayrollAssignmentsMaxOrderBy>;
  min?: InputMaybe<PayrollAssignmentsMinOrderBy>;
};

/** input type for inserting array relation for remote table "payroll_assignments" */
export type PayrollAssignmentsArrRelInsertInput = {
  data: Array<PayrollAssignmentsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollAssignmentsOnConflict>;
};

/** Boolean expression to filter rows from the table "payroll_assignments". All fields are combined with a logical 'AND'. */
export type PayrollAssignmentsBoolExp = {
  _and?: InputMaybe<Array<PayrollAssignmentsBoolExp>>;
  _not?: InputMaybe<PayrollAssignmentsBoolExp>;
  _or?: InputMaybe<Array<PayrollAssignmentsBoolExp>>;
  assignedBy?: InputMaybe<UuidComparisonExp>;
  assignedByUser?: InputMaybe<UsersBoolExp>;
  assignedConsultant?: InputMaybe<UsersBoolExp>;
  assignedDate?: InputMaybe<TimestamptzComparisonExp>;
  consultantId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isBackup?: InputMaybe<BooleanComparisonExp>;
  originalConsultant?: InputMaybe<UsersBoolExp>;
  originalConsultantId?: InputMaybe<UuidComparisonExp>;
  payrollAssignmentAudits?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
  payrollAssignmentAuditsAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateBoolExp>;
  payrollDate?: InputMaybe<PayrollDatesBoolExp>;
  payrollDateId?: InputMaybe<UuidComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "payroll_assignments" */
export type PayrollAssignmentsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'payroll_assignments_pkey'
  /** unique or primary key constraint on columns "payroll_date_id" */
  | 'uq_payroll_assignment_payroll_date'
  | '%future added value';

/** input type for inserting data into table "payroll_assignments" */
export type PayrollAssignmentsInsertInput = {
  assignedBy?: InputMaybe<Scalars['uuid']['input']>;
  assignedByUser?: InputMaybe<UsersObjRelInsertInput>;
  assignedConsultant?: InputMaybe<UsersObjRelInsertInput>;
  assignedDate?: InputMaybe<Scalars['timestamptz']['input']>;
  consultantId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isBackup?: InputMaybe<Scalars['Boolean']['input']>;
  originalConsultant?: InputMaybe<UsersObjRelInsertInput>;
  originalConsultantId?: InputMaybe<Scalars['uuid']['input']>;
  payrollAssignmentAudits?: InputMaybe<PayrollAssignmentAuditsArrRelInsertInput>;
  payrollDate?: InputMaybe<PayrollDatesObjRelInsertInput>;
  payrollDateId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type PayrollAssignmentsMaxFields = {
  __typename?: 'payrollAssignmentsMaxFields';
  assignedBy?: Maybe<Scalars['uuid']['output']>;
  assignedDate?: Maybe<Scalars['timestamptz']['output']>;
  consultantId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  originalConsultantId?: Maybe<Scalars['uuid']['output']>;
  payrollDateId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "payroll_assignments" */
export type PayrollAssignmentsMaxOrderBy = {
  assignedBy?: InputMaybe<OrderBy>;
  assignedDate?: InputMaybe<OrderBy>;
  consultantId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalConsultantId?: InputMaybe<OrderBy>;
  payrollDateId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PayrollAssignmentsMinFields = {
  __typename?: 'payrollAssignmentsMinFields';
  assignedBy?: Maybe<Scalars['uuid']['output']>;
  assignedDate?: Maybe<Scalars['timestamptz']['output']>;
  consultantId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  originalConsultantId?: Maybe<Scalars['uuid']['output']>;
  payrollDateId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "payroll_assignments" */
export type PayrollAssignmentsMinOrderBy = {
  assignedBy?: InputMaybe<OrderBy>;
  assignedDate?: InputMaybe<OrderBy>;
  consultantId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  originalConsultantId?: InputMaybe<OrderBy>;
  payrollDateId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "payroll_assignments" */
export type PayrollAssignmentsMutationResponse = {
  __typename?: 'payrollAssignmentsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollAssignments>;
};

/** input type for inserting object relation for remote table "payroll_assignments" */
export type PayrollAssignmentsObjRelInsertInput = {
  data: PayrollAssignmentsInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollAssignmentsOnConflict>;
};

/** on_conflict condition type for table "payroll_assignments" */
export type PayrollAssignmentsOnConflict = {
  constraint: PayrollAssignmentsConstraint;
  updateColumns?: Array<PayrollAssignmentsUpdateColumn>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};

/** Ordering options when selecting data from "payroll_assignments". */
export type PayrollAssignmentsOrderBy = {
  assignedBy?: InputMaybe<OrderBy>;
  assignedByUser?: InputMaybe<UsersOrderBy>;
  assignedConsultant?: InputMaybe<UsersOrderBy>;
  assignedDate?: InputMaybe<OrderBy>;
  consultantId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isBackup?: InputMaybe<OrderBy>;
  originalConsultant?: InputMaybe<UsersOrderBy>;
  originalConsultantId?: InputMaybe<OrderBy>;
  payrollAssignmentAuditsAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateOrderBy>;
  payrollDate?: InputMaybe<PayrollDatesOrderBy>;
  payrollDateId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_assignments */
export type PayrollAssignmentsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_assignments" */
export type PayrollAssignmentsSelectColumn =
  /** column name */
  | 'assignedBy'
  /** column name */
  | 'assignedDate'
  /** column name */
  | 'consultantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isBackup'
  /** column name */
  | 'originalConsultantId'
  /** column name */
  | 'payrollDateId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** select "payrollAssignmentsAggregateBoolExpBool_andArgumentsColumns" columns of table "payroll_assignments" */
export type PayrollAssignmentsSelectColumnPayrollAssignmentsAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isBackup'
  | '%future added value';

/** select "payrollAssignmentsAggregateBoolExpBool_orArgumentsColumns" columns of table "payroll_assignments" */
export type PayrollAssignmentsSelectColumnPayrollAssignmentsAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isBackup'
  | '%future added value';

/** input type for updating data in table "payroll_assignments" */
export type PayrollAssignmentsSetInput = {
  assignedBy?: InputMaybe<Scalars['uuid']['input']>;
  assignedDate?: InputMaybe<Scalars['timestamptz']['input']>;
  consultantId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isBackup?: InputMaybe<Scalars['Boolean']['input']>;
  originalConsultantId?: InputMaybe<Scalars['uuid']['input']>;
  payrollDateId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "payrollAssignments" */
export type PayrollAssignmentsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollAssignmentsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollAssignmentsStreamCursorValueInput = {
  assignedBy?: InputMaybe<Scalars['uuid']['input']>;
  assignedDate?: InputMaybe<Scalars['timestamptz']['input']>;
  consultantId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isBackup?: InputMaybe<Scalars['Boolean']['input']>;
  originalConsultantId?: InputMaybe<Scalars['uuid']['input']>;
  payrollDateId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "payroll_assignments" */
export type PayrollAssignmentsUpdateColumn =
  /** column name */
  | 'assignedBy'
  /** column name */
  | 'assignedDate'
  /** column name */
  | 'consultantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isBackup'
  /** column name */
  | 'originalConsultantId'
  /** column name */
  | 'payrollDateId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type PayrollAssignmentsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollAssignmentsSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollAssignmentsBoolExp;
};

/** columns and relationships of "payroll_cycles" */
export type PayrollCycles = {
  __typename?: 'payrollCycles';
  /** An array relationship */
  adjustmentRules: Array<AdjustmentRules>;
  /** An aggregate relationship */
  adjustmentRulesAggregate: AdjustmentRulesAggregate;
  /** Timestamp when the cycle was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Detailed description of the payroll cycle */
  description?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the payroll cycle */
  id: Scalars['uuid']['output'];
  /** Name of the payroll cycle (Weekly, Biweekly, Monthly, etc.) */
  name: Scalars['payroll_cycle_type']['output'];
  /** An array relationship */
  payrolls: Array<Payrolls>;
  /** An aggregate relationship */
  payrollsAggregate: PayrollsAggregate;
  /** Timestamp when the cycle was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "payroll_cycles" */
export type PayrollCyclesAdjustmentRulesArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


/** columns and relationships of "payroll_cycles" */
export type PayrollCyclesAdjustmentRulesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


/** columns and relationships of "payroll_cycles" */
export type PayrollCyclesPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "payroll_cycles" */
export type PayrollCyclesPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};

/** aggregated selection of "payroll_cycles" */
export type PayrollCyclesAggregate = {
  __typename?: 'payrollCyclesAggregate';
  aggregate?: Maybe<PayrollCyclesAggregateFields>;
  nodes: Array<PayrollCycles>;
};

/** aggregate fields of "payroll_cycles" */
export type PayrollCyclesAggregateFields = {
  __typename?: 'payrollCyclesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollCyclesMaxFields>;
  min?: Maybe<PayrollCyclesMinFields>;
};


/** aggregate fields of "payroll_cycles" */
export type PayrollCyclesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollCyclesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "payroll_cycles". All fields are combined with a logical 'AND'. */
export type PayrollCyclesBoolExp = {
  _and?: InputMaybe<Array<PayrollCyclesBoolExp>>;
  _not?: InputMaybe<PayrollCyclesBoolExp>;
  _or?: InputMaybe<Array<PayrollCyclesBoolExp>>;
  adjustmentRules?: InputMaybe<AdjustmentRulesBoolExp>;
  adjustmentRulesAggregate?: InputMaybe<AdjustmentRulesAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<PayrollCycleTypeComparisonExp>;
  payrolls?: InputMaybe<PayrollsBoolExp>;
  payrollsAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "payroll_cycles" */
export type PayrollCyclesConstraint =
  /** unique or primary key constraint on columns "name" */
  | 'payroll_cycles_name_key'
  /** unique or primary key constraint on columns "id" */
  | 'payroll_cycles_pkey'
  | '%future added value';

/** input type for inserting data into table "payroll_cycles" */
export type PayrollCyclesInsertInput = {
  adjustmentRules?: InputMaybe<AdjustmentRulesArrRelInsertInput>;
  /** Timestamp when the cycle was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Detailed description of the payroll cycle */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the payroll cycle */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the payroll cycle (Weekly, Biweekly, Monthly, etc.) */
  name?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  payrolls?: InputMaybe<PayrollsArrRelInsertInput>;
  /** Timestamp when the cycle was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type PayrollCyclesMaxFields = {
  __typename?: 'payrollCyclesMaxFields';
  /** Timestamp when the cycle was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Detailed description of the payroll cycle */
  description?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the payroll cycle */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Name of the payroll cycle (Weekly, Biweekly, Monthly, etc.) */
  name?: Maybe<Scalars['payroll_cycle_type']['output']>;
  /** Timestamp when the cycle was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type PayrollCyclesMinFields = {
  __typename?: 'payrollCyclesMinFields';
  /** Timestamp when the cycle was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Detailed description of the payroll cycle */
  description?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the payroll cycle */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Name of the payroll cycle (Weekly, Biweekly, Monthly, etc.) */
  name?: Maybe<Scalars['payroll_cycle_type']['output']>;
  /** Timestamp when the cycle was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "payroll_cycles" */
export type PayrollCyclesMutationResponse = {
  __typename?: 'payrollCyclesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollCycles>;
};

/** input type for inserting object relation for remote table "payroll_cycles" */
export type PayrollCyclesObjRelInsertInput = {
  data: PayrollCyclesInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollCyclesOnConflict>;
};

/** on_conflict condition type for table "payroll_cycles" */
export type PayrollCyclesOnConflict = {
  constraint: PayrollCyclesConstraint;
  updateColumns?: Array<PayrollCyclesUpdateColumn>;
  where?: InputMaybe<PayrollCyclesBoolExp>;
};

/** Ordering options when selecting data from "payroll_cycles". */
export type PayrollCyclesOrderBy = {
  adjustmentRulesAggregate?: InputMaybe<AdjustmentRulesAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payrollsAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_cycles */
export type PayrollCyclesPkColumnsInput = {
  /** Unique identifier for the payroll cycle */
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_cycles" */
export type PayrollCyclesSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "payroll_cycles" */
export type PayrollCyclesSetInput = {
  /** Timestamp when the cycle was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Detailed description of the payroll cycle */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the payroll cycle */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the payroll cycle (Weekly, Biweekly, Monthly, etc.) */
  name?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  /** Timestamp when the cycle was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "payrollCycles" */
export type PayrollCyclesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollCyclesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollCyclesStreamCursorValueInput = {
  /** Timestamp when the cycle was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Detailed description of the payroll cycle */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the payroll cycle */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the payroll cycle (Weekly, Biweekly, Monthly, etc.) */
  name?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  /** Timestamp when the cycle was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "payroll_cycles" */
export type PayrollCyclesUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type PayrollCyclesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollCyclesSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollCyclesBoolExp;
};

/** columns and relationships of "payroll_dashboard_stats" */
export type PayrollDashboardStats = {
  __typename?: 'payrollDashboardStats';
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  cycleName?: Maybe<Scalars['payroll_cycle_type']['output']>;
  futureDates?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nextEftDate?: Maybe<Scalars['date']['output']>;
  pastDates?: Maybe<Scalars['bigint']['output']>;
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  status?: Maybe<Scalars['payroll_status']['output']>;
  totalDates?: Maybe<Scalars['bigint']['output']>;
};

/** aggregated selection of "payroll_dashboard_stats" */
export type PayrollDashboardStatsAggregate = {
  __typename?: 'payrollDashboardStatsAggregate';
  aggregate?: Maybe<PayrollDashboardStatsAggregateFields>;
  nodes: Array<PayrollDashboardStats>;
};

/** aggregate fields of "payroll_dashboard_stats" */
export type PayrollDashboardStatsAggregateFields = {
  __typename?: 'payrollDashboardStatsAggregateFields';
  avg?: Maybe<PayrollDashboardStatsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollDashboardStatsMaxFields>;
  min?: Maybe<PayrollDashboardStatsMinFields>;
  stddev?: Maybe<PayrollDashboardStatsStddevFields>;
  stddevPop?: Maybe<PayrollDashboardStatsStddevPopFields>;
  stddevSamp?: Maybe<PayrollDashboardStatsStddevSampFields>;
  sum?: Maybe<PayrollDashboardStatsSumFields>;
  varPop?: Maybe<PayrollDashboardStatsVarPopFields>;
  varSamp?: Maybe<PayrollDashboardStatsVarSampFields>;
  variance?: Maybe<PayrollDashboardStatsVarianceFields>;
};


/** aggregate fields of "payroll_dashboard_stats" */
export type PayrollDashboardStatsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollDashboardStatsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type PayrollDashboardStatsAvgFields = {
  __typename?: 'payrollDashboardStatsAvgFields';
  futureDates?: Maybe<Scalars['Float']['output']>;
  pastDates?: Maybe<Scalars['Float']['output']>;
  totalDates?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "payroll_dashboard_stats". All fields are combined with a logical 'AND'. */
export type PayrollDashboardStatsBoolExp = {
  _and?: InputMaybe<Array<PayrollDashboardStatsBoolExp>>;
  _not?: InputMaybe<PayrollDashboardStatsBoolExp>;
  _or?: InputMaybe<Array<PayrollDashboardStatsBoolExp>>;
  backupConsultantUserId?: InputMaybe<UuidComparisonExp>;
  clientName?: InputMaybe<StringComparisonExp>;
  cycleName?: InputMaybe<PayrollCycleTypeComparisonExp>;
  futureDates?: InputMaybe<BigintComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  managerUserId?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  nextEftDate?: InputMaybe<DateComparisonExp>;
  pastDates?: InputMaybe<BigintComparisonExp>;
  primaryConsultantUserId?: InputMaybe<UuidComparisonExp>;
  status?: InputMaybe<PayrollStatusComparisonExp>;
  totalDates?: InputMaybe<BigintComparisonExp>;
};

/** aggregate max on columns */
export type PayrollDashboardStatsMaxFields = {
  __typename?: 'payrollDashboardStatsMaxFields';
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  cycleName?: Maybe<Scalars['payroll_cycle_type']['output']>;
  futureDates?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nextEftDate?: Maybe<Scalars['date']['output']>;
  pastDates?: Maybe<Scalars['bigint']['output']>;
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  status?: Maybe<Scalars['payroll_status']['output']>;
  totalDates?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type PayrollDashboardStatsMinFields = {
  __typename?: 'payrollDashboardStatsMinFields';
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  clientName?: Maybe<Scalars['String']['output']>;
  cycleName?: Maybe<Scalars['payroll_cycle_type']['output']>;
  futureDates?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nextEftDate?: Maybe<Scalars['date']['output']>;
  pastDates?: Maybe<Scalars['bigint']['output']>;
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  status?: Maybe<Scalars['payroll_status']['output']>;
  totalDates?: Maybe<Scalars['bigint']['output']>;
};

/** Ordering options when selecting data from "payroll_dashboard_stats". */
export type PayrollDashboardStatsOrderBy = {
  backupConsultantUserId?: InputMaybe<OrderBy>;
  clientName?: InputMaybe<OrderBy>;
  cycleName?: InputMaybe<OrderBy>;
  futureDates?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  managerUserId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  nextEftDate?: InputMaybe<OrderBy>;
  pastDates?: InputMaybe<OrderBy>;
  primaryConsultantUserId?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  totalDates?: InputMaybe<OrderBy>;
};

/** select columns of table "payroll_dashboard_stats" */
export type PayrollDashboardStatsSelectColumn =
  /** column name */
  | 'backupConsultantUserId'
  /** column name */
  | 'clientName'
  /** column name */
  | 'cycleName'
  /** column name */
  | 'futureDates'
  /** column name */
  | 'id'
  /** column name */
  | 'managerUserId'
  /** column name */
  | 'name'
  /** column name */
  | 'nextEftDate'
  /** column name */
  | 'pastDates'
  /** column name */
  | 'primaryConsultantUserId'
  /** column name */
  | 'status'
  /** column name */
  | 'totalDates'
  | '%future added value';

/** aggregate stddev on columns */
export type PayrollDashboardStatsStddevFields = {
  __typename?: 'payrollDashboardStatsStddevFields';
  futureDates?: Maybe<Scalars['Float']['output']>;
  pastDates?: Maybe<Scalars['Float']['output']>;
  totalDates?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type PayrollDashboardStatsStddevPopFields = {
  __typename?: 'payrollDashboardStatsStddevPopFields';
  futureDates?: Maybe<Scalars['Float']['output']>;
  pastDates?: Maybe<Scalars['Float']['output']>;
  totalDates?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type PayrollDashboardStatsStddevSampFields = {
  __typename?: 'payrollDashboardStatsStddevSampFields';
  futureDates?: Maybe<Scalars['Float']['output']>;
  pastDates?: Maybe<Scalars['Float']['output']>;
  totalDates?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "payrollDashboardStats" */
export type PayrollDashboardStatsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollDashboardStatsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollDashboardStatsStreamCursorValueInput = {
  backupConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  clientName?: InputMaybe<Scalars['String']['input']>;
  cycleName?: InputMaybe<Scalars['payroll_cycle_type']['input']>;
  futureDates?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  managerUserId?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nextEftDate?: InputMaybe<Scalars['date']['input']>;
  pastDates?: InputMaybe<Scalars['bigint']['input']>;
  primaryConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  status?: InputMaybe<Scalars['payroll_status']['input']>;
  totalDates?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type PayrollDashboardStatsSumFields = {
  __typename?: 'payrollDashboardStatsSumFields';
  futureDates?: Maybe<Scalars['bigint']['output']>;
  pastDates?: Maybe<Scalars['bigint']['output']>;
  totalDates?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate varPop on columns */
export type PayrollDashboardStatsVarPopFields = {
  __typename?: 'payrollDashboardStatsVarPopFields';
  futureDates?: Maybe<Scalars['Float']['output']>;
  pastDates?: Maybe<Scalars['Float']['output']>;
  totalDates?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type PayrollDashboardStatsVarSampFields = {
  __typename?: 'payrollDashboardStatsVarSampFields';
  futureDates?: Maybe<Scalars['Float']['output']>;
  pastDates?: Maybe<Scalars['Float']['output']>;
  totalDates?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type PayrollDashboardStatsVarianceFields = {
  __typename?: 'payrollDashboardStatsVarianceFields';
  futureDates?: Maybe<Scalars['Float']['output']>;
  pastDates?: Maybe<Scalars['Float']['output']>;
  totalDates?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "payroll_date_types" */
export type PayrollDateTypes = {
  __typename?: 'payrollDateTypes';
  /** An array relationship */
  adjustmentRules: Array<AdjustmentRules>;
  /** An aggregate relationship */
  adjustmentRulesAggregate: AdjustmentRulesAggregate;
  /** Timestamp when the date type was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Detailed description of how this date type works */
  description?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the payroll date type */
  id: Scalars['uuid']['output'];
  /** Name of the date type (Fixed, Last Working Day, etc.) */
  name: Scalars['payroll_date_type']['output'];
  /** An array relationship */
  payrolls: Array<Payrolls>;
  /** An aggregate relationship */
  payrollsAggregate: PayrollsAggregate;
  /** Timestamp when the date type was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "payroll_date_types" */
export type PayrollDateTypesAdjustmentRulesArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


/** columns and relationships of "payroll_date_types" */
export type PayrollDateTypesAdjustmentRulesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


/** columns and relationships of "payroll_date_types" */
export type PayrollDateTypesPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "payroll_date_types" */
export type PayrollDateTypesPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};

/** aggregated selection of "payroll_date_types" */
export type PayrollDateTypesAggregate = {
  __typename?: 'payrollDateTypesAggregate';
  aggregate?: Maybe<PayrollDateTypesAggregateFields>;
  nodes: Array<PayrollDateTypes>;
};

/** aggregate fields of "payroll_date_types" */
export type PayrollDateTypesAggregateFields = {
  __typename?: 'payrollDateTypesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollDateTypesMaxFields>;
  min?: Maybe<PayrollDateTypesMinFields>;
};


/** aggregate fields of "payroll_date_types" */
export type PayrollDateTypesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollDateTypesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "payroll_date_types". All fields are combined with a logical 'AND'. */
export type PayrollDateTypesBoolExp = {
  _and?: InputMaybe<Array<PayrollDateTypesBoolExp>>;
  _not?: InputMaybe<PayrollDateTypesBoolExp>;
  _or?: InputMaybe<Array<PayrollDateTypesBoolExp>>;
  adjustmentRules?: InputMaybe<AdjustmentRulesBoolExp>;
  adjustmentRulesAggregate?: InputMaybe<AdjustmentRulesAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<PayrollDateTypeComparisonExp>;
  payrolls?: InputMaybe<PayrollsBoolExp>;
  payrollsAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "payroll_date_types" */
export type PayrollDateTypesConstraint =
  /** unique or primary key constraint on columns "name" */
  | 'payroll_date_types_name_key'
  /** unique or primary key constraint on columns "id" */
  | 'payroll_date_types_pkey'
  | '%future added value';

/** input type for inserting data into table "payroll_date_types" */
export type PayrollDateTypesInsertInput = {
  adjustmentRules?: InputMaybe<AdjustmentRulesArrRelInsertInput>;
  /** Timestamp when the date type was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Detailed description of how this date type works */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the payroll date type */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the date type (Fixed, Last Working Day, etc.) */
  name?: InputMaybe<Scalars['payroll_date_type']['input']>;
  payrolls?: InputMaybe<PayrollsArrRelInsertInput>;
  /** Timestamp when the date type was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type PayrollDateTypesMaxFields = {
  __typename?: 'payrollDateTypesMaxFields';
  /** Timestamp when the date type was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Detailed description of how this date type works */
  description?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the payroll date type */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Name of the date type (Fixed, Last Working Day, etc.) */
  name?: Maybe<Scalars['payroll_date_type']['output']>;
  /** Timestamp when the date type was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type PayrollDateTypesMinFields = {
  __typename?: 'payrollDateTypesMinFields';
  /** Timestamp when the date type was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Detailed description of how this date type works */
  description?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the payroll date type */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Name of the date type (Fixed, Last Working Day, etc.) */
  name?: Maybe<Scalars['payroll_date_type']['output']>;
  /** Timestamp when the date type was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "payroll_date_types" */
export type PayrollDateTypesMutationResponse = {
  __typename?: 'payrollDateTypesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollDateTypes>;
};

/** input type for inserting object relation for remote table "payroll_date_types" */
export type PayrollDateTypesObjRelInsertInput = {
  data: PayrollDateTypesInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollDateTypesOnConflict>;
};

/** on_conflict condition type for table "payroll_date_types" */
export type PayrollDateTypesOnConflict = {
  constraint: PayrollDateTypesConstraint;
  updateColumns?: Array<PayrollDateTypesUpdateColumn>;
  where?: InputMaybe<PayrollDateTypesBoolExp>;
};

/** Ordering options when selecting data from "payroll_date_types". */
export type PayrollDateTypesOrderBy = {
  adjustmentRulesAggregate?: InputMaybe<AdjustmentRulesAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payrollsAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_date_types */
export type PayrollDateTypesPkColumnsInput = {
  /** Unique identifier for the payroll date type */
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_date_types" */
export type PayrollDateTypesSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "payroll_date_types" */
export type PayrollDateTypesSetInput = {
  /** Timestamp when the date type was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Detailed description of how this date type works */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the payroll date type */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the date type (Fixed, Last Working Day, etc.) */
  name?: InputMaybe<Scalars['payroll_date_type']['input']>;
  /** Timestamp when the date type was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "payrollDateTypes" */
export type PayrollDateTypesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollDateTypesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollDateTypesStreamCursorValueInput = {
  /** Timestamp when the date type was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Detailed description of how this date type works */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the payroll date type */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the date type (Fixed, Last Working Day, etc.) */
  name?: InputMaybe<Scalars['payroll_date_type']['input']>;
  /** Timestamp when the date type was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "payroll_date_types" */
export type PayrollDateTypesUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type PayrollDateTypesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollDateTypesSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollDateTypesBoolExp;
};

/** columns and relationships of "payroll_dates" */
export type PayrollDates = {
  __typename?: 'payrollDates';
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate: Scalars['date']['output'];
  /** Timestamp when the date record was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Unique identifier for the payroll date */
  id: Scalars['uuid']['output'];
  /** Additional notes about this payroll date */
  notes?: Maybe<Scalars['String']['output']>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate: Scalars['date']['output'];
  /** An object relationship */
  payrollAssignment?: Maybe<PayrollAssignments>;
  /** An array relationship */
  payrollAssignmentAudits: Array<PayrollAssignmentAudits>;
  /** An aggregate relationship */
  payrollAssignmentAuditsAggregate: PayrollAssignmentAuditsAggregate;
  /** Reference to the payroll this date belongs to */
  payrollId: Scalars['uuid']['output'];
  /** Date when payroll processing must be completed */
  processingDate: Scalars['date']['output'];
  /** An object relationship */
  relatedPayroll: Payrolls;
  /** Timestamp when the date record was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};


/** columns and relationships of "payroll_dates" */
export type PayrollDatesPayrollAssignmentAuditsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "payroll_dates" */
export type PayrollDatesPayrollAssignmentAuditsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};

/** aggregated selection of "payroll_dates" */
export type PayrollDatesAggregate = {
  __typename?: 'payrollDatesAggregate';
  aggregate?: Maybe<PayrollDatesAggregateFields>;
  nodes: Array<PayrollDates>;
};

export type PayrollDatesAggregateBoolExp = {
  count?: InputMaybe<PayrollDatesAggregateBoolExpCount>;
};

export type PayrollDatesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PayrollDatesBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "payroll_dates" */
export type PayrollDatesAggregateFields = {
  __typename?: 'payrollDatesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollDatesMaxFields>;
  min?: Maybe<PayrollDatesMinFields>;
};


/** aggregate fields of "payroll_dates" */
export type PayrollDatesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payroll_dates" */
export type PayrollDatesAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PayrollDatesMaxOrderBy>;
  min?: InputMaybe<PayrollDatesMinOrderBy>;
};

/** input type for inserting array relation for remote table "payroll_dates" */
export type PayrollDatesArrRelInsertInput = {
  data: Array<PayrollDatesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollDatesOnConflict>;
};

/** Boolean expression to filter rows from the table "payroll_dates". All fields are combined with a logical 'AND'. */
export type PayrollDatesBoolExp = {
  _and?: InputMaybe<Array<PayrollDatesBoolExp>>;
  _not?: InputMaybe<PayrollDatesBoolExp>;
  _or?: InputMaybe<Array<PayrollDatesBoolExp>>;
  adjustedEftDate?: InputMaybe<DateComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  notes?: InputMaybe<StringComparisonExp>;
  originalEftDate?: InputMaybe<DateComparisonExp>;
  payrollAssignment?: InputMaybe<PayrollAssignmentsBoolExp>;
  payrollAssignmentAudits?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
  payrollAssignmentAuditsAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateBoolExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  processingDate?: InputMaybe<DateComparisonExp>;
  relatedPayroll?: InputMaybe<PayrollsBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "payroll_dates" */
export type PayrollDatesConstraint =
  /** unique or primary key constraint on columns "payroll_id", "original_eft_date" */
  | 'idx_unique_payroll_date'
  /** unique or primary key constraint on columns "id" */
  | 'payroll_dates_pkey'
  | '%future added value';

/** input type for inserting data into table "payroll_dates" */
export type PayrollDatesInsertInput = {
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate?: InputMaybe<Scalars['date']['input']>;
  /** Timestamp when the date record was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Unique identifier for the payroll date */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Additional notes about this payroll date */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate?: InputMaybe<Scalars['date']['input']>;
  payrollAssignment?: InputMaybe<PayrollAssignmentsObjRelInsertInput>;
  payrollAssignmentAudits?: InputMaybe<PayrollAssignmentAuditsArrRelInsertInput>;
  /** Reference to the payroll this date belongs to */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** Date when payroll processing must be completed */
  processingDate?: InputMaybe<Scalars['date']['input']>;
  relatedPayroll?: InputMaybe<PayrollsObjRelInsertInput>;
  /** Timestamp when the date record was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type PayrollDatesMaxFields = {
  __typename?: 'payrollDatesMaxFields';
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate?: Maybe<Scalars['date']['output']>;
  /** Timestamp when the date record was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Unique identifier for the payroll date */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Additional notes about this payroll date */
  notes?: Maybe<Scalars['String']['output']>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate?: Maybe<Scalars['date']['output']>;
  /** Reference to the payroll this date belongs to */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  /** Date when payroll processing must be completed */
  processingDate?: Maybe<Scalars['date']['output']>;
  /** Timestamp when the date record was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "payroll_dates" */
export type PayrollDatesMaxOrderBy = {
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate?: InputMaybe<OrderBy>;
  /** Timestamp when the date record was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Unique identifier for the payroll date */
  id?: InputMaybe<OrderBy>;
  /** Additional notes about this payroll date */
  notes?: InputMaybe<OrderBy>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate?: InputMaybe<OrderBy>;
  /** Reference to the payroll this date belongs to */
  payrollId?: InputMaybe<OrderBy>;
  /** Date when payroll processing must be completed */
  processingDate?: InputMaybe<OrderBy>;
  /** Timestamp when the date record was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PayrollDatesMinFields = {
  __typename?: 'payrollDatesMinFields';
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate?: Maybe<Scalars['date']['output']>;
  /** Timestamp when the date record was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Unique identifier for the payroll date */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Additional notes about this payroll date */
  notes?: Maybe<Scalars['String']['output']>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate?: Maybe<Scalars['date']['output']>;
  /** Reference to the payroll this date belongs to */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  /** Date when payroll processing must be completed */
  processingDate?: Maybe<Scalars['date']['output']>;
  /** Timestamp when the date record was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "payroll_dates" */
export type PayrollDatesMinOrderBy = {
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate?: InputMaybe<OrderBy>;
  /** Timestamp when the date record was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Unique identifier for the payroll date */
  id?: InputMaybe<OrderBy>;
  /** Additional notes about this payroll date */
  notes?: InputMaybe<OrderBy>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate?: InputMaybe<OrderBy>;
  /** Reference to the payroll this date belongs to */
  payrollId?: InputMaybe<OrderBy>;
  /** Date when payroll processing must be completed */
  processingDate?: InputMaybe<OrderBy>;
  /** Timestamp when the date record was last updated */
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "payroll_dates" */
export type PayrollDatesMutationResponse = {
  __typename?: 'payrollDatesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollDates>;
};

/** input type for inserting object relation for remote table "payroll_dates" */
export type PayrollDatesObjRelInsertInput = {
  data: PayrollDatesInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollDatesOnConflict>;
};

/** on_conflict condition type for table "payroll_dates" */
export type PayrollDatesOnConflict = {
  constraint: PayrollDatesConstraint;
  updateColumns?: Array<PayrollDatesUpdateColumn>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};

/** Ordering options when selecting data from "payroll_dates". */
export type PayrollDatesOrderBy = {
  adjustedEftDate?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  notes?: InputMaybe<OrderBy>;
  originalEftDate?: InputMaybe<OrderBy>;
  payrollAssignment?: InputMaybe<PayrollAssignmentsOrderBy>;
  payrollAssignmentAuditsAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateOrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  processingDate?: InputMaybe<OrderBy>;
  relatedPayroll?: InputMaybe<PayrollsOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_dates */
export type PayrollDatesPkColumnsInput = {
  /** Unique identifier for the payroll date */
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_dates" */
export type PayrollDatesSelectColumn =
  /** column name */
  | 'adjustedEftDate'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'notes'
  /** column name */
  | 'originalEftDate'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'processingDate'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "payroll_dates" */
export type PayrollDatesSetInput = {
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate?: InputMaybe<Scalars['date']['input']>;
  /** Timestamp when the date record was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Unique identifier for the payroll date */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Additional notes about this payroll date */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate?: InputMaybe<Scalars['date']['input']>;
  /** Reference to the payroll this date belongs to */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** Date when payroll processing must be completed */
  processingDate?: InputMaybe<Scalars['date']['input']>;
  /** Timestamp when the date record was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "payrollDates" */
export type PayrollDatesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollDatesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollDatesStreamCursorValueInput = {
  /** Final EFT date after holiday and weekend adjustments */
  adjustedEftDate?: InputMaybe<Scalars['date']['input']>;
  /** Timestamp when the date record was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Unique identifier for the payroll date */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Additional notes about this payroll date */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Originally calculated EFT date before adjustments */
  originalEftDate?: InputMaybe<Scalars['date']['input']>;
  /** Reference to the payroll this date belongs to */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** Date when payroll processing must be completed */
  processingDate?: InputMaybe<Scalars['date']['input']>;
  /** Timestamp when the date record was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "payroll_dates" */
export type PayrollDatesUpdateColumn =
  /** column name */
  | 'adjustedEftDate'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'notes'
  /** column name */
  | 'originalEftDate'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'processingDate'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type PayrollDatesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollDatesSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollDatesBoolExp;
};

/** columns and relationships of "payroll_required_skills" */
export type PayrollRequiredSkill = {
  __typename?: 'payrollRequiredSkill';
  payrollId?: Maybe<Scalars['uuid']['output']>;
  requiredLevel?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  requiringPayroll?: Maybe<Payrolls>;
  skillName?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "payroll_required_skills" */
export type PayrollRequiredSkillAggregate = {
  __typename?: 'payrollRequiredSkillAggregate';
  aggregate?: Maybe<PayrollRequiredSkillAggregateFields>;
  nodes: Array<PayrollRequiredSkill>;
};

export type PayrollRequiredSkillAggregateBoolExp = {
  count?: InputMaybe<PayrollRequiredSkillAggregateBoolExpCount>;
};

export type PayrollRequiredSkillAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PayrollRequiredSkillBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "payroll_required_skills" */
export type PayrollRequiredSkillAggregateFields = {
  __typename?: 'payrollRequiredSkillAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollRequiredSkillMaxFields>;
  min?: Maybe<PayrollRequiredSkillMinFields>;
};


/** aggregate fields of "payroll_required_skills" */
export type PayrollRequiredSkillAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payroll_required_skills" */
export type PayrollRequiredSkillAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PayrollRequiredSkillMaxOrderBy>;
  min?: InputMaybe<PayrollRequiredSkillMinOrderBy>;
};

/** input type for inserting array relation for remote table "payroll_required_skills" */
export type PayrollRequiredSkillArrRelInsertInput = {
  data: Array<PayrollRequiredSkillInsertInput>;
};

/** Boolean expression to filter rows from the table "payroll_required_skills". All fields are combined with a logical 'AND'. */
export type PayrollRequiredSkillBoolExp = {
  _and?: InputMaybe<Array<PayrollRequiredSkillBoolExp>>;
  _not?: InputMaybe<PayrollRequiredSkillBoolExp>;
  _or?: InputMaybe<Array<PayrollRequiredSkillBoolExp>>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  requiredLevel?: InputMaybe<StringComparisonExp>;
  requiringPayroll?: InputMaybe<PayrollsBoolExp>;
  skillName?: InputMaybe<StringComparisonExp>;
};

/** input type for inserting data into table "payroll_required_skills" */
export type PayrollRequiredSkillInsertInput = {
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  requiredLevel?: InputMaybe<Scalars['String']['input']>;
  requiringPayroll?: InputMaybe<PayrollsObjRelInsertInput>;
  skillName?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type PayrollRequiredSkillMaxFields = {
  __typename?: 'payrollRequiredSkillMaxFields';
  payrollId?: Maybe<Scalars['uuid']['output']>;
  requiredLevel?: Maybe<Scalars['String']['output']>;
  skillName?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "payroll_required_skills" */
export type PayrollRequiredSkillMaxOrderBy = {
  payrollId?: InputMaybe<OrderBy>;
  requiredLevel?: InputMaybe<OrderBy>;
  skillName?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PayrollRequiredSkillMinFields = {
  __typename?: 'payrollRequiredSkillMinFields';
  payrollId?: Maybe<Scalars['uuid']['output']>;
  requiredLevel?: Maybe<Scalars['String']['output']>;
  skillName?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "payroll_required_skills" */
export type PayrollRequiredSkillMinOrderBy = {
  payrollId?: InputMaybe<OrderBy>;
  requiredLevel?: InputMaybe<OrderBy>;
  skillName?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "payroll_required_skills" */
export type PayrollRequiredSkillMutationResponse = {
  __typename?: 'payrollRequiredSkillMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollRequiredSkill>;
};

/** Ordering options when selecting data from "payroll_required_skills". */
export type PayrollRequiredSkillOrderBy = {
  payrollId?: InputMaybe<OrderBy>;
  requiredLevel?: InputMaybe<OrderBy>;
  requiringPayroll?: InputMaybe<PayrollsOrderBy>;
  skillName?: InputMaybe<OrderBy>;
};

/** select columns of table "payroll_required_skills" */
export type PayrollRequiredSkillSelectColumn =
  /** column name */
  | 'payrollId'
  /** column name */
  | 'requiredLevel'
  /** column name */
  | 'skillName'
  | '%future added value';

/** input type for updating data in table "payroll_required_skills" */
export type PayrollRequiredSkillSetInput = {
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  requiredLevel?: InputMaybe<Scalars['String']['input']>;
  skillName?: InputMaybe<Scalars['String']['input']>;
};

/** Streaming cursor of the table "payrollRequiredSkill" */
export type PayrollRequiredSkillStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollRequiredSkillStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollRequiredSkillStreamCursorValueInput = {
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  requiredLevel?: InputMaybe<Scalars['String']['input']>;
  skillName?: InputMaybe<Scalars['String']['input']>;
};

export type PayrollRequiredSkillUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollRequiredSkillSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollRequiredSkillBoolExp;
};

/** columns and relationships of "payroll_triggers_status" */
export type PayrollTriggersStatus = {
  __typename?: 'payrollTriggersStatus';
  actionStatement?: Maybe<Scalars['String']['output']>;
  actionTiming?: Maybe<Scalars['String']['output']>;
  eventManipulation?: Maybe<Scalars['String']['output']>;
  eventObjectTable?: Maybe<Scalars['name']['output']>;
  triggerName?: Maybe<Scalars['name']['output']>;
};

/** aggregated selection of "payroll_triggers_status" */
export type PayrollTriggersStatusAggregate = {
  __typename?: 'payrollTriggersStatusAggregate';
  aggregate?: Maybe<PayrollTriggersStatusAggregateFields>;
  nodes: Array<PayrollTriggersStatus>;
};

/** aggregate fields of "payroll_triggers_status" */
export type PayrollTriggersStatusAggregateFields = {
  __typename?: 'payrollTriggersStatusAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollTriggersStatusMaxFields>;
  min?: Maybe<PayrollTriggersStatusMinFields>;
};


/** aggregate fields of "payroll_triggers_status" */
export type PayrollTriggersStatusAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollTriggersStatusSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "payroll_triggers_status". All fields are combined with a logical 'AND'. */
export type PayrollTriggersStatusBoolExp = {
  _and?: InputMaybe<Array<PayrollTriggersStatusBoolExp>>;
  _not?: InputMaybe<PayrollTriggersStatusBoolExp>;
  _or?: InputMaybe<Array<PayrollTriggersStatusBoolExp>>;
  actionStatement?: InputMaybe<StringComparisonExp>;
  actionTiming?: InputMaybe<StringComparisonExp>;
  eventManipulation?: InputMaybe<StringComparisonExp>;
  eventObjectTable?: InputMaybe<NameComparisonExp>;
  triggerName?: InputMaybe<NameComparisonExp>;
};

/** aggregate max on columns */
export type PayrollTriggersStatusMaxFields = {
  __typename?: 'payrollTriggersStatusMaxFields';
  actionStatement?: Maybe<Scalars['String']['output']>;
  actionTiming?: Maybe<Scalars['String']['output']>;
  eventManipulation?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type PayrollTriggersStatusMinFields = {
  __typename?: 'payrollTriggersStatusMinFields';
  actionStatement?: Maybe<Scalars['String']['output']>;
  actionTiming?: Maybe<Scalars['String']['output']>;
  eventManipulation?: Maybe<Scalars['String']['output']>;
};

/** Ordering options when selecting data from "payroll_triggers_status". */
export type PayrollTriggersStatusOrderBy = {
  actionStatement?: InputMaybe<OrderBy>;
  actionTiming?: InputMaybe<OrderBy>;
  eventManipulation?: InputMaybe<OrderBy>;
  eventObjectTable?: InputMaybe<OrderBy>;
  triggerName?: InputMaybe<OrderBy>;
};

/** select columns of table "payroll_triggers_status" */
export type PayrollTriggersStatusSelectColumn =
  /** column name */
  | 'actionStatement'
  /** column name */
  | 'actionTiming'
  /** column name */
  | 'eventManipulation'
  /** column name */
  | 'eventObjectTable'
  /** column name */
  | 'triggerName'
  | '%future added value';

/** Streaming cursor of the table "payrollTriggersStatus" */
export type PayrollTriggersStatusStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollTriggersStatusStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollTriggersStatusStreamCursorValueInput = {
  actionStatement?: InputMaybe<Scalars['String']['input']>;
  actionTiming?: InputMaybe<Scalars['String']['input']>;
  eventManipulation?: InputMaybe<Scalars['String']['input']>;
  eventObjectTable?: InputMaybe<Scalars['name']['input']>;
  triggerName?: InputMaybe<Scalars['name']['input']>;
};

/** columns and relationships of "payroll_version_history_results" */
export type PayrollVersionHistoryResults = {
  __typename?: 'payrollVersionHistoryResults';
  active: Scalars['Boolean']['output'];
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id: Scalars['uuid']['output'];
  isCurrent: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  payrollId: Scalars['uuid']['output'];
  queriedAt?: Maybe<Scalars['timestamptz']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  versionNumber: Scalars['Int']['output'];
  versionReason?: Maybe<Scalars['String']['output']>;
};

export type PayrollVersionHistoryResultsAggregate = {
  __typename?: 'payrollVersionHistoryResultsAggregate';
  aggregate?: Maybe<PayrollVersionHistoryResultsAggregateFields>;
  nodes: Array<PayrollVersionHistoryResults>;
};

/** aggregate fields of "payroll_version_history_results" */
export type PayrollVersionHistoryResultsAggregateFields = {
  __typename?: 'payrollVersionHistoryResultsAggregateFields';
  avg?: Maybe<PayrollVersionHistoryResultsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollVersionHistoryResultsMaxFields>;
  min?: Maybe<PayrollVersionHistoryResultsMinFields>;
  stddev?: Maybe<PayrollVersionHistoryResultsStddevFields>;
  stddevPop?: Maybe<PayrollVersionHistoryResultsStddevPopFields>;
  stddevSamp?: Maybe<PayrollVersionHistoryResultsStddevSampFields>;
  sum?: Maybe<PayrollVersionHistoryResultsSumFields>;
  varPop?: Maybe<PayrollVersionHistoryResultsVarPopFields>;
  varSamp?: Maybe<PayrollVersionHistoryResultsVarSampFields>;
  variance?: Maybe<PayrollVersionHistoryResultsVarianceFields>;
};


/** aggregate fields of "payroll_version_history_results" */
export type PayrollVersionHistoryResultsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type PayrollVersionHistoryResultsAvgFields = {
  __typename?: 'payrollVersionHistoryResultsAvgFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "payroll_version_history_results". All fields are combined with a logical 'AND'. */
export type PayrollVersionHistoryResultsBoolExp = {
  _and?: InputMaybe<Array<PayrollVersionHistoryResultsBoolExp>>;
  _not?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
  _or?: InputMaybe<Array<PayrollVersionHistoryResultsBoolExp>>;
  active?: InputMaybe<BooleanComparisonExp>;
  goLiveDate?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isCurrent?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  queriedAt?: InputMaybe<TimestamptzComparisonExp>;
  supersededDate?: InputMaybe<DateComparisonExp>;
  versionNumber?: InputMaybe<IntComparisonExp>;
  versionReason?: InputMaybe<StringComparisonExp>;
};

/** unique or primary key constraints on table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'payroll_version_history_results_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsIncInput = {
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsInsertInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isCurrent?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  queriedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  supersededDate?: InputMaybe<Scalars['date']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
  versionReason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type PayrollVersionHistoryResultsMaxFields = {
  __typename?: 'payrollVersionHistoryResultsMaxFields';
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  queriedAt?: Maybe<Scalars['timestamptz']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type PayrollVersionHistoryResultsMinFields = {
  __typename?: 'payrollVersionHistoryResultsMinFields';
  goLiveDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  payrollId?: Maybe<Scalars['uuid']['output']>;
  queriedAt?: Maybe<Scalars['timestamptz']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsMutationResponse = {
  __typename?: 'payrollVersionHistoryResultsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollVersionHistoryResults>;
};

/** on_conflict condition type for table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsOnConflict = {
  constraint: PayrollVersionHistoryResultsConstraint;
  updateColumns?: Array<PayrollVersionHistoryResultsUpdateColumn>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};

/** Ordering options when selecting data from "payroll_version_history_results". */
export type PayrollVersionHistoryResultsOrderBy = {
  active?: InputMaybe<OrderBy>;
  goLiveDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isCurrent?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  queriedAt?: InputMaybe<OrderBy>;
  supersededDate?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
  versionReason?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_version_history_results */
export type PayrollVersionHistoryResultsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsSelectColumn =
  /** column name */
  | 'active'
  /** column name */
  | 'goLiveDate'
  /** column name */
  | 'id'
  /** column name */
  | 'isCurrent'
  /** column name */
  | 'name'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'queriedAt'
  /** column name */
  | 'supersededDate'
  /** column name */
  | 'versionNumber'
  /** column name */
  | 'versionReason'
  | '%future added value';

/** input type for updating data in table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsSetInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isCurrent?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  queriedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  supersededDate?: InputMaybe<Scalars['date']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
  versionReason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type PayrollVersionHistoryResultsStddevFields = {
  __typename?: 'payrollVersionHistoryResultsStddevFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type PayrollVersionHistoryResultsStddevPopFields = {
  __typename?: 'payrollVersionHistoryResultsStddevPopFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type PayrollVersionHistoryResultsStddevSampFields = {
  __typename?: 'payrollVersionHistoryResultsStddevSampFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "payrollVersionHistoryResults" */
export type PayrollVersionHistoryResultsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollVersionHistoryResultsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollVersionHistoryResultsStreamCursorValueInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isCurrent?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  queriedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  supersededDate?: InputMaybe<Scalars['date']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
  versionReason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type PayrollVersionHistoryResultsSumFields = {
  __typename?: 'payrollVersionHistoryResultsSumFields';
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "payroll_version_history_results" */
export type PayrollVersionHistoryResultsUpdateColumn =
  /** column name */
  | 'active'
  /** column name */
  | 'goLiveDate'
  /** column name */
  | 'id'
  /** column name */
  | 'isCurrent'
  /** column name */
  | 'name'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'queriedAt'
  /** column name */
  | 'supersededDate'
  /** column name */
  | 'versionNumber'
  /** column name */
  | 'versionReason'
  | '%future added value';

export type PayrollVersionHistoryResultsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<PayrollVersionHistoryResultsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollVersionHistoryResultsSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollVersionHistoryResultsBoolExp;
};

/** aggregate varPop on columns */
export type PayrollVersionHistoryResultsVarPopFields = {
  __typename?: 'payrollVersionHistoryResultsVarPopFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type PayrollVersionHistoryResultsVarSampFields = {
  __typename?: 'payrollVersionHistoryResultsVarSampFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type PayrollVersionHistoryResultsVarianceFields = {
  __typename?: 'payrollVersionHistoryResultsVarianceFields';
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "payroll_version_results" */
export type PayrollVersionResults = {
  __typename?: 'payrollVersionResults';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  datesDeleted: Scalars['Int']['output'];
  id: Scalars['uuid']['output'];
  message: Scalars['String']['output'];
  newPayrollId: Scalars['uuid']['output'];
  newVersionNumber: Scalars['Int']['output'];
  oldPayrollId: Scalars['uuid']['output'];
};

export type PayrollVersionResultsAggregate = {
  __typename?: 'payrollVersionResultsAggregate';
  aggregate?: Maybe<PayrollVersionResultsAggregateFields>;
  nodes: Array<PayrollVersionResults>;
};

/** aggregate fields of "payroll_version_results" */
export type PayrollVersionResultsAggregateFields = {
  __typename?: 'payrollVersionResultsAggregateFields';
  avg?: Maybe<PayrollVersionResultsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollVersionResultsMaxFields>;
  min?: Maybe<PayrollVersionResultsMinFields>;
  stddev?: Maybe<PayrollVersionResultsStddevFields>;
  stddevPop?: Maybe<PayrollVersionResultsStddevPopFields>;
  stddevSamp?: Maybe<PayrollVersionResultsStddevSampFields>;
  sum?: Maybe<PayrollVersionResultsSumFields>;
  varPop?: Maybe<PayrollVersionResultsVarPopFields>;
  varSamp?: Maybe<PayrollVersionResultsVarSampFields>;
  variance?: Maybe<PayrollVersionResultsVarianceFields>;
};


/** aggregate fields of "payroll_version_results" */
export type PayrollVersionResultsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type PayrollVersionResultsAvgFields = {
  __typename?: 'payrollVersionResultsAvgFields';
  datesDeleted?: Maybe<Scalars['Float']['output']>;
  newVersionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "payroll_version_results". All fields are combined with a logical 'AND'. */
export type PayrollVersionResultsBoolExp = {
  _and?: InputMaybe<Array<PayrollVersionResultsBoolExp>>;
  _not?: InputMaybe<PayrollVersionResultsBoolExp>;
  _or?: InputMaybe<Array<PayrollVersionResultsBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdByUserId?: InputMaybe<UuidComparisonExp>;
  datesDeleted?: InputMaybe<IntComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  message?: InputMaybe<StringComparisonExp>;
  newPayrollId?: InputMaybe<UuidComparisonExp>;
  newVersionNumber?: InputMaybe<IntComparisonExp>;
  oldPayrollId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "payroll_version_results" */
export type PayrollVersionResultsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'payroll_version_results_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "payroll_version_results" */
export type PayrollVersionResultsIncInput = {
  datesDeleted?: InputMaybe<Scalars['Int']['input']>;
  newVersionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payroll_version_results" */
export type PayrollVersionResultsInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  datesDeleted?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  newPayrollId?: InputMaybe<Scalars['uuid']['input']>;
  newVersionNumber?: InputMaybe<Scalars['Int']['input']>;
  oldPayrollId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type PayrollVersionResultsMaxFields = {
  __typename?: 'payrollVersionResultsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  datesDeleted?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  newPayrollId?: Maybe<Scalars['uuid']['output']>;
  newVersionNumber?: Maybe<Scalars['Int']['output']>;
  oldPayrollId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregate min on columns */
export type PayrollVersionResultsMinFields = {
  __typename?: 'payrollVersionResultsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  datesDeleted?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  newPayrollId?: Maybe<Scalars['uuid']['output']>;
  newVersionNumber?: Maybe<Scalars['Int']['output']>;
  oldPayrollId?: Maybe<Scalars['uuid']['output']>;
};

/** response of any mutation on the table "payroll_version_results" */
export type PayrollVersionResultsMutationResponse = {
  __typename?: 'payrollVersionResultsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PayrollVersionResults>;
};

/** on_conflict condition type for table "payroll_version_results" */
export type PayrollVersionResultsOnConflict = {
  constraint: PayrollVersionResultsConstraint;
  updateColumns?: Array<PayrollVersionResultsUpdateColumn>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};

/** Ordering options when selecting data from "payroll_version_results". */
export type PayrollVersionResultsOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdByUserId?: InputMaybe<OrderBy>;
  datesDeleted?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  message?: InputMaybe<OrderBy>;
  newPayrollId?: InputMaybe<OrderBy>;
  newVersionNumber?: InputMaybe<OrderBy>;
  oldPayrollId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payroll_version_results */
export type PayrollVersionResultsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "payroll_version_results" */
export type PayrollVersionResultsSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdByUserId'
  /** column name */
  | 'datesDeleted'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'newPayrollId'
  /** column name */
  | 'newVersionNumber'
  /** column name */
  | 'oldPayrollId'
  | '%future added value';

/** input type for updating data in table "payroll_version_results" */
export type PayrollVersionResultsSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  datesDeleted?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  newPayrollId?: InputMaybe<Scalars['uuid']['input']>;
  newVersionNumber?: InputMaybe<Scalars['Int']['input']>;
  oldPayrollId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate stddev on columns */
export type PayrollVersionResultsStddevFields = {
  __typename?: 'payrollVersionResultsStddevFields';
  datesDeleted?: Maybe<Scalars['Float']['output']>;
  newVersionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type PayrollVersionResultsStddevPopFields = {
  __typename?: 'payrollVersionResultsStddevPopFields';
  datesDeleted?: Maybe<Scalars['Float']['output']>;
  newVersionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type PayrollVersionResultsStddevSampFields = {
  __typename?: 'payrollVersionResultsStddevSampFields';
  datesDeleted?: Maybe<Scalars['Float']['output']>;
  newVersionNumber?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "payrollVersionResults" */
export type PayrollVersionResultsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollVersionResultsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollVersionResultsStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  datesDeleted?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  newPayrollId?: InputMaybe<Scalars['uuid']['input']>;
  newVersionNumber?: InputMaybe<Scalars['Int']['input']>;
  oldPayrollId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate sum on columns */
export type PayrollVersionResultsSumFields = {
  __typename?: 'payrollVersionResultsSumFields';
  datesDeleted?: Maybe<Scalars['Int']['output']>;
  newVersionNumber?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "payroll_version_results" */
export type PayrollVersionResultsUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdByUserId'
  /** column name */
  | 'datesDeleted'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'newPayrollId'
  /** column name */
  | 'newVersionNumber'
  /** column name */
  | 'oldPayrollId'
  | '%future added value';

export type PayrollVersionResultsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<PayrollVersionResultsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollVersionResultsSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollVersionResultsBoolExp;
};

/** aggregate varPop on columns */
export type PayrollVersionResultsVarPopFields = {
  __typename?: 'payrollVersionResultsVarPopFields';
  datesDeleted?: Maybe<Scalars['Float']['output']>;
  newVersionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type PayrollVersionResultsVarSampFields = {
  __typename?: 'payrollVersionResultsVarSampFields';
  datesDeleted?: Maybe<Scalars['Float']['output']>;
  newVersionNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type PayrollVersionResultsVarianceFields = {
  __typename?: 'payrollVersionResultsVarianceFields';
  datesDeleted?: Maybe<Scalars['Float']['output']>;
  newVersionNumber?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "payrolls" */
export type Payrolls = {
  __typename?: 'payrolls';
  actualHours?: Maybe<Scalars['numeric']['output']>;
  actualRevenue?: Maybe<Scalars['numeric']['output']>;
  /** An object relationship */
  backupConsultant?: Maybe<Users>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  /** An array relationship */
  billingItems: Array<BillingItems>;
  /** An aggregate relationship */
  billingItemsAggregate: BillingItemsAggregate;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  childPayrolls: Array<Payrolls>;
  /** An aggregate relationship */
  childPayrollsAggregate: PayrollsAggregate;
  /** An object relationship */
  client: Clients;
  /** Reference to the client this payroll belongs to */
  clientId: Scalars['uuid']['output'];
  /** Timestamp when the payroll was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  /** Reference to the payroll cycle */
  cycleId: Scalars['uuid']['output'];
  /** Reference to the payroll date type */
  dateTypeId: Scalars['uuid']['output'];
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Int']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Int']['output']>;
  estimatedHours?: Maybe<Scalars['numeric']['output']>;
  estimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  /** The date when the payroll went live in the system */
  goLiveDate?: Maybe<Scalars['date']['output']>;
  /** Unique identifier for the payroll */
  id: Scalars['uuid']['output'];
  lastBilledDate?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  manager?: Maybe<Users>;
  /** Manager overseeing this payroll */
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  /** Name of the payroll */
  name: Scalars['String']['output'];
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  parentPayroll?: Maybe<Payrolls>;
  parentPayrollId?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  payrollCycle: PayrollCycles;
  /** An object relationship */
  payrollDateType: PayrollDateTypes;
  /** An array relationship */
  payrollDates: Array<PayrollDates>;
  /** An aggregate relationship */
  payrollDatesAggregate: PayrollDatesAggregate;
  /** An array relationship */
  payrollRequiredSkills: Array<PayrollRequiredSkill>;
  /** An aggregate relationship */
  payrollRequiredSkillsAggregate: PayrollRequiredSkillAggregate;
  /** External payroll system used for this client */
  payrollSystem?: Maybe<Scalars['String']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  primaryConsultant?: Maybe<Users>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft: Scalars['Int']['output'];
  /** Number of hours required to process this payroll */
  processingTime: Scalars['Int']['output'];
  profitMargin?: Maybe<Scalars['numeric']['output']>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status: Scalars['payroll_status']['output'];
  supersededDate?: Maybe<Scalars['date']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  timeEntries: Array<TimeEntries>;
  /** An aggregate relationship */
  timeEntriesAggregate: TimeEntriesAggregate;
  /** Timestamp when the payroll was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};


/** columns and relationships of "payrolls" */
export type PayrollsBillingItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsBillingItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsChildPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsChildPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsPayrollDatesArgs = {
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsPayrollDatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsPayrollRequiredSkillsArgs = {
  distinctOn?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollRequiredSkillOrderBy>>;
  where?: InputMaybe<PayrollRequiredSkillBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsPayrollRequiredSkillsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollRequiredSkillOrderBy>>;
  where?: InputMaybe<PayrollRequiredSkillBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsTimeEntriesArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


/** columns and relationships of "payrolls" */
export type PayrollsTimeEntriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};

/** aggregated selection of "payrolls" */
export type PayrollsAggregate = {
  __typename?: 'payrollsAggregate';
  aggregate?: Maybe<PayrollsAggregateFields>;
  nodes: Array<Payrolls>;
};

export type PayrollsAggregateBoolExp = {
  count?: InputMaybe<PayrollsAggregateBoolExpCount>;
};

export type PayrollsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PayrollsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PayrollsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "payrolls" */
export type PayrollsAggregateFields = {
  __typename?: 'payrollsAggregateFields';
  avg?: Maybe<PayrollsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PayrollsMaxFields>;
  min?: Maybe<PayrollsMinFields>;
  stddev?: Maybe<PayrollsStddevFields>;
  stddevPop?: Maybe<PayrollsStddevPopFields>;
  stddevSamp?: Maybe<PayrollsStddevSampFields>;
  sum?: Maybe<PayrollsSumFields>;
  varPop?: Maybe<PayrollsVarPopFields>;
  varSamp?: Maybe<PayrollsVarSampFields>;
  variance?: Maybe<PayrollsVarianceFields>;
};


/** aggregate fields of "payrolls" */
export type PayrollsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PayrollsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payrolls" */
export type PayrollsAggregateOrderBy = {
  avg?: InputMaybe<PayrollsAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PayrollsMaxOrderBy>;
  min?: InputMaybe<PayrollsMinOrderBy>;
  stddev?: InputMaybe<PayrollsStddevOrderBy>;
  stddevPop?: InputMaybe<PayrollsStddevPopOrderBy>;
  stddevSamp?: InputMaybe<PayrollsStddevSampOrderBy>;
  sum?: InputMaybe<PayrollsSumOrderBy>;
  varPop?: InputMaybe<PayrollsVarPopOrderBy>;
  varSamp?: InputMaybe<PayrollsVarSampOrderBy>;
  variance?: InputMaybe<PayrollsVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "payrolls" */
export type PayrollsArrRelInsertInput = {
  data: Array<PayrollsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollsOnConflict>;
};

/** aggregate avg on columns */
export type PayrollsAvgFields = {
  __typename?: 'payrollsAvgFields';
  actualHours?: Maybe<Scalars['Float']['output']>;
  actualRevenue?: Maybe<Scalars['Float']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Float']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Float']['output']>;
  estimatedHours?: Maybe<Scalars['Float']['output']>;
  estimatedRevenue?: Maybe<Scalars['Float']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Float']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Float']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Float']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Float']['output']>;
  profitMargin?: Maybe<Scalars['Float']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "payrolls" */
export type PayrollsAvgOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "payrolls". All fields are combined with a logical 'AND'. */
export type PayrollsBoolExp = {
  _and?: InputMaybe<Array<PayrollsBoolExp>>;
  _not?: InputMaybe<PayrollsBoolExp>;
  _or?: InputMaybe<Array<PayrollsBoolExp>>;
  actualHours?: InputMaybe<NumericComparisonExp>;
  actualRevenue?: InputMaybe<NumericComparisonExp>;
  backupConsultant?: InputMaybe<UsersBoolExp>;
  backupConsultantUserId?: InputMaybe<UuidComparisonExp>;
  billingItems?: InputMaybe<BillingItemsBoolExp>;
  billingItemsAggregate?: InputMaybe<BillingItemsAggregateBoolExp>;
  billingStatus?: InputMaybe<StringComparisonExp>;
  childPayrolls?: InputMaybe<PayrollsBoolExp>;
  childPayrollsAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  client?: InputMaybe<ClientsBoolExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdByUserId?: InputMaybe<UuidComparisonExp>;
  cycleId?: InputMaybe<UuidComparisonExp>;
  dateTypeId?: InputMaybe<UuidComparisonExp>;
  dateValue?: InputMaybe<IntComparisonExp>;
  employeeCount?: InputMaybe<IntComparisonExp>;
  estimatedHours?: InputMaybe<NumericComparisonExp>;
  estimatedRevenue?: InputMaybe<NumericComparisonExp>;
  goLiveDate?: InputMaybe<DateComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  lastBilledDate?: InputMaybe<TimestamptzComparisonExp>;
  manager?: InputMaybe<UsersBoolExp>;
  managerUserId?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  newEmployees?: InputMaybe<IntComparisonExp>;
  parentPayroll?: InputMaybe<PayrollsBoolExp>;
  parentPayrollId?: InputMaybe<UuidComparisonExp>;
  payrollCycle?: InputMaybe<PayrollCyclesBoolExp>;
  payrollDateType?: InputMaybe<PayrollDateTypesBoolExp>;
  payrollDates?: InputMaybe<PayrollDatesBoolExp>;
  payrollDatesAggregate?: InputMaybe<PayrollDatesAggregateBoolExp>;
  payrollRequiredSkills?: InputMaybe<PayrollRequiredSkillBoolExp>;
  payrollRequiredSkillsAggregate?: InputMaybe<PayrollRequiredSkillAggregateBoolExp>;
  payrollSystem?: InputMaybe<StringComparisonExp>;
  payslipCount?: InputMaybe<IntComparisonExp>;
  primaryConsultant?: InputMaybe<UsersBoolExp>;
  primaryConsultantUserId?: InputMaybe<UuidComparisonExp>;
  processingDaysBeforeEft?: InputMaybe<IntComparisonExp>;
  processingTime?: InputMaybe<IntComparisonExp>;
  profitMargin?: InputMaybe<NumericComparisonExp>;
  status?: InputMaybe<PayrollStatusComparisonExp>;
  supersededDate?: InputMaybe<DateComparisonExp>;
  terminatedEmployees?: InputMaybe<IntComparisonExp>;
  timeEntries?: InputMaybe<TimeEntriesBoolExp>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  versionNumber?: InputMaybe<IntComparisonExp>;
  versionReason?: InputMaybe<StringComparisonExp>;
};

/** unique or primary key constraints on table "payrolls" */
export type PayrollsConstraint =
  /** unique or primary key constraint on columns  */
  | 'only_one_current_version_per_family'
  /** unique or primary key constraint on columns "id" */
  | 'payrolls_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "payrolls" */
export type PayrollsIncInput = {
  actualHours?: InputMaybe<Scalars['numeric']['input']>;
  actualRevenue?: InputMaybe<Scalars['numeric']['input']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<Scalars['Int']['input']>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<Scalars['Int']['input']>;
  estimatedHours?: InputMaybe<Scalars['numeric']['input']>;
  estimatedRevenue?: InputMaybe<Scalars['numeric']['input']>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<Scalars['Int']['input']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<Scalars['Int']['input']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<Scalars['Int']['input']>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<Scalars['Int']['input']>;
  profitMargin?: InputMaybe<Scalars['numeric']['input']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<Scalars['Int']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payrolls" */
export type PayrollsInsertInput = {
  actualHours?: InputMaybe<Scalars['numeric']['input']>;
  actualRevenue?: InputMaybe<Scalars['numeric']['input']>;
  backupConsultant?: InputMaybe<UsersObjRelInsertInput>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  billingItems?: InputMaybe<BillingItemsArrRelInsertInput>;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: InputMaybe<Scalars['String']['input']>;
  childPayrolls?: InputMaybe<PayrollsArrRelInsertInput>;
  client?: InputMaybe<ClientsObjRelInsertInput>;
  /** Reference to the client this payroll belongs to */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the payroll was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll cycle */
  cycleId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll date type */
  dateTypeId?: InputMaybe<Scalars['uuid']['input']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<Scalars['Int']['input']>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<Scalars['Int']['input']>;
  estimatedHours?: InputMaybe<Scalars['numeric']['input']>;
  estimatedRevenue?: InputMaybe<Scalars['numeric']['input']>;
  /** The date when the payroll went live in the system */
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the payroll */
  id?: InputMaybe<Scalars['uuid']['input']>;
  lastBilledDate?: InputMaybe<Scalars['timestamptz']['input']>;
  manager?: InputMaybe<UsersObjRelInsertInput>;
  /** Manager overseeing this payroll */
  managerUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the payroll */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<Scalars['Int']['input']>;
  parentPayroll?: InputMaybe<PayrollsObjRelInsertInput>;
  parentPayrollId?: InputMaybe<Scalars['uuid']['input']>;
  payrollCycle?: InputMaybe<PayrollCyclesObjRelInsertInput>;
  payrollDateType?: InputMaybe<PayrollDateTypesObjRelInsertInput>;
  payrollDates?: InputMaybe<PayrollDatesArrRelInsertInput>;
  payrollRequiredSkills?: InputMaybe<PayrollRequiredSkillArrRelInsertInput>;
  /** External payroll system used for this client */
  payrollSystem?: InputMaybe<Scalars['String']['input']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<Scalars['Int']['input']>;
  primaryConsultant?: InputMaybe<UsersObjRelInsertInput>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<Scalars['Int']['input']>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<Scalars['Int']['input']>;
  profitMargin?: InputMaybe<Scalars['numeric']['input']>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status?: InputMaybe<Scalars['payroll_status']['input']>;
  supersededDate?: InputMaybe<Scalars['date']['input']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<Scalars['Int']['input']>;
  timeEntries?: InputMaybe<TimeEntriesArrRelInsertInput>;
  /** Timestamp when the payroll was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
  versionReason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type PayrollsMaxFields = {
  __typename?: 'payrollsMaxFields';
  actualHours?: Maybe<Scalars['numeric']['output']>;
  actualRevenue?: Maybe<Scalars['numeric']['output']>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: Maybe<Scalars['String']['output']>;
  /** Reference to the client this payroll belongs to */
  clientId?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the payroll was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  /** Reference to the payroll cycle */
  cycleId?: Maybe<Scalars['uuid']['output']>;
  /** Reference to the payroll date type */
  dateTypeId?: Maybe<Scalars['uuid']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Int']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Int']['output']>;
  estimatedHours?: Maybe<Scalars['numeric']['output']>;
  estimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  /** The date when the payroll went live in the system */
  goLiveDate?: Maybe<Scalars['date']['output']>;
  /** Unique identifier for the payroll */
  id?: Maybe<Scalars['uuid']['output']>;
  lastBilledDate?: Maybe<Scalars['timestamptz']['output']>;
  /** Manager overseeing this payroll */
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  /** Name of the payroll */
  name?: Maybe<Scalars['String']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Int']['output']>;
  parentPayrollId?: Maybe<Scalars['uuid']['output']>;
  /** External payroll system used for this client */
  payrollSystem?: Maybe<Scalars['String']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Int']['output']>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Int']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Int']['output']>;
  profitMargin?: Maybe<Scalars['numeric']['output']>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status?: Maybe<Scalars['payroll_status']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Int']['output']>;
  /** Timestamp when the payroll was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "payrolls" */
export type PayrollsMaxOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: InputMaybe<OrderBy>;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: InputMaybe<OrderBy>;
  /** Reference to the client this payroll belongs to */
  clientId?: InputMaybe<OrderBy>;
  /** Timestamp when the payroll was created */
  createdAt?: InputMaybe<OrderBy>;
  createdByUserId?: InputMaybe<OrderBy>;
  /** Reference to the payroll cycle */
  cycleId?: InputMaybe<OrderBy>;
  /** Reference to the payroll date type */
  dateTypeId?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** The date when the payroll went live in the system */
  goLiveDate?: InputMaybe<OrderBy>;
  /** Unique identifier for the payroll */
  id?: InputMaybe<OrderBy>;
  lastBilledDate?: InputMaybe<OrderBy>;
  /** Manager overseeing this payroll */
  managerUserId?: InputMaybe<OrderBy>;
  /** Name of the payroll */
  name?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  parentPayrollId?: InputMaybe<OrderBy>;
  /** External payroll system used for this client */
  payrollSystem?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status?: InputMaybe<OrderBy>;
  supersededDate?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  /** Timestamp when the payroll was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
  versionReason?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PayrollsMinFields = {
  __typename?: 'payrollsMinFields';
  actualHours?: Maybe<Scalars['numeric']['output']>;
  actualRevenue?: Maybe<Scalars['numeric']['output']>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: Maybe<Scalars['String']['output']>;
  /** Reference to the client this payroll belongs to */
  clientId?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the payroll was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdByUserId?: Maybe<Scalars['uuid']['output']>;
  /** Reference to the payroll cycle */
  cycleId?: Maybe<Scalars['uuid']['output']>;
  /** Reference to the payroll date type */
  dateTypeId?: Maybe<Scalars['uuid']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Int']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Int']['output']>;
  estimatedHours?: Maybe<Scalars['numeric']['output']>;
  estimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  /** The date when the payroll went live in the system */
  goLiveDate?: Maybe<Scalars['date']['output']>;
  /** Unique identifier for the payroll */
  id?: Maybe<Scalars['uuid']['output']>;
  lastBilledDate?: Maybe<Scalars['timestamptz']['output']>;
  /** Manager overseeing this payroll */
  managerUserId?: Maybe<Scalars['uuid']['output']>;
  /** Name of the payroll */
  name?: Maybe<Scalars['String']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Int']['output']>;
  parentPayrollId?: Maybe<Scalars['uuid']['output']>;
  /** External payroll system used for this client */
  payrollSystem?: Maybe<Scalars['String']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Int']['output']>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: Maybe<Scalars['uuid']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Int']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Int']['output']>;
  profitMargin?: Maybe<Scalars['numeric']['output']>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status?: Maybe<Scalars['payroll_status']['output']>;
  supersededDate?: Maybe<Scalars['date']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Int']['output']>;
  /** Timestamp when the payroll was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
  versionReason?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "payrolls" */
export type PayrollsMinOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: InputMaybe<OrderBy>;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: InputMaybe<OrderBy>;
  /** Reference to the client this payroll belongs to */
  clientId?: InputMaybe<OrderBy>;
  /** Timestamp when the payroll was created */
  createdAt?: InputMaybe<OrderBy>;
  createdByUserId?: InputMaybe<OrderBy>;
  /** Reference to the payroll cycle */
  cycleId?: InputMaybe<OrderBy>;
  /** Reference to the payroll date type */
  dateTypeId?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** The date when the payroll went live in the system */
  goLiveDate?: InputMaybe<OrderBy>;
  /** Unique identifier for the payroll */
  id?: InputMaybe<OrderBy>;
  lastBilledDate?: InputMaybe<OrderBy>;
  /** Manager overseeing this payroll */
  managerUserId?: InputMaybe<OrderBy>;
  /** Name of the payroll */
  name?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  parentPayrollId?: InputMaybe<OrderBy>;
  /** External payroll system used for this client */
  payrollSystem?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status?: InputMaybe<OrderBy>;
  supersededDate?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  /** Timestamp when the payroll was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
  versionReason?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "payrolls" */
export type PayrollsMutationResponse = {
  __typename?: 'payrollsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Payrolls>;
};

/** input type for inserting object relation for remote table "payrolls" */
export type PayrollsObjRelInsertInput = {
  data: PayrollsInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<PayrollsOnConflict>;
};

/** on_conflict condition type for table "payrolls" */
export type PayrollsOnConflict = {
  constraint: PayrollsConstraint;
  updateColumns?: Array<PayrollsUpdateColumn>;
  where?: InputMaybe<PayrollsBoolExp>;
};

/** Ordering options when selecting data from "payrolls". */
export type PayrollsOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  backupConsultant?: InputMaybe<UsersOrderBy>;
  backupConsultantUserId?: InputMaybe<OrderBy>;
  billingItemsAggregate?: InputMaybe<BillingItemsAggregateOrderBy>;
  billingStatus?: InputMaybe<OrderBy>;
  childPayrollsAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  client?: InputMaybe<ClientsOrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdByUserId?: InputMaybe<OrderBy>;
  cycleId?: InputMaybe<OrderBy>;
  dateTypeId?: InputMaybe<OrderBy>;
  dateValue?: InputMaybe<OrderBy>;
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  goLiveDate?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  lastBilledDate?: InputMaybe<OrderBy>;
  manager?: InputMaybe<UsersOrderBy>;
  managerUserId?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  newEmployees?: InputMaybe<OrderBy>;
  parentPayroll?: InputMaybe<PayrollsOrderBy>;
  parentPayrollId?: InputMaybe<OrderBy>;
  payrollCycle?: InputMaybe<PayrollCyclesOrderBy>;
  payrollDateType?: InputMaybe<PayrollDateTypesOrderBy>;
  payrollDatesAggregate?: InputMaybe<PayrollDatesAggregateOrderBy>;
  payrollRequiredSkillsAggregate?: InputMaybe<PayrollRequiredSkillAggregateOrderBy>;
  payrollSystem?: InputMaybe<OrderBy>;
  payslipCount?: InputMaybe<OrderBy>;
  primaryConsultant?: InputMaybe<UsersOrderBy>;
  primaryConsultantUserId?: InputMaybe<OrderBy>;
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  supersededDate?: InputMaybe<OrderBy>;
  terminatedEmployees?: InputMaybe<OrderBy>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
  versionReason?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: payrolls */
export type PayrollsPkColumnsInput = {
  /** Unique identifier for the payroll */
  id: Scalars['uuid']['input'];
};

/** select columns of table "payrolls" */
export type PayrollsSelectColumn =
  /** column name */
  | 'actualHours'
  /** column name */
  | 'actualRevenue'
  /** column name */
  | 'backupConsultantUserId'
  /** column name */
  | 'billingStatus'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdByUserId'
  /** column name */
  | 'cycleId'
  /** column name */
  | 'dateTypeId'
  /** column name */
  | 'dateValue'
  /** column name */
  | 'employeeCount'
  /** column name */
  | 'estimatedHours'
  /** column name */
  | 'estimatedRevenue'
  /** column name */
  | 'goLiveDate'
  /** column name */
  | 'id'
  /** column name */
  | 'lastBilledDate'
  /** column name */
  | 'managerUserId'
  /** column name */
  | 'name'
  /** column name */
  | 'newEmployees'
  /** column name */
  | 'parentPayrollId'
  /** column name */
  | 'payrollSystem'
  /** column name */
  | 'payslipCount'
  /** column name */
  | 'primaryConsultantUserId'
  /** column name */
  | 'processingDaysBeforeEft'
  /** column name */
  | 'processingTime'
  /** column name */
  | 'profitMargin'
  /** column name */
  | 'status'
  /** column name */
  | 'supersededDate'
  /** column name */
  | 'terminatedEmployees'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'versionNumber'
  /** column name */
  | 'versionReason'
  | '%future added value';

/** input type for updating data in table "payrolls" */
export type PayrollsSetInput = {
  actualHours?: InputMaybe<Scalars['numeric']['input']>;
  actualRevenue?: InputMaybe<Scalars['numeric']['input']>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: InputMaybe<Scalars['String']['input']>;
  /** Reference to the client this payroll belongs to */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the payroll was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll cycle */
  cycleId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll date type */
  dateTypeId?: InputMaybe<Scalars['uuid']['input']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<Scalars['Int']['input']>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<Scalars['Int']['input']>;
  estimatedHours?: InputMaybe<Scalars['numeric']['input']>;
  estimatedRevenue?: InputMaybe<Scalars['numeric']['input']>;
  /** The date when the payroll went live in the system */
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the payroll */
  id?: InputMaybe<Scalars['uuid']['input']>;
  lastBilledDate?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Manager overseeing this payroll */
  managerUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the payroll */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<Scalars['Int']['input']>;
  parentPayrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** External payroll system used for this client */
  payrollSystem?: InputMaybe<Scalars['String']['input']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<Scalars['Int']['input']>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<Scalars['Int']['input']>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<Scalars['Int']['input']>;
  profitMargin?: InputMaybe<Scalars['numeric']['input']>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status?: InputMaybe<Scalars['payroll_status']['input']>;
  supersededDate?: InputMaybe<Scalars['date']['input']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<Scalars['Int']['input']>;
  /** Timestamp when the payroll was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
  versionReason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type PayrollsStddevFields = {
  __typename?: 'payrollsStddevFields';
  actualHours?: Maybe<Scalars['Float']['output']>;
  actualRevenue?: Maybe<Scalars['Float']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Float']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Float']['output']>;
  estimatedHours?: Maybe<Scalars['Float']['output']>;
  estimatedRevenue?: Maybe<Scalars['Float']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Float']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Float']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Float']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Float']['output']>;
  profitMargin?: Maybe<Scalars['Float']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "payrolls" */
export type PayrollsStddevOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type PayrollsStddevPopFields = {
  __typename?: 'payrollsStddevPopFields';
  actualHours?: Maybe<Scalars['Float']['output']>;
  actualRevenue?: Maybe<Scalars['Float']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Float']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Float']['output']>;
  estimatedHours?: Maybe<Scalars['Float']['output']>;
  estimatedRevenue?: Maybe<Scalars['Float']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Float']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Float']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Float']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Float']['output']>;
  profitMargin?: Maybe<Scalars['Float']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "payrolls" */
export type PayrollsStddevPopOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type PayrollsStddevSampFields = {
  __typename?: 'payrollsStddevSampFields';
  actualHours?: Maybe<Scalars['Float']['output']>;
  actualRevenue?: Maybe<Scalars['Float']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Float']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Float']['output']>;
  estimatedHours?: Maybe<Scalars['Float']['output']>;
  estimatedRevenue?: Maybe<Scalars['Float']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Float']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Float']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Float']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Float']['output']>;
  profitMargin?: Maybe<Scalars['Float']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "payrolls" */
export type PayrollsStddevSampOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "payrolls" */
export type PayrollsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PayrollsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PayrollsStreamCursorValueInput = {
  actualHours?: InputMaybe<Scalars['numeric']['input']>;
  actualRevenue?: InputMaybe<Scalars['numeric']['input']>;
  /** Backup consultant for this payroll */
  backupConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Billing status: pending, items_added, ready_to_bill, billed */
  billingStatus?: InputMaybe<Scalars['String']['input']>;
  /** Reference to the client this payroll belongs to */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the payroll was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdByUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll cycle */
  cycleId?: InputMaybe<Scalars['uuid']['input']>;
  /** Reference to the payroll date type */
  dateTypeId?: InputMaybe<Scalars['uuid']['input']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<Scalars['Int']['input']>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<Scalars['Int']['input']>;
  estimatedHours?: InputMaybe<Scalars['numeric']['input']>;
  estimatedRevenue?: InputMaybe<Scalars['numeric']['input']>;
  /** The date when the payroll went live in the system */
  goLiveDate?: InputMaybe<Scalars['date']['input']>;
  /** Unique identifier for the payroll */
  id?: InputMaybe<Scalars['uuid']['input']>;
  lastBilledDate?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Manager overseeing this payroll */
  managerUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Name of the payroll */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<Scalars['Int']['input']>;
  parentPayrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** External payroll system used for this client */
  payrollSystem?: InputMaybe<Scalars['String']['input']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<Scalars['Int']['input']>;
  /** Primary consultant responsible for this payroll */
  primaryConsultantUserId?: InputMaybe<Scalars['uuid']['input']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<Scalars['Int']['input']>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<Scalars['Int']['input']>;
  profitMargin?: InputMaybe<Scalars['numeric']['input']>;
  /** Current status of the payroll (Implementation, Active, Inactive) */
  status?: InputMaybe<Scalars['payroll_status']['input']>;
  supersededDate?: InputMaybe<Scalars['date']['input']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<Scalars['Int']['input']>;
  /** Timestamp when the payroll was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
  versionReason?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type PayrollsSumFields = {
  __typename?: 'payrollsSumFields';
  actualHours?: Maybe<Scalars['numeric']['output']>;
  actualRevenue?: Maybe<Scalars['numeric']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Int']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Int']['output']>;
  estimatedHours?: Maybe<Scalars['numeric']['output']>;
  estimatedRevenue?: Maybe<Scalars['numeric']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Int']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Int']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Int']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Int']['output']>;
  profitMargin?: Maybe<Scalars['numeric']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Int']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "payrolls" */
export type PayrollsSumOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** update columns of table "payrolls" */
export type PayrollsUpdateColumn =
  /** column name */
  | 'actualHours'
  /** column name */
  | 'actualRevenue'
  /** column name */
  | 'backupConsultantUserId'
  /** column name */
  | 'billingStatus'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdByUserId'
  /** column name */
  | 'cycleId'
  /** column name */
  | 'dateTypeId'
  /** column name */
  | 'dateValue'
  /** column name */
  | 'employeeCount'
  /** column name */
  | 'estimatedHours'
  /** column name */
  | 'estimatedRevenue'
  /** column name */
  | 'goLiveDate'
  /** column name */
  | 'id'
  /** column name */
  | 'lastBilledDate'
  /** column name */
  | 'managerUserId'
  /** column name */
  | 'name'
  /** column name */
  | 'newEmployees'
  /** column name */
  | 'parentPayrollId'
  /** column name */
  | 'payrollSystem'
  /** column name */
  | 'payslipCount'
  /** column name */
  | 'primaryConsultantUserId'
  /** column name */
  | 'processingDaysBeforeEft'
  /** column name */
  | 'processingTime'
  /** column name */
  | 'profitMargin'
  /** column name */
  | 'status'
  /** column name */
  | 'supersededDate'
  /** column name */
  | 'terminatedEmployees'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'versionNumber'
  /** column name */
  | 'versionReason'
  | '%future added value';

export type PayrollsUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<PayrollsIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PayrollsSetInput>;
  /** filter the rows which have to be updated */
  where: PayrollsBoolExp;
};

/** aggregate varPop on columns */
export type PayrollsVarPopFields = {
  __typename?: 'payrollsVarPopFields';
  actualHours?: Maybe<Scalars['Float']['output']>;
  actualRevenue?: Maybe<Scalars['Float']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Float']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Float']['output']>;
  estimatedHours?: Maybe<Scalars['Float']['output']>;
  estimatedRevenue?: Maybe<Scalars['Float']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Float']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Float']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Float']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Float']['output']>;
  profitMargin?: Maybe<Scalars['Float']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "payrolls" */
export type PayrollsVarPopOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type PayrollsVarSampFields = {
  __typename?: 'payrollsVarSampFields';
  actualHours?: Maybe<Scalars['Float']['output']>;
  actualRevenue?: Maybe<Scalars['Float']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Float']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Float']['output']>;
  estimatedHours?: Maybe<Scalars['Float']['output']>;
  estimatedRevenue?: Maybe<Scalars['Float']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Float']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Float']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Float']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Float']['output']>;
  profitMargin?: Maybe<Scalars['Float']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "payrolls" */
export type PayrollsVarSampOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type PayrollsVarianceFields = {
  __typename?: 'payrollsVarianceFields';
  actualHours?: Maybe<Scalars['Float']['output']>;
  actualRevenue?: Maybe<Scalars['Float']['output']>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: Maybe<Scalars['Float']['output']>;
  /** Number of employees in this payroll */
  employeeCount?: Maybe<Scalars['Float']['output']>;
  estimatedHours?: Maybe<Scalars['Float']['output']>;
  estimatedRevenue?: Maybe<Scalars['Float']['output']>;
  /** Number of new employees processed */
  newEmployees?: Maybe<Scalars['Float']['output']>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: Maybe<Scalars['Float']['output']>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: Maybe<Scalars['Float']['output']>;
  /** Number of hours required to process this payroll */
  processingTime?: Maybe<Scalars['Float']['output']>;
  profitMargin?: Maybe<Scalars['Float']['output']>;
  /** Number of terminated employees processed */
  terminatedEmployees?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "payrolls" */
export type PayrollsVarianceOrderBy = {
  actualHours?: InputMaybe<OrderBy>;
  actualRevenue?: InputMaybe<OrderBy>;
  /** Specific value for date calculation (e.g., day of month) */
  dateValue?: InputMaybe<OrderBy>;
  /** Number of employees in this payroll */
  employeeCount?: InputMaybe<OrderBy>;
  estimatedHours?: InputMaybe<OrderBy>;
  estimatedRevenue?: InputMaybe<OrderBy>;
  /** Number of new employees processed */
  newEmployees?: InputMaybe<OrderBy>;
  /** Number of payslips processed in this payroll run */
  payslipCount?: InputMaybe<OrderBy>;
  /** Number of days before EFT that processing must complete */
  processingDaysBeforeEft?: InputMaybe<OrderBy>;
  /** Number of hours required to process this payroll */
  processingTime?: InputMaybe<OrderBy>;
  profitMargin?: InputMaybe<OrderBy>;
  /** Number of terminated employees processed */
  terminatedEmployees?: InputMaybe<OrderBy>;
  versionNumber?: InputMaybe<OrderBy>;
};

/** Audit log for permission changes and access attempts */
export type PermissionAuditLogs = {
  __typename?: 'permissionAuditLogs';
  action: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['uuid']['output'];
  newValue?: Maybe<Scalars['jsonb']['output']>;
  operation: Scalars['String']['output'];
  /** An object relationship */
  performedByUser?: Maybe<Users>;
  previousValue?: Maybe<Scalars['jsonb']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  resource: Scalars['String']['output'];
  targetRole?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  targetUser?: Maybe<Users>;
  targetUserId?: Maybe<Scalars['uuid']['output']>;
  timestamp: Scalars['timestamptz']['output'];
  userId?: Maybe<Scalars['uuid']['output']>;
};


/** Audit log for permission changes and access attempts */
export type PermissionAuditLogsNewValueArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** Audit log for permission changes and access attempts */
export type PermissionAuditLogsPreviousValueArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "permission_audit_log" */
export type PermissionAuditLogsAggregate = {
  __typename?: 'permissionAuditLogsAggregate';
  aggregate?: Maybe<PermissionAuditLogsAggregateFields>;
  nodes: Array<PermissionAuditLogs>;
};

export type PermissionAuditLogsAggregateBoolExp = {
  count?: InputMaybe<PermissionAuditLogsAggregateBoolExpCount>;
};

export type PermissionAuditLogsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PermissionAuditLogsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "permission_audit_log" */
export type PermissionAuditLogsAggregateFields = {
  __typename?: 'permissionAuditLogsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PermissionAuditLogsMaxFields>;
  min?: Maybe<PermissionAuditLogsMinFields>;
};


/** aggregate fields of "permission_audit_log" */
export type PermissionAuditLogsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "permission_audit_log" */
export type PermissionAuditLogsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PermissionAuditLogsMaxOrderBy>;
  min?: InputMaybe<PermissionAuditLogsMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type PermissionAuditLogsAppendInput = {
  newValue?: InputMaybe<Scalars['jsonb']['input']>;
  previousValue?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "permission_audit_log" */
export type PermissionAuditLogsArrRelInsertInput = {
  data: Array<PermissionAuditLogsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<PermissionAuditLogsOnConflict>;
};

/** Boolean expression to filter rows from the table "permission_audit_log". All fields are combined with a logical 'AND'. */
export type PermissionAuditLogsBoolExp = {
  _and?: InputMaybe<Array<PermissionAuditLogsBoolExp>>;
  _not?: InputMaybe<PermissionAuditLogsBoolExp>;
  _or?: InputMaybe<Array<PermissionAuditLogsBoolExp>>;
  action?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  newValue?: InputMaybe<JsonbComparisonExp>;
  operation?: InputMaybe<StringComparisonExp>;
  performedByUser?: InputMaybe<UsersBoolExp>;
  previousValue?: InputMaybe<JsonbComparisonExp>;
  reason?: InputMaybe<StringComparisonExp>;
  resource?: InputMaybe<StringComparisonExp>;
  targetRole?: InputMaybe<StringComparisonExp>;
  targetUser?: InputMaybe<UsersBoolExp>;
  targetUserId?: InputMaybe<UuidComparisonExp>;
  timestamp?: InputMaybe<TimestamptzComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "permission_audit_log" */
export type PermissionAuditLogsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'permission_audit_log_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type PermissionAuditLogsDeleteAtPathInput = {
  newValue?: InputMaybe<Array<Scalars['String']['input']>>;
  previousValue?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type PermissionAuditLogsDeleteElemInput = {
  newValue?: InputMaybe<Scalars['Int']['input']>;
  previousValue?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type PermissionAuditLogsDeleteKeyInput = {
  newValue?: InputMaybe<Scalars['String']['input']>;
  previousValue?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "permission_audit_log" */
export type PermissionAuditLogsInsertInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  newValue?: InputMaybe<Scalars['jsonb']['input']>;
  operation?: InputMaybe<Scalars['String']['input']>;
  performedByUser?: InputMaybe<UsersObjRelInsertInput>;
  previousValue?: InputMaybe<Scalars['jsonb']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  resource?: InputMaybe<Scalars['String']['input']>;
  targetRole?: InputMaybe<Scalars['String']['input']>;
  targetUser?: InputMaybe<UsersObjRelInsertInput>;
  targetUserId?: InputMaybe<Scalars['uuid']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type PermissionAuditLogsMaxFields = {
  __typename?: 'permissionAuditLogsMaxFields';
  action?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  operation?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  resource?: Maybe<Scalars['String']['output']>;
  targetRole?: Maybe<Scalars['String']['output']>;
  targetUserId?: Maybe<Scalars['uuid']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "permission_audit_log" */
export type PermissionAuditLogsMaxOrderBy = {
  action?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  operation?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  resource?: InputMaybe<OrderBy>;
  targetRole?: InputMaybe<OrderBy>;
  targetUserId?: InputMaybe<OrderBy>;
  timestamp?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PermissionAuditLogsMinFields = {
  __typename?: 'permissionAuditLogsMinFields';
  action?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  operation?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  resource?: Maybe<Scalars['String']['output']>;
  targetRole?: Maybe<Scalars['String']['output']>;
  targetUserId?: Maybe<Scalars['uuid']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "permission_audit_log" */
export type PermissionAuditLogsMinOrderBy = {
  action?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  operation?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  resource?: InputMaybe<OrderBy>;
  targetRole?: InputMaybe<OrderBy>;
  targetUserId?: InputMaybe<OrderBy>;
  timestamp?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "permission_audit_log" */
export type PermissionAuditLogsMutationResponse = {
  __typename?: 'permissionAuditLogsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PermissionAuditLogs>;
};

/** on_conflict condition type for table "permission_audit_log" */
export type PermissionAuditLogsOnConflict = {
  constraint: PermissionAuditLogsConstraint;
  updateColumns?: Array<PermissionAuditLogsUpdateColumn>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};

/** Ordering options when selecting data from "permission_audit_log". */
export type PermissionAuditLogsOrderBy = {
  action?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  newValue?: InputMaybe<OrderBy>;
  operation?: InputMaybe<OrderBy>;
  performedByUser?: InputMaybe<UsersOrderBy>;
  previousValue?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  resource?: InputMaybe<OrderBy>;
  targetRole?: InputMaybe<OrderBy>;
  targetUser?: InputMaybe<UsersOrderBy>;
  targetUserId?: InputMaybe<OrderBy>;
  timestamp?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: permission_audit_log */
export type PermissionAuditLogsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type PermissionAuditLogsPrependInput = {
  newValue?: InputMaybe<Scalars['jsonb']['input']>;
  previousValue?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "permission_audit_log" */
export type PermissionAuditLogsSelectColumn =
  /** column name */
  | 'action'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'newValue'
  /** column name */
  | 'operation'
  /** column name */
  | 'previousValue'
  /** column name */
  | 'reason'
  /** column name */
  | 'resource'
  /** column name */
  | 'targetRole'
  /** column name */
  | 'targetUserId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "permission_audit_log" */
export type PermissionAuditLogsSetInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  newValue?: InputMaybe<Scalars['jsonb']['input']>;
  operation?: InputMaybe<Scalars['String']['input']>;
  previousValue?: InputMaybe<Scalars['jsonb']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  resource?: InputMaybe<Scalars['String']['input']>;
  targetRole?: InputMaybe<Scalars['String']['input']>;
  targetUserId?: InputMaybe<Scalars['uuid']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "permissionAuditLogs" */
export type PermissionAuditLogsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PermissionAuditLogsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PermissionAuditLogsStreamCursorValueInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  newValue?: InputMaybe<Scalars['jsonb']['input']>;
  operation?: InputMaybe<Scalars['String']['input']>;
  previousValue?: InputMaybe<Scalars['jsonb']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  resource?: InputMaybe<Scalars['String']['input']>;
  targetRole?: InputMaybe<Scalars['String']['input']>;
  targetUserId?: InputMaybe<Scalars['uuid']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "permission_audit_log" */
export type PermissionAuditLogsUpdateColumn =
  /** column name */
  | 'action'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'newValue'
  /** column name */
  | 'operation'
  /** column name */
  | 'previousValue'
  /** column name */
  | 'reason'
  /** column name */
  | 'resource'
  /** column name */
  | 'targetRole'
  /** column name */
  | 'targetUserId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'userId'
  | '%future added value';

export type PermissionAuditLogsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<PermissionAuditLogsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<PermissionAuditLogsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<PermissionAuditLogsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<PermissionAuditLogsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<PermissionAuditLogsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PermissionAuditLogsSetInput>;
  /** filter the rows which have to be updated */
  where: PermissionAuditLogsBoolExp;
};

/** columns and relationships of "audit.permission_changes" */
export type PermissionChanges = {
  __typename?: 'permissionChanges';
  approvedByUserId?: Maybe<Scalars['uuid']['output']>;
  changeType: Scalars['String']['output'];
  changedAt: Scalars['timestamptz']['output'];
  changedByUserId: Scalars['uuid']['output'];
  id: Scalars['uuid']['output'];
  metadata?: Maybe<Scalars['jsonb']['output']>;
  newPermissions?: Maybe<Scalars['jsonb']['output']>;
  oldPermissions?: Maybe<Scalars['jsonb']['output']>;
  permissionType?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  targetRoleId?: Maybe<Scalars['uuid']['output']>;
  targetUserId?: Maybe<Scalars['uuid']['output']>;
};


/** columns and relationships of "audit.permission_changes" */
export type PermissionChangesMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "audit.permission_changes" */
export type PermissionChangesNewPermissionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "audit.permission_changes" */
export type PermissionChangesOldPermissionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "audit.permission_changes" */
export type PermissionChangesAggregate = {
  __typename?: 'permissionChangesAggregate';
  aggregate?: Maybe<PermissionChangesAggregateFields>;
  nodes: Array<PermissionChanges>;
};

/** aggregate fields of "audit.permission_changes" */
export type PermissionChangesAggregateFields = {
  __typename?: 'permissionChangesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PermissionChangesMaxFields>;
  min?: Maybe<PermissionChangesMinFields>;
};


/** aggregate fields of "audit.permission_changes" */
export type PermissionChangesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PermissionChangesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type PermissionChangesAppendInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  oldPermissions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** Boolean expression to filter rows from the table "audit.permission_changes". All fields are combined with a logical 'AND'. */
export type PermissionChangesBoolExp = {
  _and?: InputMaybe<Array<PermissionChangesBoolExp>>;
  _not?: InputMaybe<PermissionChangesBoolExp>;
  _or?: InputMaybe<Array<PermissionChangesBoolExp>>;
  approvedByUserId?: InputMaybe<UuidComparisonExp>;
  changeType?: InputMaybe<StringComparisonExp>;
  changedAt?: InputMaybe<TimestamptzComparisonExp>;
  changedByUserId?: InputMaybe<UuidComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  metadata?: InputMaybe<JsonbComparisonExp>;
  newPermissions?: InputMaybe<JsonbComparisonExp>;
  oldPermissions?: InputMaybe<JsonbComparisonExp>;
  permissionType?: InputMaybe<StringComparisonExp>;
  reason?: InputMaybe<StringComparisonExp>;
  targetRoleId?: InputMaybe<UuidComparisonExp>;
  targetUserId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "audit.permission_changes" */
export type PermissionChangesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'permission_changes_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type PermissionChangesDeleteAtPathInput = {
  metadata?: InputMaybe<Array<Scalars['String']['input']>>;
  newPermissions?: InputMaybe<Array<Scalars['String']['input']>>;
  oldPermissions?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type PermissionChangesDeleteElemInput = {
  metadata?: InputMaybe<Scalars['Int']['input']>;
  newPermissions?: InputMaybe<Scalars['Int']['input']>;
  oldPermissions?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type PermissionChangesDeleteKeyInput = {
  metadata?: InputMaybe<Scalars['String']['input']>;
  newPermissions?: InputMaybe<Scalars['String']['input']>;
  oldPermissions?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "audit.permission_changes" */
export type PermissionChangesInsertInput = {
  approvedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  changeType?: InputMaybe<Scalars['String']['input']>;
  changedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  changedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  oldPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  permissionType?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  targetRoleId?: InputMaybe<Scalars['uuid']['input']>;
  targetUserId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type PermissionChangesMaxFields = {
  __typename?: 'permissionChangesMaxFields';
  approvedByUserId?: Maybe<Scalars['uuid']['output']>;
  changeType?: Maybe<Scalars['String']['output']>;
  changedAt?: Maybe<Scalars['timestamptz']['output']>;
  changedByUserId?: Maybe<Scalars['uuid']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  permissionType?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  targetRoleId?: Maybe<Scalars['uuid']['output']>;
  targetUserId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregate min on columns */
export type PermissionChangesMinFields = {
  __typename?: 'permissionChangesMinFields';
  approvedByUserId?: Maybe<Scalars['uuid']['output']>;
  changeType?: Maybe<Scalars['String']['output']>;
  changedAt?: Maybe<Scalars['timestamptz']['output']>;
  changedByUserId?: Maybe<Scalars['uuid']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  permissionType?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  targetRoleId?: Maybe<Scalars['uuid']['output']>;
  targetUserId?: Maybe<Scalars['uuid']['output']>;
};

/** response of any mutation on the table "audit.permission_changes" */
export type PermissionChangesMutationResponse = {
  __typename?: 'permissionChangesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PermissionChanges>;
};

/** on_conflict condition type for table "audit.permission_changes" */
export type PermissionChangesOnConflict = {
  constraint: PermissionChangesConstraint;
  updateColumns?: Array<PermissionChangesUpdateColumn>;
  where?: InputMaybe<PermissionChangesBoolExp>;
};

/** Ordering options when selecting data from "audit.permission_changes". */
export type PermissionChangesOrderBy = {
  approvedByUserId?: InputMaybe<OrderBy>;
  changeType?: InputMaybe<OrderBy>;
  changedAt?: InputMaybe<OrderBy>;
  changedByUserId?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  metadata?: InputMaybe<OrderBy>;
  newPermissions?: InputMaybe<OrderBy>;
  oldPermissions?: InputMaybe<OrderBy>;
  permissionType?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  targetRoleId?: InputMaybe<OrderBy>;
  targetUserId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: audit.permission_changes */
export type PermissionChangesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type PermissionChangesPrependInput = {
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  oldPermissions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "audit.permission_changes" */
export type PermissionChangesSelectColumn =
  /** column name */
  | 'approvedByUserId'
  /** column name */
  | 'changeType'
  /** column name */
  | 'changedAt'
  /** column name */
  | 'changedByUserId'
  /** column name */
  | 'id'
  /** column name */
  | 'metadata'
  /** column name */
  | 'newPermissions'
  /** column name */
  | 'oldPermissions'
  /** column name */
  | 'permissionType'
  /** column name */
  | 'reason'
  /** column name */
  | 'targetRoleId'
  /** column name */
  | 'targetUserId'
  | '%future added value';

/** input type for updating data in table "audit.permission_changes" */
export type PermissionChangesSetInput = {
  approvedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  changeType?: InputMaybe<Scalars['String']['input']>;
  changedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  changedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  oldPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  permissionType?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  targetRoleId?: InputMaybe<Scalars['uuid']['input']>;
  targetUserId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "permissionChanges" */
export type PermissionChangesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PermissionChangesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PermissionChangesStreamCursorValueInput = {
  approvedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  changeType?: InputMaybe<Scalars['String']['input']>;
  changedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  changedByUserId?: InputMaybe<Scalars['uuid']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  metadata?: InputMaybe<Scalars['jsonb']['input']>;
  newPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  oldPermissions?: InputMaybe<Scalars['jsonb']['input']>;
  permissionType?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  targetRoleId?: InputMaybe<Scalars['uuid']['input']>;
  targetUserId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "audit.permission_changes" */
export type PermissionChangesUpdateColumn =
  /** column name */
  | 'approvedByUserId'
  /** column name */
  | 'changeType'
  /** column name */
  | 'changedAt'
  /** column name */
  | 'changedByUserId'
  /** column name */
  | 'id'
  /** column name */
  | 'metadata'
  /** column name */
  | 'newPermissions'
  /** column name */
  | 'oldPermissions'
  /** column name */
  | 'permissionType'
  /** column name */
  | 'reason'
  /** column name */
  | 'targetRoleId'
  /** column name */
  | 'targetUserId'
  | '%future added value';

export type PermissionChangesUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<PermissionChangesAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<PermissionChangesDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<PermissionChangesDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<PermissionChangesDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<PermissionChangesPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PermissionChangesSetInput>;
  /** filter the rows which have to be updated */
  where: PermissionChangesBoolExp;
};

/** User-specific and role-specific permission overrides */
export type PermissionOverrides = {
  __typename?: 'permissionOverrides';
  /** JSON conditions for conditional permissions */
  conditions?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  createdBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  createdByUser?: Maybe<Users>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Whether the permission is granted (true) or denied (false) */
  granted: Scalars['Boolean']['output'];
  id: Scalars['uuid']['output'];
  operation: Scalars['String']['output'];
  reason?: Maybe<Scalars['String']['output']>;
  resource: Scalars['String']['output'];
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  targetUser?: Maybe<Users>;
  updatedAt: Scalars['timestamptz']['output'];
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: Maybe<Scalars['uuid']['output']>;
};


/** User-specific and role-specific permission overrides */
export type PermissionOverridesConditionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "permission_overrides" */
export type PermissionOverridesAggregate = {
  __typename?: 'permissionOverridesAggregate';
  aggregate?: Maybe<PermissionOverridesAggregateFields>;
  nodes: Array<PermissionOverrides>;
};

export type PermissionOverridesAggregateBoolExp = {
  bool_and?: InputMaybe<PermissionOverridesAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<PermissionOverridesAggregateBoolExpBool_Or>;
  count?: InputMaybe<PermissionOverridesAggregateBoolExpCount>;
};

export type PermissionOverridesAggregateBoolExpBool_And = {
  arguments: PermissionOverridesSelectColumnPermissionOverridesAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PermissionOverridesBoolExp>;
  predicate: BooleanComparisonExp;
};

export type PermissionOverridesAggregateBoolExpBool_Or = {
  arguments: PermissionOverridesSelectColumnPermissionOverridesAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PermissionOverridesBoolExp>;
  predicate: BooleanComparisonExp;
};

export type PermissionOverridesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PermissionOverridesBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "permission_overrides" */
export type PermissionOverridesAggregateFields = {
  __typename?: 'permissionOverridesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PermissionOverridesMaxFields>;
  min?: Maybe<PermissionOverridesMinFields>;
};


/** aggregate fields of "permission_overrides" */
export type PermissionOverridesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "permission_overrides" */
export type PermissionOverridesAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PermissionOverridesMaxOrderBy>;
  min?: InputMaybe<PermissionOverridesMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type PermissionOverridesAppendInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "permission_overrides" */
export type PermissionOverridesArrRelInsertInput = {
  data: Array<PermissionOverridesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<PermissionOverridesOnConflict>;
};

/** Boolean expression to filter rows from the table "permission_overrides". All fields are combined with a logical 'AND'. */
export type PermissionOverridesBoolExp = {
  _and?: InputMaybe<Array<PermissionOverridesBoolExp>>;
  _not?: InputMaybe<PermissionOverridesBoolExp>;
  _or?: InputMaybe<Array<PermissionOverridesBoolExp>>;
  conditions?: InputMaybe<JsonbComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBy?: InputMaybe<UuidComparisonExp>;
  createdByUser?: InputMaybe<UsersBoolExp>;
  expiresAt?: InputMaybe<TimestamptzComparisonExp>;
  granted?: InputMaybe<BooleanComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  operation?: InputMaybe<StringComparisonExp>;
  reason?: InputMaybe<StringComparisonExp>;
  resource?: InputMaybe<StringComparisonExp>;
  role?: InputMaybe<StringComparisonExp>;
  targetUser?: InputMaybe<UsersBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "permission_overrides" */
export type PermissionOverridesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'permission_overrides_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type PermissionOverridesDeleteAtPathInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type PermissionOverridesDeleteElemInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type PermissionOverridesDeleteKeyInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "permission_overrides" */
export type PermissionOverridesInsertInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<Scalars['uuid']['input']>;
  createdByUser?: InputMaybe<UsersObjRelInsertInput>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Whether the permission is granted (true) or denied (false) */
  granted?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  operation?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  resource?: InputMaybe<Scalars['String']['input']>;
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: InputMaybe<Scalars['String']['input']>;
  targetUser?: InputMaybe<UsersObjRelInsertInput>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type PermissionOverridesMaxFields = {
  __typename?: 'permissionOverridesMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdBy?: Maybe<Scalars['uuid']['output']>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  operation?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  resource?: Maybe<Scalars['String']['output']>;
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "permission_overrides" */
export type PermissionOverridesMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<OrderBy>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  operation?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  resource?: InputMaybe<OrderBy>;
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PermissionOverridesMinFields = {
  __typename?: 'permissionOverridesMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  createdBy?: Maybe<Scalars['uuid']['output']>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  operation?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  resource?: Maybe<Scalars['String']['output']>;
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "permission_overrides" */
export type PermissionOverridesMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<OrderBy>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  operation?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  resource?: InputMaybe<OrderBy>;
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "permission_overrides" */
export type PermissionOverridesMutationResponse = {
  __typename?: 'permissionOverridesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<PermissionOverrides>;
};

/** on_conflict condition type for table "permission_overrides" */
export type PermissionOverridesOnConflict = {
  constraint: PermissionOverridesConstraint;
  updateColumns?: Array<PermissionOverridesUpdateColumn>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};

/** Ordering options when selecting data from "permission_overrides". */
export type PermissionOverridesOrderBy = {
  conditions?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBy?: InputMaybe<OrderBy>;
  createdByUser?: InputMaybe<UsersOrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  granted?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  operation?: InputMaybe<OrderBy>;
  reason?: InputMaybe<OrderBy>;
  resource?: InputMaybe<OrderBy>;
  role?: InputMaybe<OrderBy>;
  targetUser?: InputMaybe<UsersOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: permission_overrides */
export type PermissionOverridesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type PermissionOverridesPrependInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "permission_overrides" */
export type PermissionOverridesSelectColumn =
  /** column name */
  | 'conditions'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdBy'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'granted'
  /** column name */
  | 'id'
  /** column name */
  | 'operation'
  /** column name */
  | 'reason'
  /** column name */
  | 'resource'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

/** select "permissionOverridesAggregateBoolExpBool_andArgumentsColumns" columns of table "permission_overrides" */
export type PermissionOverridesSelectColumnPermissionOverridesAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'granted'
  | '%future added value';

/** select "permissionOverridesAggregateBoolExpBool_orArgumentsColumns" columns of table "permission_overrides" */
export type PermissionOverridesSelectColumnPermissionOverridesAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'granted'
  | '%future added value';

/** input type for updating data in table "permission_overrides" */
export type PermissionOverridesSetInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<Scalars['uuid']['input']>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Whether the permission is granted (true) or denied (false) */
  granted?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  operation?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  resource?: InputMaybe<Scalars['String']['input']>;
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "permissionOverrides" */
export type PermissionOverridesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PermissionOverridesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PermissionOverridesStreamCursorValueInput = {
  /** JSON conditions for conditional permissions */
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBy?: InputMaybe<Scalars['uuid']['input']>;
  /** When this override expires (NULL for permanent) */
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Whether the permission is granted (true) or denied (false) */
  granted?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  operation?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  resource?: InputMaybe<Scalars['String']['input']>;
  /** Role name for role-based overrides (mutually exclusive with user_id) */
  role?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User ID for user-specific overrides (mutually exclusive with role) */
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "permission_overrides" */
export type PermissionOverridesUpdateColumn =
  /** column name */
  | 'conditions'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'createdBy'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'granted'
  /** column name */
  | 'id'
  /** column name */
  | 'operation'
  /** column name */
  | 'reason'
  /** column name */
  | 'resource'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

export type PermissionOverridesUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<PermissionOverridesAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<PermissionOverridesDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<PermissionOverridesDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<PermissionOverridesDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<PermissionOverridesPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PermissionOverridesSetInput>;
  /** filter the rows which have to be updated */
  where: PermissionOverridesBoolExp;
};

/** columns and relationships of "audit.permission_usage_report" */
export type PermissionUsageReports = {
  __typename?: 'permissionUsageReports';
  action?: Maybe<Scalars['permission_action']['output']>;
  lastUsed?: Maybe<Scalars['timestamptz']['output']>;
  resourceName?: Maybe<Scalars['String']['output']>;
  roleName?: Maybe<Scalars['String']['output']>;
  totalUsageCount?: Maybe<Scalars['bigint']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['bigint']['output']>;
  usersWithPermission?: Maybe<Scalars['bigint']['output']>;
};

/** aggregated selection of "audit.permission_usage_report" */
export type PermissionUsageReportsAggregate = {
  __typename?: 'permissionUsageReportsAggregate';
  aggregate?: Maybe<PermissionUsageReportsAggregateFields>;
  nodes: Array<PermissionUsageReports>;
};

/** aggregate fields of "audit.permission_usage_report" */
export type PermissionUsageReportsAggregateFields = {
  __typename?: 'permissionUsageReportsAggregateFields';
  avg?: Maybe<PermissionUsageReportsAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<PermissionUsageReportsMaxFields>;
  min?: Maybe<PermissionUsageReportsMinFields>;
  stddev?: Maybe<PermissionUsageReportsStddevFields>;
  stddevPop?: Maybe<PermissionUsageReportsStddevPopFields>;
  stddevSamp?: Maybe<PermissionUsageReportsStddevSampFields>;
  sum?: Maybe<PermissionUsageReportsSumFields>;
  varPop?: Maybe<PermissionUsageReportsVarPopFields>;
  varSamp?: Maybe<PermissionUsageReportsVarSampFields>;
  variance?: Maybe<PermissionUsageReportsVarianceFields>;
};


/** aggregate fields of "audit.permission_usage_report" */
export type PermissionUsageReportsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PermissionUsageReportsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type PermissionUsageReportsAvgFields = {
  __typename?: 'permissionUsageReportsAvgFields';
  totalUsageCount?: Maybe<Scalars['Float']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['Float']['output']>;
  usersWithPermission?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "audit.permission_usage_report". All fields are combined with a logical 'AND'. */
export type PermissionUsageReportsBoolExp = {
  _and?: InputMaybe<Array<PermissionUsageReportsBoolExp>>;
  _not?: InputMaybe<PermissionUsageReportsBoolExp>;
  _or?: InputMaybe<Array<PermissionUsageReportsBoolExp>>;
  action?: InputMaybe<PermissionActionComparisonExp>;
  lastUsed?: InputMaybe<TimestamptzComparisonExp>;
  resourceName?: InputMaybe<StringComparisonExp>;
  roleName?: InputMaybe<StringComparisonExp>;
  totalUsageCount?: InputMaybe<BigintComparisonExp>;
  usersWhoUsedPermission?: InputMaybe<BigintComparisonExp>;
  usersWithPermission?: InputMaybe<BigintComparisonExp>;
};

/** aggregate max on columns */
export type PermissionUsageReportsMaxFields = {
  __typename?: 'permissionUsageReportsMaxFields';
  action?: Maybe<Scalars['permission_action']['output']>;
  lastUsed?: Maybe<Scalars['timestamptz']['output']>;
  resourceName?: Maybe<Scalars['String']['output']>;
  roleName?: Maybe<Scalars['String']['output']>;
  totalUsageCount?: Maybe<Scalars['bigint']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['bigint']['output']>;
  usersWithPermission?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type PermissionUsageReportsMinFields = {
  __typename?: 'permissionUsageReportsMinFields';
  action?: Maybe<Scalars['permission_action']['output']>;
  lastUsed?: Maybe<Scalars['timestamptz']['output']>;
  resourceName?: Maybe<Scalars['String']['output']>;
  roleName?: Maybe<Scalars['String']['output']>;
  totalUsageCount?: Maybe<Scalars['bigint']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['bigint']['output']>;
  usersWithPermission?: Maybe<Scalars['bigint']['output']>;
};

/** Ordering options when selecting data from "audit.permission_usage_report". */
export type PermissionUsageReportsOrderBy = {
  action?: InputMaybe<OrderBy>;
  lastUsed?: InputMaybe<OrderBy>;
  resourceName?: InputMaybe<OrderBy>;
  roleName?: InputMaybe<OrderBy>;
  totalUsageCount?: InputMaybe<OrderBy>;
  usersWhoUsedPermission?: InputMaybe<OrderBy>;
  usersWithPermission?: InputMaybe<OrderBy>;
};

/** select columns of table "audit.permission_usage_report" */
export type PermissionUsageReportsSelectColumn =
  /** column name */
  | 'action'
  /** column name */
  | 'lastUsed'
  /** column name */
  | 'resourceName'
  /** column name */
  | 'roleName'
  /** column name */
  | 'totalUsageCount'
  /** column name */
  | 'usersWhoUsedPermission'
  /** column name */
  | 'usersWithPermission'
  | '%future added value';

/** aggregate stddev on columns */
export type PermissionUsageReportsStddevFields = {
  __typename?: 'permissionUsageReportsStddevFields';
  totalUsageCount?: Maybe<Scalars['Float']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['Float']['output']>;
  usersWithPermission?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type PermissionUsageReportsStddevPopFields = {
  __typename?: 'permissionUsageReportsStddevPopFields';
  totalUsageCount?: Maybe<Scalars['Float']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['Float']['output']>;
  usersWithPermission?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type PermissionUsageReportsStddevSampFields = {
  __typename?: 'permissionUsageReportsStddevSampFields';
  totalUsageCount?: Maybe<Scalars['Float']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['Float']['output']>;
  usersWithPermission?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "permissionUsageReports" */
export type PermissionUsageReportsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PermissionUsageReportsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PermissionUsageReportsStreamCursorValueInput = {
  action?: InputMaybe<Scalars['permission_action']['input']>;
  lastUsed?: InputMaybe<Scalars['timestamptz']['input']>;
  resourceName?: InputMaybe<Scalars['String']['input']>;
  roleName?: InputMaybe<Scalars['String']['input']>;
  totalUsageCount?: InputMaybe<Scalars['bigint']['input']>;
  usersWhoUsedPermission?: InputMaybe<Scalars['bigint']['input']>;
  usersWithPermission?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type PermissionUsageReportsSumFields = {
  __typename?: 'permissionUsageReportsSumFields';
  totalUsageCount?: Maybe<Scalars['bigint']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['bigint']['output']>;
  usersWithPermission?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate varPop on columns */
export type PermissionUsageReportsVarPopFields = {
  __typename?: 'permissionUsageReportsVarPopFields';
  totalUsageCount?: Maybe<Scalars['Float']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['Float']['output']>;
  usersWithPermission?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type PermissionUsageReportsVarSampFields = {
  __typename?: 'permissionUsageReportsVarSampFields';
  totalUsageCount?: Maybe<Scalars['Float']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['Float']['output']>;
  usersWithPermission?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type PermissionUsageReportsVarianceFields = {
  __typename?: 'permissionUsageReportsVarianceFields';
  totalUsageCount?: Maybe<Scalars['Float']['output']>;
  usersWhoUsedPermission?: Maybe<Scalars['Float']['output']>;
  usersWithPermission?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "permissions" */
export type Permissions = {
  __typename?: 'permissions';
  action: Scalars['permission_action']['output'];
  /** An array relationship */
  assignedToRoles: Array<RolePermissions>;
  /** An aggregate relationship */
  assignedToRolesAggregate: RolePermissionsAggregate;
  createdAt: Scalars['timestamptz']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['uuid']['output'];
  legacyPermissionName?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  relatedResource: Resources;
  resourceId: Scalars['uuid']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};


/** columns and relationships of "permissions" */
export type PermissionsAssignedToRolesArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


/** columns and relationships of "permissions" */
export type PermissionsAssignedToRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};

/** aggregated selection of "permissions" */
export type PermissionsAggregate = {
  __typename?: 'permissionsAggregate';
  aggregate?: Maybe<PermissionsAggregateFields>;
  nodes: Array<Permissions>;
};

export type PermissionsAggregateBoolExp = {
  count?: InputMaybe<PermissionsAggregateBoolExpCount>;
};

export type PermissionsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<PermissionsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<PermissionsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "permissions" */
export type PermissionsAggregateFields = {
  __typename?: 'permissionsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<PermissionsMaxFields>;
  min?: Maybe<PermissionsMinFields>;
};


/** aggregate fields of "permissions" */
export type PermissionsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<PermissionsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "permissions" */
export type PermissionsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<PermissionsMaxOrderBy>;
  min?: InputMaybe<PermissionsMinOrderBy>;
};

/** input type for inserting array relation for remote table "permissions" */
export type PermissionsArrRelInsertInput = {
  data: Array<PermissionsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<PermissionsOnConflict>;
};

/** Boolean expression to filter rows from the table "permissions". All fields are combined with a logical 'AND'. */
export type PermissionsBoolExp = {
  _and?: InputMaybe<Array<PermissionsBoolExp>>;
  _not?: InputMaybe<PermissionsBoolExp>;
  _or?: InputMaybe<Array<PermissionsBoolExp>>;
  action?: InputMaybe<PermissionActionComparisonExp>;
  assignedToRoles?: InputMaybe<RolePermissionsBoolExp>;
  assignedToRolesAggregate?: InputMaybe<RolePermissionsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  legacyPermissionName?: InputMaybe<StringComparisonExp>;
  relatedResource?: InputMaybe<ResourcesBoolExp>;
  resourceId?: InputMaybe<UuidComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "permissions" */
export type PermissionsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'permissions_pkey'
  /** unique or primary key constraint on columns "action", "resource_id" */
  | 'permissions_resource_id_action_key'
  | '%future added value';

/** input type for inserting data into table "permissions" */
export type PermissionsInsertInput = {
  action?: InputMaybe<Scalars['permission_action']['input']>;
  assignedToRoles?: InputMaybe<RolePermissionsArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  legacyPermissionName?: InputMaybe<Scalars['String']['input']>;
  relatedResource?: InputMaybe<ResourcesObjRelInsertInput>;
  resourceId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type PermissionsMaxFields = {
  __typename?: 'permissionsMaxFields';
  action?: Maybe<Scalars['permission_action']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  legacyPermissionName?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "permissions" */
export type PermissionsMaxOrderBy = {
  action?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legacyPermissionName?: InputMaybe<OrderBy>;
  resourceId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type PermissionsMinFields = {
  __typename?: 'permissionsMinFields';
  action?: Maybe<Scalars['permission_action']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  legacyPermissionName?: Maybe<Scalars['String']['output']>;
  resourceId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "permissions" */
export type PermissionsMinOrderBy = {
  action?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legacyPermissionName?: InputMaybe<OrderBy>;
  resourceId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "permissions" */
export type PermissionsMutationResponse = {
  __typename?: 'permissionsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Permissions>;
};

/** input type for inserting object relation for remote table "permissions" */
export type PermissionsObjRelInsertInput = {
  data: PermissionsInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<PermissionsOnConflict>;
};

/** on_conflict condition type for table "permissions" */
export type PermissionsOnConflict = {
  constraint: PermissionsConstraint;
  updateColumns?: Array<PermissionsUpdateColumn>;
  where?: InputMaybe<PermissionsBoolExp>;
};

/** Ordering options when selecting data from "permissions". */
export type PermissionsOrderBy = {
  action?: InputMaybe<OrderBy>;
  assignedToRolesAggregate?: InputMaybe<RolePermissionsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  legacyPermissionName?: InputMaybe<OrderBy>;
  relatedResource?: InputMaybe<ResourcesOrderBy>;
  resourceId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: permissions */
export type PermissionsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "permissions" */
export type PermissionsSelectColumn =
  /** column name */
  | 'action'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'legacyPermissionName'
  /** column name */
  | 'resourceId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "permissions" */
export type PermissionsSetInput = {
  action?: InputMaybe<Scalars['permission_action']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  legacyPermissionName?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "permissions" */
export type PermissionsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: PermissionsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type PermissionsStreamCursorValueInput = {
  action?: InputMaybe<Scalars['permission_action']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  legacyPermissionName?: InputMaybe<Scalars['String']['input']>;
  resourceId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "permissions" */
export type PermissionsUpdateColumn =
  /** column name */
  | 'action'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'id'
  /** column name */
  | 'legacyPermissionName'
  /** column name */
  | 'resourceId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type PermissionsUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<PermissionsSetInput>;
  /** filter the rows which have to be updated */
  where: PermissionsBoolExp;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** query _Entity union */
  _entities?: Maybe<_Entity>;
  _service: _Service;
  /** execute function "activate_payroll_versions" which returns "payroll_activation_results" */
  activatePayrollVersions: Array<PayrollActivationResults>;
  /** execute function "activate_payroll_versions" and query aggregates on result of table type "payroll_activation_results" */
  activatePayrollVersionsAggregate: PayrollActivationResultsAggregate;
  /** fetch data from the table: "adjustment_rules" using primary key columns */
  adjustmentRuleById?: Maybe<AdjustmentRules>;
  /** An array relationship */
  adjustmentRules: Array<AdjustmentRules>;
  /** An aggregate relationship */
  adjustmentRulesAggregate: AdjustmentRulesAggregate;
  /** fetch data from the table: "app_settings" using primary key columns */
  appSettingById?: Maybe<AppSettings>;
  /** fetch data from the table: "app_settings" */
  appSettings: Array<AppSettings>;
  /** fetch aggregated fields from the table: "app_settings" */
  appSettingsAggregate: AppSettingsAggregate;
  /** fetch data from the table: "audit.audit_log" using primary key columns */
  auditLogById?: Maybe<AuditLogs>;
  /** fetch data from the table: "audit.audit_log" */
  auditLogs: Array<AuditLogs>;
  /** fetch aggregated fields from the table: "audit.audit_log" */
  auditLogsAggregate: AuditLogsAggregate;
  /** fetch data from the table: "audit.user_access_summary" */
  auditUserAccessSummary: Array<AuditUserAccessSummary>;
  /** fetch aggregated fields from the table: "audit.user_access_summary" */
  auditUserAccessSummaryAggregate: AuditUserAccessSummaryAggregate;
  /** fetch data from the table: "audit.auth_events" using primary key columns */
  authEventById?: Maybe<AuthEvents>;
  /** fetch data from the table: "audit.auth_events" */
  authEvents: Array<AuthEvents>;
  /** fetch aggregated fields from the table: "audit.auth_events" */
  authEventsAggregate: AuthEventsAggregate;
  /** fetch data from the table: "billing_event_log" using primary key columns */
  billingEventLogById?: Maybe<BillingEventLogs>;
  /** An array relationship */
  billingEventLogs: Array<BillingEventLogs>;
  /** An aggregate relationship */
  billingEventLogsAggregate: BillingEventLogsAggregate;
  /** fetch data from the table: "billing_invoice" */
  billingInvoice: Array<BillingInvoice>;
  /** fetch aggregated fields from the table: "billing_invoice" */
  billingInvoiceAggregate: BillingInvoiceAggregate;
  /** fetch data from the table: "billing_invoice" using primary key columns */
  billingInvoiceById?: Maybe<BillingInvoice>;
  /** fetch data from the table: "billing_invoice_item" using primary key columns */
  billingInvoiceItemById?: Maybe<BillingInvoiceItem>;
  /** An array relationship */
  billingInvoiceItems: Array<BillingInvoiceItem>;
  /** An aggregate relationship */
  billingInvoiceItemsAggregate: BillingInvoiceItemAggregate;
  /** fetch data from the table: "billing_items" using primary key columns */
  billingItemById?: Maybe<BillingItems>;
  /** An array relationship */
  billingItems: Array<BillingItems>;
  /** An aggregate relationship */
  billingItemsAggregate: BillingItemsAggregate;
  /** fetch data from the table: "billing_periods" using primary key columns */
  billingPeriod?: Maybe<BillingPeriods>;
  /** An array relationship */
  billingPeriods: Array<BillingPeriods>;
  /** An aggregate relationship */
  billingPeriodsAggregate: BillingPeriodsAggregate;
  /** fetch data from the table: "billing_plan" using primary key columns */
  billingPlanById?: Maybe<BillingPlans>;
  /** fetch data from the table: "billing_plan" */
  billingPlans: Array<BillingPlans>;
  /** fetch aggregated fields from the table: "billing_plan" */
  billingPlansAggregate: BillingPlansAggregate;
  calculate_utilization_stats: UtilizationStatsResponse;
  /** fetch data from the table: "client_billing_assignment" using primary key columns */
  clientBillingAssignmentById?: Maybe<ClientBillingAssignments>;
  /** An array relationship */
  clientBillingAssignments: Array<ClientBillingAssignments>;
  /** An aggregate relationship */
  clientBillingAssignmentsAggregate: ClientBillingAssignmentsAggregate;
  /** fetch data from the table: "clients" using primary key columns */
  clientById?: Maybe<Clients>;
  /** fetch data from the table: "client_external_systems" using primary key columns */
  clientExternalSystemById?: Maybe<ClientExternalSystems>;
  /** An array relationship */
  clientExternalSystems: Array<ClientExternalSystems>;
  /** An aggregate relationship */
  clientExternalSystemsAggregate: ClientExternalSystemsAggregate;
  /** fetch data from the table: "client_services_with_rates" */
  clientServicesWithRates: Array<ClientServicesWithRates>;
  /** fetch aggregated fields from the table: "client_services_with_rates" */
  clientServicesWithRatesAggregate: ClientServicesWithRatesAggregate;
  /** fetch data from the table: "clients" */
  clients: Array<Clients>;
  /** fetch aggregated fields from the table: "clients" */
  clientsAggregate: ClientsAggregate;
  /** fetch data from the table: "consultant_capacity_overview" */
  consultantCapacityOverview: Array<ConsultantCapacityOverview>;
  /** fetch aggregated fields from the table: "consultant_capacity_overview" */
  consultantCapacityOverviewAggregate: ConsultantCapacityOverviewAggregate;
  /** execute function "create_payroll_version" which returns "payroll_version_results" */
  createPayrollVersion: Array<PayrollVersionResults>;
  /** execute function "create_payroll_version" and query aggregates on result of table type "payroll_version_results" */
  createPayrollVersionAggregate: PayrollVersionResultsAggregate;
  /** execute function "create_payroll_version_simple" which returns "payroll_version_results" */
  createPayrollVersionSimple: Array<PayrollVersionResults>;
  /** execute function "create_payroll_version_simple" and query aggregates on result of table type "payroll_version_results" */
  createPayrollVersionSimpleAggregate: PayrollVersionResultsAggregate;
  /** fetch data from the table: "current_payrolls" */
  currentPayrolls: Array<CurrentPayrolls>;
  /** fetch aggregated fields from the table: "current_payrolls" */
  currentPayrollsAggregate: CurrentPayrollsAggregate;
  /** fetch data from the table: "audit.data_access_log" using primary key columns */
  dataAccessLogById?: Maybe<DataAccessLogs>;
  /** fetch data from the table: "audit.data_access_log" */
  dataAccessLogs: Array<DataAccessLogs>;
  /** fetch aggregated fields from the table: "audit.data_access_log" */
  dataAccessLogsAggregate: DataAccessLogsAggregate;
  /** An array relationship */
  dataBackups: Array<DataBackups>;
  /** An aggregate relationship */
  dataBackupsAggregate: DataBackupsAggregate;
  /** fetch data from the table: "data_backups" using primary key columns */
  dataBackupsByPk?: Maybe<DataBackups>;
  /** An array relationship */
  emailDrafts: Array<EmailDrafts>;
  /** An aggregate relationship */
  emailDraftsAggregate: EmailDraftsAggregate;
  /** fetch data from the table: "email_drafts" using primary key columns */
  emailDraftsByPk?: Maybe<EmailDrafts>;
  /** An array relationship */
  emailSendLogs: Array<EmailSendLogs>;
  /** An aggregate relationship */
  emailSendLogsAggregate: EmailSendLogsAggregate;
  /** fetch data from the table: "email_send_logs" using primary key columns */
  emailSendLogsByPk?: Maybe<EmailSendLogs>;
  /** An array relationship */
  emailTemplates: Array<EmailTemplates>;
  /** An aggregate relationship */
  emailTemplatesAggregate: EmailTemplatesAggregate;
  /** fetch data from the table: "email_templates" using primary key columns */
  emailTemplatesByPk?: Maybe<EmailTemplates>;
  /** fetch data from the table: "external_systems" using primary key columns */
  externalSystemById?: Maybe<ExternalSystems>;
  /** fetch data from the table: "external_systems" */
  externalSystems: Array<ExternalSystems>;
  /** fetch aggregated fields from the table: "external_systems" */
  externalSystemsAggregate: ExternalSystemsAggregate;
  /** fetch data from the table: "feature_flags" using primary key columns */
  featureFlagById?: Maybe<FeatureFlags>;
  /** fetch data from the table: "feature_flags" */
  featureFlags: Array<FeatureFlags>;
  /** fetch aggregated fields from the table: "feature_flags" */
  featureFlagsAggregate: FeatureFlagsAggregate;
  /** fetch data from the table: "files" using primary key columns */
  fileById?: Maybe<Files>;
  /** fetch data from the table: "files" */
  files: Array<Files>;
  /** fetch aggregated fields from the table: "files" */
  filesAggregate: FilesAggregate;
  /** execute function "generate_payroll_dates" which returns "payroll_dates" */
  generatePayrollDates: Array<PayrollDates>;
  /** execute function "generate_payroll_dates" and query aggregates on result of table type "payroll_dates" */
  generatePayrollDatesAggregate: PayrollDatesAggregate;
  /** execute function "get_latest_payroll_version" which returns "latest_payroll_version_results" */
  getLatestPayrollVersion: Array<LatestPayrollVersionResults>;
  /** execute function "get_latest_payroll_version" and query aggregates on result of table type "latest_payroll_version_results" */
  getLatestPayrollVersionAggregate: LatestPayrollVersionResultsAggregate;
  /** execute function "get_payroll_version_history" which returns "payroll_version_history_results" */
  getPayrollVersionHistory: Array<PayrollVersionHistoryResults>;
  /** execute function "get_payroll_version_history" and query aggregates on result of table type "payroll_version_history_results" */
  getPayrollVersionHistoryAggregate: PayrollVersionHistoryResultsAggregate;
  get_assignment_calendar: AssignmentCalendarResponse;
  get_team_capacity_overview: TeamCapacityResponse;
  get_workload_metrics: WorkloadMetricsResponse;
  /** fetch data from the table: "holidays" using primary key columns */
  holidayById?: Maybe<Holidays>;
  /** fetch data from the table: "holidays" */
  holidays: Array<Holidays>;
  /** fetch aggregated fields from the table: "holidays" */
  holidaysAggregate: HolidaysAggregate;
  /** fetch data from the table: "latest_payroll_version_results" using primary key columns */
  latestPayrollVersionResultById?: Maybe<LatestPayrollVersionResults>;
  /** fetch data from the table: "latest_payroll_version_results" */
  latestPayrollVersionResults: Array<LatestPayrollVersionResults>;
  /** fetch aggregated fields from the table: "latest_payroll_version_results" */
  latestPayrollVersionResultsAggregate: LatestPayrollVersionResultsAggregate;
  /** fetch data from the table: "leave" */
  leave: Array<Leave>;
  /** fetch aggregated fields from the table: "leave" */
  leaveAggregate: LeaveAggregate;
  /** fetch data from the table: "leave" using primary key columns */
  leaveById?: Maybe<Leave>;
  /** fetch data from the table: "notes" using primary key columns */
  noteById?: Maybe<Notes>;
  /** fetch data from the table: "notes" */
  notes: Array<Notes>;
  /** fetch aggregated fields from the table: "notes" */
  notesAggregate: NotesAggregate;
  /** fetch data from the table: "payroll_activation_results" using primary key columns */
  payrollActivationResultById?: Maybe<PayrollActivationResults>;
  /** fetch data from the table: "payroll_activation_results" */
  payrollActivationResults: Array<PayrollActivationResults>;
  /** fetch aggregated fields from the table: "payroll_activation_results" */
  payrollActivationResultsAggregate: PayrollActivationResultsAggregate;
  /** fetch data from the table: "payroll_assignment_audit" using primary key columns */
  payrollAssignmentAuditById?: Maybe<PayrollAssignmentAudits>;
  /** An array relationship */
  payrollAssignmentAudits: Array<PayrollAssignmentAudits>;
  /** An aggregate relationship */
  payrollAssignmentAuditsAggregate: PayrollAssignmentAuditsAggregate;
  /** fetch data from the table: "payroll_assignments" using primary key columns */
  payrollAssignmentById?: Maybe<PayrollAssignments>;
  /** fetch data from the table: "payroll_assignments" */
  payrollAssignments: Array<PayrollAssignments>;
  /** fetch aggregated fields from the table: "payroll_assignments" */
  payrollAssignmentsAggregate: PayrollAssignmentsAggregate;
  /** fetch data from the table: "payrolls" using primary key columns */
  payrollById?: Maybe<Payrolls>;
  /** fetch data from the table: "payroll_cycles" using primary key columns */
  payrollCycleById?: Maybe<PayrollCycles>;
  /** fetch data from the table: "payroll_cycles" */
  payrollCycles: Array<PayrollCycles>;
  /** fetch aggregated fields from the table: "payroll_cycles" */
  payrollCyclesAggregate: PayrollCyclesAggregate;
  /** fetch data from the table: "payroll_dashboard_stats" */
  payrollDashboardStats: Array<PayrollDashboardStats>;
  /** fetch aggregated fields from the table: "payroll_dashboard_stats" */
  payrollDashboardStatsAggregate: PayrollDashboardStatsAggregate;
  /** fetch data from the table: "payroll_dates" using primary key columns */
  payrollDateById?: Maybe<PayrollDates>;
  /** fetch data from the table: "payroll_date_types" using primary key columns */
  payrollDateTypeById?: Maybe<PayrollDateTypes>;
  /** fetch data from the table: "payroll_date_types" */
  payrollDateTypes: Array<PayrollDateTypes>;
  /** fetch aggregated fields from the table: "payroll_date_types" */
  payrollDateTypesAggregate: PayrollDateTypesAggregate;
  /** An array relationship */
  payrollDates: Array<PayrollDates>;
  /** An aggregate relationship */
  payrollDatesAggregate: PayrollDatesAggregate;
  /** fetch data from the table: "payroll_profitability" */
  payrollProfitability: Array<PayrollProfitability>;
  /** fetch aggregated fields from the table: "payroll_profitability" */
  payrollProfitabilityAggregate: PayrollProfitabilityAggregate;
  /** fetch data from the table: "payroll_required_skills" */
  payrollRequiredSkill: Array<PayrollRequiredSkill>;
  /** fetch aggregated fields from the table: "payroll_required_skills" */
  payrollRequiredSkillAggregate: PayrollRequiredSkillAggregate;
  /** fetch data from the table: "payroll_triggers_status" */
  payrollTriggersStatus: Array<PayrollTriggersStatus>;
  /** fetch aggregated fields from the table: "payroll_triggers_status" */
  payrollTriggersStatusAggregate: PayrollTriggersStatusAggregate;
  /** fetch data from the table: "payroll_version_history_results" using primary key columns */
  payrollVersionHistoryResultById?: Maybe<PayrollVersionHistoryResults>;
  /** fetch data from the table: "payroll_version_history_results" */
  payrollVersionHistoryResults: Array<PayrollVersionHistoryResults>;
  /** fetch aggregated fields from the table: "payroll_version_history_results" */
  payrollVersionHistoryResultsAggregate: PayrollVersionHistoryResultsAggregate;
  /** fetch data from the table: "payroll_version_results" using primary key columns */
  payrollVersionResultById?: Maybe<PayrollVersionResults>;
  /** fetch data from the table: "payroll_version_results" */
  payrollVersionResults: Array<PayrollVersionResults>;
  /** fetch aggregated fields from the table: "payroll_version_results" */
  payrollVersionResultsAggregate: PayrollVersionResultsAggregate;
  /** An array relationship */
  payrolls: Array<Payrolls>;
  /** An aggregate relationship */
  payrollsAggregate: PayrollsAggregate;
  /** fetch data from the table: "permission_audit_log" using primary key columns */
  permissionAuditLogById?: Maybe<PermissionAuditLogs>;
  /** fetch data from the table: "permission_audit_log" */
  permissionAuditLogs: Array<PermissionAuditLogs>;
  /** fetch aggregated fields from the table: "permission_audit_log" */
  permissionAuditLogsAggregate: PermissionAuditLogsAggregate;
  /** fetch data from the table: "permissions" using primary key columns */
  permissionById?: Maybe<Permissions>;
  /** fetch data from the table: "audit.permission_changes" using primary key columns */
  permissionChangeById?: Maybe<PermissionChanges>;
  /** fetch data from the table: "audit.permission_changes" */
  permissionChanges: Array<PermissionChanges>;
  /** fetch aggregated fields from the table: "audit.permission_changes" */
  permissionChangesAggregate: PermissionChangesAggregate;
  /** fetch data from the table: "permission_overrides" using primary key columns */
  permissionOverrideById?: Maybe<PermissionOverrides>;
  /** fetch data from the table: "permission_overrides" */
  permissionOverrides: Array<PermissionOverrides>;
  /** fetch aggregated fields from the table: "permission_overrides" */
  permissionOverridesAggregate: PermissionOverridesAggregate;
  /** fetch data from the table: "audit.permission_usage_report" */
  permissionUsageReports: Array<PermissionUsageReports>;
  /** fetch aggregated fields from the table: "audit.permission_usage_report" */
  permissionUsageReportsAggregate: PermissionUsageReportsAggregate;
  /** fetch data from the table: "permissions" */
  permissions: Array<Permissions>;
  /** fetch aggregated fields from the table: "permissions" */
  permissionsAggregate: PermissionsAggregate;
  /** fetch data from the table: "position_admin_defaults" */
  positionAdminDefaults: Array<PositionAdminDefaults>;
  /** fetch aggregated fields from the table: "position_admin_defaults" */
  positionAdminDefaultsAggregate: PositionAdminDefaultsAggregate;
  /** fetch data from the table: "position_admin_defaults" using primary key columns */
  positionAdminDefaultsByPk?: Maybe<PositionAdminDefaults>;
  /** fetch data from the table: "rate_limits" */
  rateLimits: Array<RateLimits>;
  /** fetch aggregated fields from the table: "rate_limits" */
  rateLimitsAggregate: RateLimitsAggregate;
  /** fetch data from the table: "rate_limits" using primary key columns */
  rateLimitsByPk?: Maybe<RateLimits>;
  /** fetch data from the table: "resources" using primary key columns */
  resourceById?: Maybe<Resources>;
  /** fetch data from the table: "resources" */
  resources: Array<Resources>;
  /** fetch aggregated fields from the table: "resources" */
  resourcesAggregate: ResourcesAggregate;
  /** fetch data from the table: "roles" using primary key columns */
  roleById?: Maybe<Roles>;
  /** fetch data from the table: "role_permissions" using primary key columns */
  rolePermissionById?: Maybe<RolePermissions>;
  /** fetch data from the table: "role_permissions" */
  rolePermissions: Array<RolePermissions>;
  /** fetch aggregated fields from the table: "role_permissions" */
  rolePermissionsAggregate: RolePermissionsAggregate;
  /** fetch data from the table: "roles" */
  roles: Array<Roles>;
  /** fetch aggregated fields from the table: "roles" */
  rolesAggregate: RolesAggregate;
  /** fetch data from the table: "security_alerts" */
  securityAlerts: Array<SecurityAlerts>;
  /** fetch aggregated fields from the table: "security_alerts" */
  securityAlertsAggregate: SecurityAlertsAggregate;
  /** fetch data from the table: "security_alerts" using primary key columns */
  securityAlertsByPk?: Maybe<SecurityAlerts>;
  /** An array relationship */
  securitySettings: Array<SecuritySettings>;
  /** An aggregate relationship */
  securitySettingsAggregate: SecuritySettingsAggregate;
  /** fetch data from the table: "security_settings" using primary key columns */
  securitySettingsByPk?: Maybe<SecuritySettings>;
  /** fetch data from the table: "audit.slow_queries" */
  slowQueries: Array<SlowQueries>;
  /** fetch aggregated fields from the table: "audit.slow_queries" */
  slowQueriesAggregate: SlowQueriesAggregate;
  /** fetch data from the table: "audit.slow_queries" using primary key columns */
  slowQueryById?: Maybe<SlowQueries>;
  /** fetch data from the table: "staff_billing_performance" */
  staffBillingPerformance: Array<StaffBillingPerformance>;
  /** fetch aggregated fields from the table: "staff_billing_performance" */
  staffBillingPerformanceAggregate: StaffBillingPerformanceAggregate;
  /** fetch data from the table: "system_configuration" */
  systemConfiguration: Array<SystemConfiguration>;
  /** fetch aggregated fields from the table: "system_configuration" */
  systemConfigurationAggregate: SystemConfigurationAggregate;
  /** fetch data from the table: "system_configuration" using primary key columns */
  systemConfigurationByPk?: Maybe<SystemConfiguration>;
  /** fetch data from the table: "system_health" */
  systemHealth: Array<SystemHealth>;
  /** fetch aggregated fields from the table: "system_health" */
  systemHealthAggregate: SystemHealthAggregate;
  /** fetch data from the table: "system_health" using primary key columns */
  systemHealthByPk?: Maybe<SystemHealth>;
  /** fetch data from the table: "team_capacity_by_position" */
  teamCapacityByPosition: Array<TeamCapacityByPosition>;
  /** fetch aggregated fields from the table: "team_capacity_by_position" */
  teamCapacityByPositionAggregate: TeamCapacityByPositionAggregate;
  /** An array relationship */
  timeEntries: Array<TimeEntries>;
  /** An aggregate relationship */
  timeEntriesAggregate: TimeEntriesAggregate;
  /** fetch data from the table: "time_entries" using primary key columns */
  timeEntry?: Maybe<TimeEntries>;
  /** fetch data from the table: "users" using primary key columns */
  userById?: Maybe<Users>;
  /** An array relationship */
  userEmailTemplateFavorites: Array<UserEmailTemplateFavorites>;
  /** An aggregate relationship */
  userEmailTemplateFavoritesAggregate: UserEmailTemplateFavoritesAggregate;
  /** fetch data from the table: "user_email_template_favorites" using primary key columns */
  userEmailTemplateFavoritesByPk?: Maybe<UserEmailTemplateFavorites>;
  /** fetch data from the table: "user_invitations" using primary key columns */
  userInvitationById?: Maybe<UserInvitations>;
  /** An array relationship */
  userInvitations: Array<UserInvitations>;
  /** An aggregate relationship */
  userInvitationsAggregate: UserInvitationsAggregate;
  /** fetch data from the table: "user_roles" using primary key columns */
  userRoleById?: Maybe<UserRoles>;
  /** fetch data from the table: "user_roles" */
  userRoles: Array<UserRoles>;
  /** fetch aggregated fields from the table: "user_roles" */
  userRolesAggregate: UserRolesAggregate;
  /** An array relationship */
  userSessions: Array<UserSessions>;
  /** An aggregate relationship */
  userSessionsAggregate: UserSessionsAggregate;
  /** fetch data from the table: "user_sessions" using primary key columns */
  userSessionsByPk?: Maybe<UserSessions>;
  /** fetch data from the table: "user_skills" */
  userSkill: Array<UserSkill>;
  /** fetch aggregated fields from the table: "user_skills" */
  userSkillAggregate: UserSkillAggregate;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  usersAggregate: UsersAggregate;
  /** fetch data from the table: "users_role_backup" */
  usersRoleBackups: Array<UsersRoleBackup>;
  /** fetch aggregated fields from the table: "users_role_backup" */
  usersRoleBackupsAggregate: UsersRoleBackupAggregate;
  /** fetch data from the table: "work_schedule" */
  workSchedule: Array<WorkSchedule>;
  /** fetch aggregated fields from the table: "work_schedule" */
  workScheduleAggregate: WorkScheduleAggregate;
  /** fetch data from the table: "work_schedule" using primary key columns */
  workScheduleById?: Maybe<WorkSchedule>;
};


export type Query_Root_EntitiesArgs = {
  representations: Array<Scalars['_Any']['input']>;
};


export type Query_RootActivatePayrollVersionsArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Query_RootActivatePayrollVersionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Query_RootAdjustmentRuleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootAdjustmentRulesArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


export type Query_RootAdjustmentRulesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


export type Query_RootAppSettingByIdArgs = {
  id: Scalars['String']['input'];
};


export type Query_RootAppSettingsArgs = {
  distinctOn?: InputMaybe<Array<AppSettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AppSettingsOrderBy>>;
  where?: InputMaybe<AppSettingsBoolExp>;
};


export type Query_RootAppSettingsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AppSettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AppSettingsOrderBy>>;
  where?: InputMaybe<AppSettingsBoolExp>;
};


export type Query_RootAuditLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootAuditLogsArgs = {
  distinctOn?: InputMaybe<Array<AuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditLogsOrderBy>>;
  where?: InputMaybe<AuditLogsBoolExp>;
};


export type Query_RootAuditLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditLogsOrderBy>>;
  where?: InputMaybe<AuditLogsBoolExp>;
};


export type Query_RootAuditUserAccessSummaryArgs = {
  distinctOn?: InputMaybe<Array<AuditUserAccessSummarySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditUserAccessSummaryOrderBy>>;
  where?: InputMaybe<AuditUserAccessSummaryBoolExp>;
};


export type Query_RootAuditUserAccessSummaryAggregateArgs = {
  distinctOn?: InputMaybe<Array<AuditUserAccessSummarySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditUserAccessSummaryOrderBy>>;
  where?: InputMaybe<AuditUserAccessSummaryBoolExp>;
};


export type Query_RootAuthEventByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootAuthEventsArgs = {
  distinctOn?: InputMaybe<Array<AuthEventsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthEventsOrderBy>>;
  where?: InputMaybe<AuthEventsBoolExp>;
};


export type Query_RootAuthEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AuthEventsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthEventsOrderBy>>;
  where?: InputMaybe<AuthEventsBoolExp>;
};


export type Query_RootBillingEventLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootBillingEventLogsArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


export type Query_RootBillingEventLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


export type Query_RootBillingInvoiceArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


export type Query_RootBillingInvoiceAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


export type Query_RootBillingInvoiceByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootBillingInvoiceItemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootBillingInvoiceItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


export type Query_RootBillingInvoiceItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


export type Query_RootBillingItemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootBillingItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


export type Query_RootBillingItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


export type Query_RootBillingPeriodArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootBillingPeriodsArgs = {
  distinctOn?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPeriodsOrderBy>>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};


export type Query_RootBillingPeriodsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPeriodsOrderBy>>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};


export type Query_RootBillingPlanByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootBillingPlansArgs = {
  distinctOn?: InputMaybe<Array<BillingPlansSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPlansOrderBy>>;
  where?: InputMaybe<BillingPlansBoolExp>;
};


export type Query_RootBillingPlansAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingPlansSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPlansOrderBy>>;
  where?: InputMaybe<BillingPlansBoolExp>;
};


export type Query_RootCalculate_Utilization_StatsArgs = {
  input: UtilizationStatsInput;
};


export type Query_RootClientBillingAssignmentByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootClientBillingAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


export type Query_RootClientBillingAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


export type Query_RootClientByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootClientExternalSystemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootClientExternalSystemsArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


export type Query_RootClientExternalSystemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


export type Query_RootClientServicesWithRatesArgs = {
  distinctOn?: InputMaybe<Array<ClientServicesWithRatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientServicesWithRatesOrderBy>>;
  where?: InputMaybe<ClientServicesWithRatesBoolExp>;
};


export type Query_RootClientServicesWithRatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientServicesWithRatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientServicesWithRatesOrderBy>>;
  where?: InputMaybe<ClientServicesWithRatesBoolExp>;
};


export type Query_RootClientsArgs = {
  distinctOn?: InputMaybe<Array<ClientsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientsOrderBy>>;
  where?: InputMaybe<ClientsBoolExp>;
};


export type Query_RootClientsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientsOrderBy>>;
  where?: InputMaybe<ClientsBoolExp>;
};


export type Query_RootConsultantCapacityOverviewArgs = {
  distinctOn?: InputMaybe<Array<ConsultantCapacityOverviewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ConsultantCapacityOverviewOrderBy>>;
  where?: InputMaybe<ConsultantCapacityOverviewBoolExp>;
};


export type Query_RootConsultantCapacityOverviewAggregateArgs = {
  distinctOn?: InputMaybe<Array<ConsultantCapacityOverviewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ConsultantCapacityOverviewOrderBy>>;
  where?: InputMaybe<ConsultantCapacityOverviewBoolExp>;
};


export type Query_RootCreatePayrollVersionArgs = {
  args: CreatePayrollVersionArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Query_RootCreatePayrollVersionAggregateArgs = {
  args: CreatePayrollVersionArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Query_RootCreatePayrollVersionSimpleArgs = {
  args: CreatePayrollVersionSimpleArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Query_RootCreatePayrollVersionSimpleAggregateArgs = {
  args: CreatePayrollVersionSimpleArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Query_RootCurrentPayrollsArgs = {
  distinctOn?: InputMaybe<Array<CurrentPayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CurrentPayrollsOrderBy>>;
  where?: InputMaybe<CurrentPayrollsBoolExp>;
};


export type Query_RootCurrentPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<CurrentPayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CurrentPayrollsOrderBy>>;
  where?: InputMaybe<CurrentPayrollsBoolExp>;
};


export type Query_RootDataAccessLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootDataAccessLogsArgs = {
  distinctOn?: InputMaybe<Array<DataAccessLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataAccessLogsOrderBy>>;
  where?: InputMaybe<DataAccessLogsBoolExp>;
};


export type Query_RootDataAccessLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DataAccessLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataAccessLogsOrderBy>>;
  where?: InputMaybe<DataAccessLogsBoolExp>;
};


export type Query_RootDataBackupsArgs = {
  distinctOn?: InputMaybe<Array<DataBackupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataBackupsOrderBy>>;
  where?: InputMaybe<DataBackupsBoolExp>;
};


export type Query_RootDataBackupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DataBackupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataBackupsOrderBy>>;
  where?: InputMaybe<DataBackupsBoolExp>;
};


export type Query_RootDataBackupsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootEmailDraftsArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


export type Query_RootEmailDraftsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


export type Query_RootEmailDraftsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootEmailSendLogsArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


export type Query_RootEmailSendLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


export type Query_RootEmailSendLogsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootEmailTemplatesArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


export type Query_RootEmailTemplatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


export type Query_RootEmailTemplatesByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootExternalSystemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootExternalSystemsArgs = {
  distinctOn?: InputMaybe<Array<ExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExternalSystemsOrderBy>>;
  where?: InputMaybe<ExternalSystemsBoolExp>;
};


export type Query_RootExternalSystemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExternalSystemsOrderBy>>;
  where?: InputMaybe<ExternalSystemsBoolExp>;
};


export type Query_RootFeatureFlagByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootFeatureFlagsArgs = {
  distinctOn?: InputMaybe<Array<FeatureFlagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FeatureFlagsOrderBy>>;
  where?: InputMaybe<FeatureFlagsBoolExp>;
};


export type Query_RootFeatureFlagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FeatureFlagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FeatureFlagsOrderBy>>;
  where?: InputMaybe<FeatureFlagsBoolExp>;
};


export type Query_RootFileByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootFilesArgs = {
  distinctOn?: InputMaybe<Array<FilesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FilesOrderBy>>;
  where?: InputMaybe<FilesBoolExp>;
};


export type Query_RootFilesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FilesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FilesOrderBy>>;
  where?: InputMaybe<FilesBoolExp>;
};


export type Query_RootGeneratePayrollDatesArgs = {
  args: GeneratePayrollDatesArgs;
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Query_RootGeneratePayrollDatesAggregateArgs = {
  args: GeneratePayrollDatesArgs;
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Query_RootGetLatestPayrollVersionArgs = {
  args: GetLatestPayrollVersionArgs;
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Query_RootGetLatestPayrollVersionAggregateArgs = {
  args: GetLatestPayrollVersionArgs;
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Query_RootGetPayrollVersionHistoryArgs = {
  args: GetPayrollVersionHistoryArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Query_RootGetPayrollVersionHistoryAggregateArgs = {
  args: GetPayrollVersionHistoryArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Query_RootGet_Assignment_CalendarArgs = {
  input: AssignmentCalendarInput;
};


export type Query_RootGet_Team_Capacity_OverviewArgs = {
  input: TeamCapacityInput;
};


export type Query_RootGet_Workload_MetricsArgs = {
  input: WorkloadMetricsInput;
};


export type Query_RootHolidayByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootHolidaysArgs = {
  distinctOn?: InputMaybe<Array<HolidaysSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<HolidaysOrderBy>>;
  where?: InputMaybe<HolidaysBoolExp>;
};


export type Query_RootHolidaysAggregateArgs = {
  distinctOn?: InputMaybe<Array<HolidaysSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<HolidaysOrderBy>>;
  where?: InputMaybe<HolidaysBoolExp>;
};


export type Query_RootLatestPayrollVersionResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootLatestPayrollVersionResultsArgs = {
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Query_RootLatestPayrollVersionResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Query_RootLeaveArgs = {
  distinctOn?: InputMaybe<Array<LeaveSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LeaveOrderBy>>;
  where?: InputMaybe<LeaveBoolExp>;
};


export type Query_RootLeaveAggregateArgs = {
  distinctOn?: InputMaybe<Array<LeaveSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LeaveOrderBy>>;
  where?: InputMaybe<LeaveBoolExp>;
};


export type Query_RootLeaveByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootNoteByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootNotesArgs = {
  distinctOn?: InputMaybe<Array<NotesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<NotesOrderBy>>;
  where?: InputMaybe<NotesBoolExp>;
};


export type Query_RootNotesAggregateArgs = {
  distinctOn?: InputMaybe<Array<NotesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<NotesOrderBy>>;
  where?: InputMaybe<NotesBoolExp>;
};


export type Query_RootPayrollActivationResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollActivationResultsArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Query_RootPayrollActivationResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Query_RootPayrollAssignmentAuditByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollAssignmentAuditsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


export type Query_RootPayrollAssignmentAuditsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


export type Query_RootPayrollAssignmentByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


export type Query_RootPayrollAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


export type Query_RootPayrollByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollCycleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollCyclesArgs = {
  distinctOn?: InputMaybe<Array<PayrollCyclesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollCyclesOrderBy>>;
  where?: InputMaybe<PayrollCyclesBoolExp>;
};


export type Query_RootPayrollCyclesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollCyclesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollCyclesOrderBy>>;
  where?: InputMaybe<PayrollCyclesBoolExp>;
};


export type Query_RootPayrollDashboardStatsArgs = {
  distinctOn?: InputMaybe<Array<PayrollDashboardStatsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDashboardStatsOrderBy>>;
  where?: InputMaybe<PayrollDashboardStatsBoolExp>;
};


export type Query_RootPayrollDashboardStatsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollDashboardStatsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDashboardStatsOrderBy>>;
  where?: InputMaybe<PayrollDashboardStatsBoolExp>;
};


export type Query_RootPayrollDateByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollDateTypeByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollDateTypesArgs = {
  distinctOn?: InputMaybe<Array<PayrollDateTypesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDateTypesOrderBy>>;
  where?: InputMaybe<PayrollDateTypesBoolExp>;
};


export type Query_RootPayrollDateTypesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollDateTypesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDateTypesOrderBy>>;
  where?: InputMaybe<PayrollDateTypesBoolExp>;
};


export type Query_RootPayrollDatesArgs = {
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Query_RootPayrollDatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Query_RootPayrollProfitabilityArgs = {
  distinctOn?: InputMaybe<Array<PayrollProfitabilitySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollProfitabilityOrderBy>>;
  where?: InputMaybe<PayrollProfitabilityBoolExp>;
};


export type Query_RootPayrollProfitabilityAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollProfitabilitySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollProfitabilityOrderBy>>;
  where?: InputMaybe<PayrollProfitabilityBoolExp>;
};


export type Query_RootPayrollRequiredSkillArgs = {
  distinctOn?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollRequiredSkillOrderBy>>;
  where?: InputMaybe<PayrollRequiredSkillBoolExp>;
};


export type Query_RootPayrollRequiredSkillAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollRequiredSkillOrderBy>>;
  where?: InputMaybe<PayrollRequiredSkillBoolExp>;
};


export type Query_RootPayrollTriggersStatusArgs = {
  distinctOn?: InputMaybe<Array<PayrollTriggersStatusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollTriggersStatusOrderBy>>;
  where?: InputMaybe<PayrollTriggersStatusBoolExp>;
};


export type Query_RootPayrollTriggersStatusAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollTriggersStatusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollTriggersStatusOrderBy>>;
  where?: InputMaybe<PayrollTriggersStatusBoolExp>;
};


export type Query_RootPayrollVersionHistoryResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollVersionHistoryResultsArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Query_RootPayrollVersionHistoryResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Query_RootPayrollVersionResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPayrollVersionResultsArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Query_RootPayrollVersionResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Query_RootPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


export type Query_RootPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


export type Query_RootPermissionAuditLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPermissionAuditLogsArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


export type Query_RootPermissionAuditLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


export type Query_RootPermissionByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPermissionChangeByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPermissionChangesArgs = {
  distinctOn?: InputMaybe<Array<PermissionChangesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionChangesOrderBy>>;
  where?: InputMaybe<PermissionChangesBoolExp>;
};


export type Query_RootPermissionChangesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionChangesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionChangesOrderBy>>;
  where?: InputMaybe<PermissionChangesBoolExp>;
};


export type Query_RootPermissionOverrideByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootPermissionOverridesArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


export type Query_RootPermissionOverridesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


export type Query_RootPermissionUsageReportsArgs = {
  distinctOn?: InputMaybe<Array<PermissionUsageReportsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionUsageReportsOrderBy>>;
  where?: InputMaybe<PermissionUsageReportsBoolExp>;
};


export type Query_RootPermissionUsageReportsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionUsageReportsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionUsageReportsOrderBy>>;
  where?: InputMaybe<PermissionUsageReportsBoolExp>;
};


export type Query_RootPermissionsArgs = {
  distinctOn?: InputMaybe<Array<PermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionsOrderBy>>;
  where?: InputMaybe<PermissionsBoolExp>;
};


export type Query_RootPermissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionsOrderBy>>;
  where?: InputMaybe<PermissionsBoolExp>;
};


export type Query_RootPositionAdminDefaultsArgs = {
  distinctOn?: InputMaybe<Array<PositionAdminDefaultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PositionAdminDefaultsOrderBy>>;
  where?: InputMaybe<PositionAdminDefaultsBoolExp>;
};


export type Query_RootPositionAdminDefaultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PositionAdminDefaultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PositionAdminDefaultsOrderBy>>;
  where?: InputMaybe<PositionAdminDefaultsBoolExp>;
};


export type Query_RootPositionAdminDefaultsByPkArgs = {
  position: Scalars['user_position']['input'];
};


export type Query_RootRateLimitsArgs = {
  distinctOn?: InputMaybe<Array<RateLimitsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RateLimitsOrderBy>>;
  where?: InputMaybe<RateLimitsBoolExp>;
};


export type Query_RootRateLimitsAggregateArgs = {
  distinctOn?: InputMaybe<Array<RateLimitsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RateLimitsOrderBy>>;
  where?: InputMaybe<RateLimitsBoolExp>;
};


export type Query_RootRateLimitsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootResourceByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootResourcesArgs = {
  distinctOn?: InputMaybe<Array<ResourcesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ResourcesOrderBy>>;
  where?: InputMaybe<ResourcesBoolExp>;
};


export type Query_RootResourcesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ResourcesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ResourcesOrderBy>>;
  where?: InputMaybe<ResourcesBoolExp>;
};


export type Query_RootRoleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootRolePermissionByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootRolePermissionsArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


export type Query_RootRolePermissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


export type Query_RootRolesArgs = {
  distinctOn?: InputMaybe<Array<RolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolesOrderBy>>;
  where?: InputMaybe<RolesBoolExp>;
};


export type Query_RootRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolesOrderBy>>;
  where?: InputMaybe<RolesBoolExp>;
};


export type Query_RootSecurityAlertsArgs = {
  distinctOn?: InputMaybe<Array<SecurityAlertsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecurityAlertsOrderBy>>;
  where?: InputMaybe<SecurityAlertsBoolExp>;
};


export type Query_RootSecurityAlertsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SecurityAlertsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecurityAlertsOrderBy>>;
  where?: InputMaybe<SecurityAlertsBoolExp>;
};


export type Query_RootSecurityAlertsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootSecuritySettingsArgs = {
  distinctOn?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecuritySettingsOrderBy>>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};


export type Query_RootSecuritySettingsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecuritySettingsOrderBy>>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};


export type Query_RootSecuritySettingsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootSlowQueriesArgs = {
  distinctOn?: InputMaybe<Array<SlowQueriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SlowQueriesOrderBy>>;
  where?: InputMaybe<SlowQueriesBoolExp>;
};


export type Query_RootSlowQueriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<SlowQueriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SlowQueriesOrderBy>>;
  where?: InputMaybe<SlowQueriesBoolExp>;
};


export type Query_RootSlowQueryByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootStaffBillingPerformanceArgs = {
  distinctOn?: InputMaybe<Array<StaffBillingPerformanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<StaffBillingPerformanceOrderBy>>;
  where?: InputMaybe<StaffBillingPerformanceBoolExp>;
};


export type Query_RootStaffBillingPerformanceAggregateArgs = {
  distinctOn?: InputMaybe<Array<StaffBillingPerformanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<StaffBillingPerformanceOrderBy>>;
  where?: InputMaybe<StaffBillingPerformanceBoolExp>;
};


export type Query_RootSystemConfigurationArgs = {
  distinctOn?: InputMaybe<Array<SystemConfigurationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemConfigurationOrderBy>>;
  where?: InputMaybe<SystemConfigurationBoolExp>;
};


export type Query_RootSystemConfigurationAggregateArgs = {
  distinctOn?: InputMaybe<Array<SystemConfigurationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemConfigurationOrderBy>>;
  where?: InputMaybe<SystemConfigurationBoolExp>;
};


export type Query_RootSystemConfigurationByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootSystemHealthArgs = {
  distinctOn?: InputMaybe<Array<SystemHealthSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemHealthOrderBy>>;
  where?: InputMaybe<SystemHealthBoolExp>;
};


export type Query_RootSystemHealthAggregateArgs = {
  distinctOn?: InputMaybe<Array<SystemHealthSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemHealthOrderBy>>;
  where?: InputMaybe<SystemHealthBoolExp>;
};


export type Query_RootSystemHealthByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootTeamCapacityByPositionArgs = {
  distinctOn?: InputMaybe<Array<TeamCapacityByPositionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamCapacityByPositionOrderBy>>;
  where?: InputMaybe<TeamCapacityByPositionBoolExp>;
};


export type Query_RootTeamCapacityByPositionAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamCapacityByPositionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamCapacityByPositionOrderBy>>;
  where?: InputMaybe<TeamCapacityByPositionBoolExp>;
};


export type Query_RootTimeEntriesArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


export type Query_RootTimeEntriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


export type Query_RootTimeEntryArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootUserByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootUserEmailTemplateFavoritesArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


export type Query_RootUserEmailTemplateFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


export type Query_RootUserEmailTemplateFavoritesByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootUserInvitationByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootUserInvitationsArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


export type Query_RootUserInvitationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


export type Query_RootUserRoleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootUserRolesArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


export type Query_RootUserRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


export type Query_RootUserSessionsArgs = {
  distinctOn?: InputMaybe<Array<UserSessionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSessionsOrderBy>>;
  where?: InputMaybe<UserSessionsBoolExp>;
};


export type Query_RootUserSessionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSessionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSessionsOrderBy>>;
  where?: InputMaybe<UserSessionsBoolExp>;
};


export type Query_RootUserSessionsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Query_RootUserSkillArgs = {
  distinctOn?: InputMaybe<Array<UserSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSkillOrderBy>>;
  where?: InputMaybe<UserSkillBoolExp>;
};


export type Query_RootUserSkillAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSkillOrderBy>>;
  where?: InputMaybe<UserSkillBoolExp>;
};


export type Query_RootUsersArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


export type Query_RootUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


export type Query_RootUsersRoleBackupsArgs = {
  distinctOn?: InputMaybe<Array<UsersRoleBackupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersRoleBackupOrderBy>>;
  where?: InputMaybe<UsersRoleBackupBoolExp>;
};


export type Query_RootUsersRoleBackupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UsersRoleBackupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersRoleBackupOrderBy>>;
  where?: InputMaybe<UsersRoleBackupBoolExp>;
};


export type Query_RootWorkScheduleArgs = {
  distinctOn?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WorkScheduleOrderBy>>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};


export type Query_RootWorkScheduleAggregateArgs = {
  distinctOn?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WorkScheduleOrderBy>>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};


export type Query_RootWorkScheduleByIdArgs = {
  id: Scalars['uuid']['input'];
};

/** columns and relationships of "resources" */
export type Resources = {
  __typename?: 'resources';
  /** An array relationship */
  availablePermissions: Array<Permissions>;
  /** An aggregate relationship */
  availablePermissionsAggregate: PermissionsAggregate;
  createdAt: Scalars['timestamptz']['output'];
  description?: Maybe<Scalars['String']['output']>;
  displayName: Scalars['String']['output'];
  id: Scalars['uuid']['output'];
  name: Scalars['String']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};


/** columns and relationships of "resources" */
export type ResourcesAvailablePermissionsArgs = {
  distinctOn?: InputMaybe<Array<PermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionsOrderBy>>;
  where?: InputMaybe<PermissionsBoolExp>;
};


/** columns and relationships of "resources" */
export type ResourcesAvailablePermissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionsOrderBy>>;
  where?: InputMaybe<PermissionsBoolExp>;
};

/** aggregated selection of "resources" */
export type ResourcesAggregate = {
  __typename?: 'resourcesAggregate';
  aggregate?: Maybe<ResourcesAggregateFields>;
  nodes: Array<Resources>;
};

/** aggregate fields of "resources" */
export type ResourcesAggregateFields = {
  __typename?: 'resourcesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<ResourcesMaxFields>;
  min?: Maybe<ResourcesMinFields>;
};


/** aggregate fields of "resources" */
export type ResourcesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<ResourcesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "resources". All fields are combined with a logical 'AND'. */
export type ResourcesBoolExp = {
  _and?: InputMaybe<Array<ResourcesBoolExp>>;
  _not?: InputMaybe<ResourcesBoolExp>;
  _or?: InputMaybe<Array<ResourcesBoolExp>>;
  availablePermissions?: InputMaybe<PermissionsBoolExp>;
  availablePermissionsAggregate?: InputMaybe<PermissionsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  displayName?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "resources" */
export type ResourcesConstraint =
  /** unique or primary key constraint on columns "name" */
  | 'resources_name_key'
  /** unique or primary key constraint on columns "id" */
  | 'resources_pkey'
  | '%future added value';

/** input type for inserting data into table "resources" */
export type ResourcesInsertInput = {
  availablePermissions?: InputMaybe<PermissionsArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ResourcesMaxFields = {
  __typename?: 'resourcesMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type ResourcesMinFields = {
  __typename?: 'resourcesMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "resources" */
export type ResourcesMutationResponse = {
  __typename?: 'resourcesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Resources>;
};

/** input type for inserting object relation for remote table "resources" */
export type ResourcesObjRelInsertInput = {
  data: ResourcesInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<ResourcesOnConflict>;
};

/** on_conflict condition type for table "resources" */
export type ResourcesOnConflict = {
  constraint: ResourcesConstraint;
  updateColumns?: Array<ResourcesUpdateColumn>;
  where?: InputMaybe<ResourcesBoolExp>;
};

/** Ordering options when selecting data from "resources". */
export type ResourcesOrderBy = {
  availablePermissionsAggregate?: InputMaybe<PermissionsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  displayName?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: resources */
export type ResourcesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "resources" */
export type ResourcesSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'displayName'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "resources" */
export type ResourcesSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "resources" */
export type ResourcesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: ResourcesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type ResourcesStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "resources" */
export type ResourcesUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'displayName'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type ResourcesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ResourcesSetInput>;
  /** filter the rows which have to be updated */
  where: ResourcesBoolExp;
};

/** columns and relationships of "role_permissions" */
export type RolePermissions = {
  __typename?: 'rolePermissions';
  conditions?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  /** An object relationship */
  grantedPermission: Permissions;
  /** An object relationship */
  grantedToRole: Roles;
  id: Scalars['uuid']['output'];
  permissionId: Scalars['uuid']['output'];
  roleId: Scalars['uuid']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};


/** columns and relationships of "role_permissions" */
export type RolePermissionsConditionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "role_permissions" */
export type RolePermissionsAggregate = {
  __typename?: 'rolePermissionsAggregate';
  aggregate?: Maybe<RolePermissionsAggregateFields>;
  nodes: Array<RolePermissions>;
};

export type RolePermissionsAggregateBoolExp = {
  count?: InputMaybe<RolePermissionsAggregateBoolExpCount>;
};

export type RolePermissionsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<RolePermissionsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "role_permissions" */
export type RolePermissionsAggregateFields = {
  __typename?: 'rolePermissionsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<RolePermissionsMaxFields>;
  min?: Maybe<RolePermissionsMinFields>;
};


/** aggregate fields of "role_permissions" */
export type RolePermissionsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "role_permissions" */
export type RolePermissionsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<RolePermissionsMaxOrderBy>;
  min?: InputMaybe<RolePermissionsMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type RolePermissionsAppendInput = {
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "role_permissions" */
export type RolePermissionsArrRelInsertInput = {
  data: Array<RolePermissionsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<RolePermissionsOnConflict>;
};

/** Boolean expression to filter rows from the table "role_permissions". All fields are combined with a logical 'AND'. */
export type RolePermissionsBoolExp = {
  _and?: InputMaybe<Array<RolePermissionsBoolExp>>;
  _not?: InputMaybe<RolePermissionsBoolExp>;
  _or?: InputMaybe<Array<RolePermissionsBoolExp>>;
  conditions?: InputMaybe<JsonbComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  grantedPermission?: InputMaybe<PermissionsBoolExp>;
  grantedToRole?: InputMaybe<RolesBoolExp>;
  id?: InputMaybe<UuidComparisonExp>;
  permissionId?: InputMaybe<UuidComparisonExp>;
  roleId?: InputMaybe<UuidComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "role_permissions" */
export type RolePermissionsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'role_permissions_pkey'
  /** unique or primary key constraint on columns "role_id", "permission_id" */
  | 'role_permissions_role_id_permission_id_key'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type RolePermissionsDeleteAtPathInput = {
  conditions?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type RolePermissionsDeleteElemInput = {
  conditions?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type RolePermissionsDeleteKeyInput = {
  conditions?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "role_permissions" */
export type RolePermissionsInsertInput = {
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  grantedPermission?: InputMaybe<PermissionsObjRelInsertInput>;
  grantedToRole?: InputMaybe<RolesObjRelInsertInput>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  permissionId?: InputMaybe<Scalars['uuid']['input']>;
  roleId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type RolePermissionsMaxFields = {
  __typename?: 'rolePermissionsMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  permissionId?: Maybe<Scalars['uuid']['output']>;
  roleId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "role_permissions" */
export type RolePermissionsMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissionId?: InputMaybe<OrderBy>;
  roleId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type RolePermissionsMinFields = {
  __typename?: 'rolePermissionsMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  permissionId?: Maybe<Scalars['uuid']['output']>;
  roleId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "role_permissions" */
export type RolePermissionsMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  permissionId?: InputMaybe<OrderBy>;
  roleId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "role_permissions" */
export type RolePermissionsMutationResponse = {
  __typename?: 'rolePermissionsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<RolePermissions>;
};

/** on_conflict condition type for table "role_permissions" */
export type RolePermissionsOnConflict = {
  constraint: RolePermissionsConstraint;
  updateColumns?: Array<RolePermissionsUpdateColumn>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};

/** Ordering options when selecting data from "role_permissions". */
export type RolePermissionsOrderBy = {
  conditions?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  grantedPermission?: InputMaybe<PermissionsOrderBy>;
  grantedToRole?: InputMaybe<RolesOrderBy>;
  id?: InputMaybe<OrderBy>;
  permissionId?: InputMaybe<OrderBy>;
  roleId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: role_permissions */
export type RolePermissionsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type RolePermissionsPrependInput = {
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "role_permissions" */
export type RolePermissionsSelectColumn =
  /** column name */
  | 'conditions'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'permissionId'
  /** column name */
  | 'roleId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "role_permissions" */
export type RolePermissionsSetInput = {
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  permissionId?: InputMaybe<Scalars['uuid']['input']>;
  roleId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "rolePermissions" */
export type RolePermissionsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: RolePermissionsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type RolePermissionsStreamCursorValueInput = {
  conditions?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  permissionId?: InputMaybe<Scalars['uuid']['input']>;
  roleId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "role_permissions" */
export type RolePermissionsUpdateColumn =
  /** column name */
  | 'conditions'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'permissionId'
  /** column name */
  | 'roleId'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type RolePermissionsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<RolePermissionsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<RolePermissionsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<RolePermissionsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<RolePermissionsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<RolePermissionsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<RolePermissionsSetInput>;
  /** filter the rows which have to be updated */
  where: RolePermissionsBoolExp;
};

/** columns and relationships of "roles" */
export type Roles = {
  __typename?: 'roles';
  /** An array relationship */
  assignedPermissions: Array<RolePermissions>;
  /** An aggregate relationship */
  assignedPermissionsAggregate: RolePermissionsAggregate;
  /** An array relationship */
  assignedToUsers: Array<UserRoles>;
  /** An aggregate relationship */
  assignedToUsersAggregate: UserRolesAggregate;
  createdAt: Scalars['timestamptz']['output'];
  description?: Maybe<Scalars['String']['output']>;
  displayName: Scalars['String']['output'];
  id: Scalars['uuid']['output'];
  isSystemRole: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  priority: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};


/** columns and relationships of "roles" */
export type RolesAssignedPermissionsArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


/** columns and relationships of "roles" */
export type RolesAssignedPermissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


/** columns and relationships of "roles" */
export type RolesAssignedToUsersArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


/** columns and relationships of "roles" */
export type RolesAssignedToUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};

/** aggregated selection of "roles" */
export type RolesAggregate = {
  __typename?: 'rolesAggregate';
  aggregate?: Maybe<RolesAggregateFields>;
  nodes: Array<Roles>;
};

/** aggregate fields of "roles" */
export type RolesAggregateFields = {
  __typename?: 'rolesAggregateFields';
  avg?: Maybe<RolesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<RolesMaxFields>;
  min?: Maybe<RolesMinFields>;
  stddev?: Maybe<RolesStddevFields>;
  stddevPop?: Maybe<RolesStddevPopFields>;
  stddevSamp?: Maybe<RolesStddevSampFields>;
  sum?: Maybe<RolesSumFields>;
  varPop?: Maybe<RolesVarPopFields>;
  varSamp?: Maybe<RolesVarSampFields>;
  variance?: Maybe<RolesVarianceFields>;
};


/** aggregate fields of "roles" */
export type RolesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<RolesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type RolesAvgFields = {
  __typename?: 'rolesAvgFields';
  priority?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "roles". All fields are combined with a logical 'AND'. */
export type RolesBoolExp = {
  _and?: InputMaybe<Array<RolesBoolExp>>;
  _not?: InputMaybe<RolesBoolExp>;
  _or?: InputMaybe<Array<RolesBoolExp>>;
  assignedPermissions?: InputMaybe<RolePermissionsBoolExp>;
  assignedPermissionsAggregate?: InputMaybe<RolePermissionsAggregateBoolExp>;
  assignedToUsers?: InputMaybe<UserRolesBoolExp>;
  assignedToUsersAggregate?: InputMaybe<UserRolesAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  displayName?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  isSystemRole?: InputMaybe<BooleanComparisonExp>;
  name?: InputMaybe<StringComparisonExp>;
  priority?: InputMaybe<IntComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
};

/** unique or primary key constraints on table "roles" */
export type RolesConstraint =
  /** unique or primary key constraint on columns "name" */
  | 'roles_name_key'
  /** unique or primary key constraint on columns "id" */
  | 'roles_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "roles" */
export type RolesIncInput = {
  priority?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "roles" */
export type RolesInsertInput = {
  assignedPermissions?: InputMaybe<RolePermissionsArrRelInsertInput>;
  assignedToUsers?: InputMaybe<UserRolesArrRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isSystemRole?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type RolesMaxFields = {
  __typename?: 'rolesMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type RolesMinFields = {
  __typename?: 'rolesMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  priority?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "roles" */
export type RolesMutationResponse = {
  __typename?: 'rolesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Roles>;
};

/** input type for inserting object relation for remote table "roles" */
export type RolesObjRelInsertInput = {
  data: RolesInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<RolesOnConflict>;
};

/** on_conflict condition type for table "roles" */
export type RolesOnConflict = {
  constraint: RolesConstraint;
  updateColumns?: Array<RolesUpdateColumn>;
  where?: InputMaybe<RolesBoolExp>;
};

/** Ordering options when selecting data from "roles". */
export type RolesOrderBy = {
  assignedPermissionsAggregate?: InputMaybe<RolePermissionsAggregateOrderBy>;
  assignedToUsersAggregate?: InputMaybe<UserRolesAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  displayName?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  isSystemRole?: InputMaybe<OrderBy>;
  name?: InputMaybe<OrderBy>;
  priority?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: roles */
export type RolesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "roles" */
export type RolesSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'displayName'
  /** column name */
  | 'id'
  /** column name */
  | 'isSystemRole'
  /** column name */
  | 'name'
  /** column name */
  | 'priority'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "roles" */
export type RolesSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isSystemRole?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type RolesStddevFields = {
  __typename?: 'rolesStddevFields';
  priority?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevPop on columns */
export type RolesStddevPopFields = {
  __typename?: 'rolesStddevPopFields';
  priority?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddevSamp on columns */
export type RolesStddevSampFields = {
  __typename?: 'rolesStddevSampFields';
  priority?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "roles" */
export type RolesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: RolesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type RolesStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  isSystemRole?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type RolesSumFields = {
  __typename?: 'rolesSumFields';
  priority?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "roles" */
export type RolesUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'displayName'
  /** column name */
  | 'id'
  /** column name */
  | 'isSystemRole'
  /** column name */
  | 'name'
  /** column name */
  | 'priority'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type RolesUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<RolesIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<RolesSetInput>;
  /** filter the rows which have to be updated */
  where: RolesBoolExp;
};

/** aggregate varPop on columns */
export type RolesVarPopFields = {
  __typename?: 'rolesVarPopFields';
  priority?: Maybe<Scalars['Float']['output']>;
};

/** aggregate varSamp on columns */
export type RolesVarSampFields = {
  __typename?: 'rolesVarSampFields';
  priority?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type RolesVarianceFields = {
  __typename?: 'rolesVarianceFields';
  priority?: Maybe<Scalars['Float']['output']>;
};

export type SecuritySettingsAggregateBoolExpBool_And = {
  arguments: SecuritySettingsSelectColumnSecuritySettingsAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SecuritySettingsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type SecuritySettingsAggregateBoolExpBool_Or = {
  arguments: SecuritySettingsSelectColumnSecuritySettingsAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SecuritySettingsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type SecuritySettingsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SecuritySettingsBoolExp>;
  predicate: IntComparisonExp;
};

/** columns and relationships of "audit.slow_queries" */
export type SlowQueries = {
  __typename?: 'slowQueries';
  applicationName?: Maybe<Scalars['String']['output']>;
  clientAddr?: Maybe<Scalars['inet']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['uuid']['output'];
  query: Scalars['String']['output'];
  queryDuration: Scalars['interval']['output'];
  queryStart: Scalars['timestamptz']['output'];
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregated selection of "audit.slow_queries" */
export type SlowQueriesAggregate = {
  __typename?: 'slowQueriesAggregate';
  aggregate?: Maybe<SlowQueriesAggregateFields>;
  nodes: Array<SlowQueries>;
};

/** aggregate fields of "audit.slow_queries" */
export type SlowQueriesAggregateFields = {
  __typename?: 'slowQueriesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<SlowQueriesMaxFields>;
  min?: Maybe<SlowQueriesMinFields>;
};


/** aggregate fields of "audit.slow_queries" */
export type SlowQueriesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<SlowQueriesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "audit.slow_queries". All fields are combined with a logical 'AND'. */
export type SlowQueriesBoolExp = {
  _and?: InputMaybe<Array<SlowQueriesBoolExp>>;
  _not?: InputMaybe<SlowQueriesBoolExp>;
  _or?: InputMaybe<Array<SlowQueriesBoolExp>>;
  applicationName?: InputMaybe<StringComparisonExp>;
  clientAddr?: InputMaybe<InetComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  query?: InputMaybe<StringComparisonExp>;
  queryDuration?: InputMaybe<IntervalComparisonExp>;
  queryStart?: InputMaybe<TimestamptzComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "audit.slow_queries" */
export type SlowQueriesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'slow_queries_pkey'
  | '%future added value';

/** input type for inserting data into table "audit.slow_queries" */
export type SlowQueriesInsertInput = {
  applicationName?: InputMaybe<Scalars['String']['input']>;
  clientAddr?: InputMaybe<Scalars['inet']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  queryDuration?: InputMaybe<Scalars['interval']['input']>;
  queryStart?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type SlowQueriesMaxFields = {
  __typename?: 'slowQueriesMaxFields';
  applicationName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  query?: Maybe<Scalars['String']['output']>;
  queryStart?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregate min on columns */
export type SlowQueriesMinFields = {
  __typename?: 'slowQueriesMinFields';
  applicationName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  query?: Maybe<Scalars['String']['output']>;
  queryStart?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** response of any mutation on the table "audit.slow_queries" */
export type SlowQueriesMutationResponse = {
  __typename?: 'slowQueriesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SlowQueries>;
};

/** on_conflict condition type for table "audit.slow_queries" */
export type SlowQueriesOnConflict = {
  constraint: SlowQueriesConstraint;
  updateColumns?: Array<SlowQueriesUpdateColumn>;
  where?: InputMaybe<SlowQueriesBoolExp>;
};

/** Ordering options when selecting data from "audit.slow_queries". */
export type SlowQueriesOrderBy = {
  applicationName?: InputMaybe<OrderBy>;
  clientAddr?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  query?: InputMaybe<OrderBy>;
  queryDuration?: InputMaybe<OrderBy>;
  queryStart?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: audit.slow_queries */
export type SlowQueriesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "audit.slow_queries" */
export type SlowQueriesSelectColumn =
  /** column name */
  | 'applicationName'
  /** column name */
  | 'clientAddr'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'query'
  /** column name */
  | 'queryDuration'
  /** column name */
  | 'queryStart'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "audit.slow_queries" */
export type SlowQueriesSetInput = {
  applicationName?: InputMaybe<Scalars['String']['input']>;
  clientAddr?: InputMaybe<Scalars['inet']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  queryDuration?: InputMaybe<Scalars['interval']['input']>;
  queryStart?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "slowQueries" */
export type SlowQueriesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: SlowQueriesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type SlowQueriesStreamCursorValueInput = {
  applicationName?: InputMaybe<Scalars['String']['input']>;
  clientAddr?: InputMaybe<Scalars['inet']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  queryDuration?: InputMaybe<Scalars['interval']['input']>;
  queryStart?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "audit.slow_queries" */
export type SlowQueriesUpdateColumn =
  /** column name */
  | 'applicationName'
  /** column name */
  | 'clientAddr'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'query'
  /** column name */
  | 'queryDuration'
  /** column name */
  | 'queryStart'
  /** column name */
  | 'userId'
  | '%future added value';

export type SlowQueriesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SlowQueriesSetInput>;
  /** filter the rows which have to be updated */
  where: SlowQueriesBoolExp;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** execute function "activate_payroll_versions" which returns "payroll_activation_results" */
  activatePayrollVersions: Array<PayrollActivationResults>;
  /** execute function "activate_payroll_versions" and query aggregates on result of table type "payroll_activation_results" */
  activatePayrollVersionsAggregate: PayrollActivationResultsAggregate;
  /** fetch data from the table: "adjustment_rules" using primary key columns */
  adjustmentRuleById?: Maybe<AdjustmentRules>;
  /** An array relationship */
  adjustmentRules: Array<AdjustmentRules>;
  /** An aggregate relationship */
  adjustmentRulesAggregate: AdjustmentRulesAggregate;
  /** fetch data from the table in a streaming manner: "adjustment_rules" */
  adjustmentRulesStream: Array<AdjustmentRules>;
  /** fetch data from the table: "app_settings" using primary key columns */
  appSettingById?: Maybe<AppSettings>;
  /** fetch data from the table: "app_settings" */
  appSettings: Array<AppSettings>;
  /** fetch aggregated fields from the table: "app_settings" */
  appSettingsAggregate: AppSettingsAggregate;
  /** fetch data from the table in a streaming manner: "app_settings" */
  appSettingsStream: Array<AppSettings>;
  /** fetch data from the table: "audit.audit_log" using primary key columns */
  auditLogById?: Maybe<AuditLogs>;
  /** fetch data from the table: "audit.audit_log" */
  auditLogs: Array<AuditLogs>;
  /** fetch aggregated fields from the table: "audit.audit_log" */
  auditLogsAggregate: AuditLogsAggregate;
  /** fetch data from the table in a streaming manner: "audit.audit_log" */
  auditLogsStream: Array<AuditLogs>;
  /** fetch data from the table: "audit.user_access_summary" */
  auditUserAccessSummary: Array<AuditUserAccessSummary>;
  /** fetch aggregated fields from the table: "audit.user_access_summary" */
  auditUserAccessSummaryAggregate: AuditUserAccessSummaryAggregate;
  /** fetch data from the table in a streaming manner: "audit.user_access_summary" */
  auditUserAccessSummaryStream: Array<AuditUserAccessSummary>;
  /** fetch data from the table: "audit.auth_events" using primary key columns */
  authEventById?: Maybe<AuthEvents>;
  /** fetch data from the table: "audit.auth_events" */
  authEvents: Array<AuthEvents>;
  /** fetch aggregated fields from the table: "audit.auth_events" */
  authEventsAggregate: AuthEventsAggregate;
  /** fetch data from the table in a streaming manner: "audit.auth_events" */
  authEventsStream: Array<AuthEvents>;
  /** fetch data from the table: "billing_event_log" using primary key columns */
  billingEventLogById?: Maybe<BillingEventLogs>;
  /** An array relationship */
  billingEventLogs: Array<BillingEventLogs>;
  /** An aggregate relationship */
  billingEventLogsAggregate: BillingEventLogsAggregate;
  /** fetch data from the table in a streaming manner: "billing_event_log" */
  billingEventLogsStream: Array<BillingEventLogs>;
  /** fetch data from the table: "billing_invoice" */
  billingInvoice: Array<BillingInvoice>;
  /** fetch aggregated fields from the table: "billing_invoice" */
  billingInvoiceAggregate: BillingInvoiceAggregate;
  /** fetch data from the table: "billing_invoice" using primary key columns */
  billingInvoiceById?: Maybe<BillingInvoice>;
  /** fetch data from the table: "billing_invoice_item" using primary key columns */
  billingInvoiceItemById?: Maybe<BillingInvoiceItem>;
  /** An array relationship */
  billingInvoiceItems: Array<BillingInvoiceItem>;
  /** An aggregate relationship */
  billingInvoiceItemsAggregate: BillingInvoiceItemAggregate;
  /** fetch data from the table in a streaming manner: "billing_invoice_item" */
  billingInvoiceItemsStream: Array<BillingInvoiceItem>;
  /** fetch data from the table in a streaming manner: "billing_invoice" */
  billingInvoiceStream: Array<BillingInvoice>;
  /** fetch data from the table: "billing_items" using primary key columns */
  billingItemById?: Maybe<BillingItems>;
  /** An array relationship */
  billingItems: Array<BillingItems>;
  /** An aggregate relationship */
  billingItemsAggregate: BillingItemsAggregate;
  /** fetch data from the table in a streaming manner: "billing_items" */
  billingItemsStream: Array<BillingItems>;
  /** fetch data from the table: "billing_periods" using primary key columns */
  billingPeriod?: Maybe<BillingPeriods>;
  /** An array relationship */
  billingPeriods: Array<BillingPeriods>;
  /** An aggregate relationship */
  billingPeriodsAggregate: BillingPeriodsAggregate;
  /** fetch data from the table in a streaming manner: "billing_periods" */
  billingPeriodsStream: Array<BillingPeriods>;
  /** fetch data from the table: "billing_plan" using primary key columns */
  billingPlanById?: Maybe<BillingPlans>;
  /** fetch data from the table: "billing_plan" */
  billingPlans: Array<BillingPlans>;
  /** fetch aggregated fields from the table: "billing_plan" */
  billingPlansAggregate: BillingPlansAggregate;
  /** fetch data from the table in a streaming manner: "billing_plan" */
  billingPlansStream: Array<BillingPlans>;
  /** fetch data from the table: "client_billing_assignment" using primary key columns */
  clientBillingAssignmentById?: Maybe<ClientBillingAssignments>;
  /** An array relationship */
  clientBillingAssignments: Array<ClientBillingAssignments>;
  /** An aggregate relationship */
  clientBillingAssignmentsAggregate: ClientBillingAssignmentsAggregate;
  /** fetch data from the table in a streaming manner: "client_billing_assignment" */
  clientBillingAssignmentsStream: Array<ClientBillingAssignments>;
  /** fetch data from the table: "clients" using primary key columns */
  clientById?: Maybe<Clients>;
  /** fetch data from the table: "client_external_systems" using primary key columns */
  clientExternalSystemById?: Maybe<ClientExternalSystems>;
  /** An array relationship */
  clientExternalSystems: Array<ClientExternalSystems>;
  /** An aggregate relationship */
  clientExternalSystemsAggregate: ClientExternalSystemsAggregate;
  /** fetch data from the table in a streaming manner: "client_external_systems" */
  clientExternalSystemsStream: Array<ClientExternalSystems>;
  /** fetch data from the table: "client_services_with_rates" */
  clientServicesWithRates: Array<ClientServicesWithRates>;
  /** fetch aggregated fields from the table: "client_services_with_rates" */
  clientServicesWithRatesAggregate: ClientServicesWithRatesAggregate;
  /** fetch data from the table in a streaming manner: "client_services_with_rates" */
  clientServicesWithRatesStream: Array<ClientServicesWithRates>;
  /** fetch data from the table: "clients" */
  clients: Array<Clients>;
  /** fetch aggregated fields from the table: "clients" */
  clientsAggregate: ClientsAggregate;
  /** fetch data from the table in a streaming manner: "clients" */
  clientsStream: Array<Clients>;
  /** fetch data from the table: "consultant_capacity_overview" */
  consultantCapacityOverview: Array<ConsultantCapacityOverview>;
  /** fetch aggregated fields from the table: "consultant_capacity_overview" */
  consultantCapacityOverviewAggregate: ConsultantCapacityOverviewAggregate;
  /** fetch data from the table in a streaming manner: "consultant_capacity_overview" */
  consultantCapacityOverviewStream: Array<ConsultantCapacityOverview>;
  /** execute function "create_payroll_version" which returns "payroll_version_results" */
  createPayrollVersion: Array<PayrollVersionResults>;
  /** execute function "create_payroll_version" and query aggregates on result of table type "payroll_version_results" */
  createPayrollVersionAggregate: PayrollVersionResultsAggregate;
  /** execute function "create_payroll_version_simple" which returns "payroll_version_results" */
  createPayrollVersionSimple: Array<PayrollVersionResults>;
  /** execute function "create_payroll_version_simple" and query aggregates on result of table type "payroll_version_results" */
  createPayrollVersionSimpleAggregate: PayrollVersionResultsAggregate;
  /** fetch data from the table: "current_payrolls" */
  currentPayrolls: Array<CurrentPayrolls>;
  /** fetch aggregated fields from the table: "current_payrolls" */
  currentPayrollsAggregate: CurrentPayrollsAggregate;
  /** fetch data from the table in a streaming manner: "current_payrolls" */
  currentPayrollsStream: Array<CurrentPayrolls>;
  /** fetch data from the table: "audit.data_access_log" using primary key columns */
  dataAccessLogById?: Maybe<DataAccessLogs>;
  /** fetch data from the table: "audit.data_access_log" */
  dataAccessLogs: Array<DataAccessLogs>;
  /** fetch aggregated fields from the table: "audit.data_access_log" */
  dataAccessLogsAggregate: DataAccessLogsAggregate;
  /** fetch data from the table in a streaming manner: "audit.data_access_log" */
  dataAccessLogsStream: Array<DataAccessLogs>;
  /** An array relationship */
  dataBackups: Array<DataBackups>;
  /** An aggregate relationship */
  dataBackupsAggregate: DataBackupsAggregate;
  /** fetch data from the table: "data_backups" using primary key columns */
  dataBackupsByPk?: Maybe<DataBackups>;
  /** fetch data from the table in a streaming manner: "data_backups" */
  dataBackupsStream: Array<DataBackups>;
  /** An array relationship */
  emailDrafts: Array<EmailDrafts>;
  /** An aggregate relationship */
  emailDraftsAggregate: EmailDraftsAggregate;
  /** fetch data from the table: "email_drafts" using primary key columns */
  emailDraftsByPk?: Maybe<EmailDrafts>;
  /** fetch data from the table in a streaming manner: "email_drafts" */
  emailDraftsStream: Array<EmailDrafts>;
  /** An array relationship */
  emailSendLogs: Array<EmailSendLogs>;
  /** An aggregate relationship */
  emailSendLogsAggregate: EmailSendLogsAggregate;
  /** fetch data from the table: "email_send_logs" using primary key columns */
  emailSendLogsByPk?: Maybe<EmailSendLogs>;
  /** fetch data from the table in a streaming manner: "email_send_logs" */
  emailSendLogsStream: Array<EmailSendLogs>;
  /** An array relationship */
  emailTemplates: Array<EmailTemplates>;
  /** An aggregate relationship */
  emailTemplatesAggregate: EmailTemplatesAggregate;
  /** fetch data from the table: "email_templates" using primary key columns */
  emailTemplatesByPk?: Maybe<EmailTemplates>;
  /** fetch data from the table in a streaming manner: "email_templates" */
  emailTemplatesStream: Array<EmailTemplates>;
  /** fetch data from the table: "external_systems" using primary key columns */
  externalSystemById?: Maybe<ExternalSystems>;
  /** fetch data from the table: "external_systems" */
  externalSystems: Array<ExternalSystems>;
  /** fetch aggregated fields from the table: "external_systems" */
  externalSystemsAggregate: ExternalSystemsAggregate;
  /** fetch data from the table in a streaming manner: "external_systems" */
  externalSystemsStream: Array<ExternalSystems>;
  /** fetch data from the table: "feature_flags" using primary key columns */
  featureFlagById?: Maybe<FeatureFlags>;
  /** fetch data from the table: "feature_flags" */
  featureFlags: Array<FeatureFlags>;
  /** fetch aggregated fields from the table: "feature_flags" */
  featureFlagsAggregate: FeatureFlagsAggregate;
  /** fetch data from the table in a streaming manner: "feature_flags" */
  featureFlagsStream: Array<FeatureFlags>;
  /** fetch data from the table: "files" using primary key columns */
  fileById?: Maybe<Files>;
  /** fetch data from the table: "files" */
  files: Array<Files>;
  /** fetch aggregated fields from the table: "files" */
  filesAggregate: FilesAggregate;
  /** fetch data from the table in a streaming manner: "files" */
  filesStream: Array<Files>;
  /** execute function "generate_payroll_dates" which returns "payroll_dates" */
  generatePayrollDates: Array<PayrollDates>;
  /** execute function "generate_payroll_dates" and query aggregates on result of table type "payroll_dates" */
  generatePayrollDatesAggregate: PayrollDatesAggregate;
  /** execute function "get_latest_payroll_version" which returns "latest_payroll_version_results" */
  getLatestPayrollVersion: Array<LatestPayrollVersionResults>;
  /** execute function "get_latest_payroll_version" and query aggregates on result of table type "latest_payroll_version_results" */
  getLatestPayrollVersionAggregate: LatestPayrollVersionResultsAggregate;
  /** execute function "get_payroll_version_history" which returns "payroll_version_history_results" */
  getPayrollVersionHistory: Array<PayrollVersionHistoryResults>;
  /** execute function "get_payroll_version_history" and query aggregates on result of table type "payroll_version_history_results" */
  getPayrollVersionHistoryAggregate: PayrollVersionHistoryResultsAggregate;
  /** fetch data from the table: "holidays" using primary key columns */
  holidayById?: Maybe<Holidays>;
  /** fetch data from the table: "holidays" */
  holidays: Array<Holidays>;
  /** fetch aggregated fields from the table: "holidays" */
  holidaysAggregate: HolidaysAggregate;
  /** fetch data from the table in a streaming manner: "holidays" */
  holidaysStream: Array<Holidays>;
  /** fetch data from the table: "latest_payroll_version_results" using primary key columns */
  latestPayrollVersionResultById?: Maybe<LatestPayrollVersionResults>;
  /** fetch data from the table: "latest_payroll_version_results" */
  latestPayrollVersionResults: Array<LatestPayrollVersionResults>;
  /** fetch aggregated fields from the table: "latest_payroll_version_results" */
  latestPayrollVersionResultsAggregate: LatestPayrollVersionResultsAggregate;
  /** fetch data from the table in a streaming manner: "latest_payroll_version_results" */
  latestPayrollVersionResultsStream: Array<LatestPayrollVersionResults>;
  /** fetch data from the table: "leave" */
  leave: Array<Leave>;
  /** fetch aggregated fields from the table: "leave" */
  leaveAggregate: LeaveAggregate;
  /** fetch data from the table: "leave" using primary key columns */
  leaveById?: Maybe<Leave>;
  /** fetch data from the table in a streaming manner: "leave" */
  leaveStream: Array<Leave>;
  /** fetch data from the table: "notes" using primary key columns */
  noteById?: Maybe<Notes>;
  /** fetch data from the table: "notes" */
  notes: Array<Notes>;
  /** fetch aggregated fields from the table: "notes" */
  notesAggregate: NotesAggregate;
  /** fetch data from the table in a streaming manner: "notes" */
  notesStream: Array<Notes>;
  /** fetch data from the table: "payroll_activation_results" using primary key columns */
  payrollActivationResultById?: Maybe<PayrollActivationResults>;
  /** fetch data from the table: "payroll_activation_results" */
  payrollActivationResults: Array<PayrollActivationResults>;
  /** fetch aggregated fields from the table: "payroll_activation_results" */
  payrollActivationResultsAggregate: PayrollActivationResultsAggregate;
  /** fetch data from the table in a streaming manner: "payroll_activation_results" */
  payrollActivationResultsStream: Array<PayrollActivationResults>;
  /** fetch data from the table: "payroll_assignment_audit" using primary key columns */
  payrollAssignmentAuditById?: Maybe<PayrollAssignmentAudits>;
  /** An array relationship */
  payrollAssignmentAudits: Array<PayrollAssignmentAudits>;
  /** An aggregate relationship */
  payrollAssignmentAuditsAggregate: PayrollAssignmentAuditsAggregate;
  /** fetch data from the table in a streaming manner: "payroll_assignment_audit" */
  payrollAssignmentAuditsStream: Array<PayrollAssignmentAudits>;
  /** fetch data from the table: "payroll_assignments" using primary key columns */
  payrollAssignmentById?: Maybe<PayrollAssignments>;
  /** fetch data from the table: "payroll_assignments" */
  payrollAssignments: Array<PayrollAssignments>;
  /** fetch aggregated fields from the table: "payroll_assignments" */
  payrollAssignmentsAggregate: PayrollAssignmentsAggregate;
  /** fetch data from the table in a streaming manner: "payroll_assignments" */
  payrollAssignmentsStream: Array<PayrollAssignments>;
  /** fetch data from the table: "payrolls" using primary key columns */
  payrollById?: Maybe<Payrolls>;
  /** fetch data from the table: "payroll_cycles" using primary key columns */
  payrollCycleById?: Maybe<PayrollCycles>;
  /** fetch data from the table: "payroll_cycles" */
  payrollCycles: Array<PayrollCycles>;
  /** fetch aggregated fields from the table: "payroll_cycles" */
  payrollCyclesAggregate: PayrollCyclesAggregate;
  /** fetch data from the table in a streaming manner: "payroll_cycles" */
  payrollCyclesStream: Array<PayrollCycles>;
  /** fetch data from the table: "payroll_dashboard_stats" */
  payrollDashboardStats: Array<PayrollDashboardStats>;
  /** fetch aggregated fields from the table: "payroll_dashboard_stats" */
  payrollDashboardStatsAggregate: PayrollDashboardStatsAggregate;
  /** fetch data from the table in a streaming manner: "payroll_dashboard_stats" */
  payrollDashboardStatsStream: Array<PayrollDashboardStats>;
  /** fetch data from the table: "payroll_dates" using primary key columns */
  payrollDateById?: Maybe<PayrollDates>;
  /** fetch data from the table: "payroll_date_types" using primary key columns */
  payrollDateTypeById?: Maybe<PayrollDateTypes>;
  /** fetch data from the table: "payroll_date_types" */
  payrollDateTypes: Array<PayrollDateTypes>;
  /** fetch aggregated fields from the table: "payroll_date_types" */
  payrollDateTypesAggregate: PayrollDateTypesAggregate;
  /** fetch data from the table in a streaming manner: "payroll_date_types" */
  payrollDateTypesStream: Array<PayrollDateTypes>;
  /** An array relationship */
  payrollDates: Array<PayrollDates>;
  /** An aggregate relationship */
  payrollDatesAggregate: PayrollDatesAggregate;
  /** fetch data from the table in a streaming manner: "payroll_dates" */
  payrollDatesStream: Array<PayrollDates>;
  /** fetch data from the table: "payroll_profitability" */
  payrollProfitability: Array<PayrollProfitability>;
  /** fetch aggregated fields from the table: "payroll_profitability" */
  payrollProfitabilityAggregate: PayrollProfitabilityAggregate;
  /** fetch data from the table in a streaming manner: "payroll_profitability" */
  payrollProfitabilityStream: Array<PayrollProfitability>;
  /** fetch data from the table: "payroll_required_skills" */
  payrollRequiredSkill: Array<PayrollRequiredSkill>;
  /** fetch aggregated fields from the table: "payroll_required_skills" */
  payrollRequiredSkillAggregate: PayrollRequiredSkillAggregate;
  /** fetch data from the table in a streaming manner: "payroll_required_skills" */
  payrollRequiredSkillStream: Array<PayrollRequiredSkill>;
  /** fetch data from the table: "payroll_triggers_status" */
  payrollTriggersStatus: Array<PayrollTriggersStatus>;
  /** fetch aggregated fields from the table: "payroll_triggers_status" */
  payrollTriggersStatusAggregate: PayrollTriggersStatusAggregate;
  /** fetch data from the table in a streaming manner: "payroll_triggers_status" */
  payrollTriggersStatusStream: Array<PayrollTriggersStatus>;
  /** fetch data from the table: "payroll_version_history_results" using primary key columns */
  payrollVersionHistoryResultById?: Maybe<PayrollVersionHistoryResults>;
  /** fetch data from the table: "payroll_version_history_results" */
  payrollVersionHistoryResults: Array<PayrollVersionHistoryResults>;
  /** fetch aggregated fields from the table: "payroll_version_history_results" */
  payrollVersionHistoryResultsAggregate: PayrollVersionHistoryResultsAggregate;
  /** fetch data from the table in a streaming manner: "payroll_version_history_results" */
  payrollVersionHistoryResultsStream: Array<PayrollVersionHistoryResults>;
  /** fetch data from the table: "payroll_version_results" using primary key columns */
  payrollVersionResultById?: Maybe<PayrollVersionResults>;
  /** fetch data from the table: "payroll_version_results" */
  payrollVersionResults: Array<PayrollVersionResults>;
  /** fetch aggregated fields from the table: "payroll_version_results" */
  payrollVersionResultsAggregate: PayrollVersionResultsAggregate;
  /** fetch data from the table in a streaming manner: "payroll_version_results" */
  payrollVersionResultsStream: Array<PayrollVersionResults>;
  /** An array relationship */
  payrolls: Array<Payrolls>;
  /** An aggregate relationship */
  payrollsAggregate: PayrollsAggregate;
  /** fetch data from the table in a streaming manner: "payrolls" */
  payrollsStream: Array<Payrolls>;
  /** fetch data from the table: "permission_audit_log" using primary key columns */
  permissionAuditLogById?: Maybe<PermissionAuditLogs>;
  /** fetch data from the table: "permission_audit_log" */
  permissionAuditLogs: Array<PermissionAuditLogs>;
  /** fetch aggregated fields from the table: "permission_audit_log" */
  permissionAuditLogsAggregate: PermissionAuditLogsAggregate;
  /** fetch data from the table in a streaming manner: "permission_audit_log" */
  permissionAuditLogsStream: Array<PermissionAuditLogs>;
  /** fetch data from the table: "permissions" using primary key columns */
  permissionById?: Maybe<Permissions>;
  /** fetch data from the table: "audit.permission_changes" using primary key columns */
  permissionChangeById?: Maybe<PermissionChanges>;
  /** fetch data from the table: "audit.permission_changes" */
  permissionChanges: Array<PermissionChanges>;
  /** fetch aggregated fields from the table: "audit.permission_changes" */
  permissionChangesAggregate: PermissionChangesAggregate;
  /** fetch data from the table in a streaming manner: "audit.permission_changes" */
  permissionChangesStream: Array<PermissionChanges>;
  /** fetch data from the table: "permission_overrides" using primary key columns */
  permissionOverrideById?: Maybe<PermissionOverrides>;
  /** fetch data from the table: "permission_overrides" */
  permissionOverrides: Array<PermissionOverrides>;
  /** fetch aggregated fields from the table: "permission_overrides" */
  permissionOverridesAggregate: PermissionOverridesAggregate;
  /** fetch data from the table in a streaming manner: "permission_overrides" */
  permissionOverridesStream: Array<PermissionOverrides>;
  /** fetch data from the table: "audit.permission_usage_report" */
  permissionUsageReports: Array<PermissionUsageReports>;
  /** fetch aggregated fields from the table: "audit.permission_usage_report" */
  permissionUsageReportsAggregate: PermissionUsageReportsAggregate;
  /** fetch data from the table in a streaming manner: "audit.permission_usage_report" */
  permissionUsageReportsStream: Array<PermissionUsageReports>;
  /** fetch data from the table: "permissions" */
  permissions: Array<Permissions>;
  /** fetch aggregated fields from the table: "permissions" */
  permissionsAggregate: PermissionsAggregate;
  /** fetch data from the table in a streaming manner: "permissions" */
  permissionsStream: Array<Permissions>;
  /** fetch data from the table: "position_admin_defaults" */
  positionAdminDefaults: Array<PositionAdminDefaults>;
  /** fetch aggregated fields from the table: "position_admin_defaults" */
  positionAdminDefaultsAggregate: PositionAdminDefaultsAggregate;
  /** fetch data from the table: "position_admin_defaults" using primary key columns */
  positionAdminDefaultsByPk?: Maybe<PositionAdminDefaults>;
  /** fetch data from the table in a streaming manner: "position_admin_defaults" */
  positionAdminDefaultsStream: Array<PositionAdminDefaults>;
  /** fetch data from the table: "rate_limits" */
  rateLimits: Array<RateLimits>;
  /** fetch aggregated fields from the table: "rate_limits" */
  rateLimitsAggregate: RateLimitsAggregate;
  /** fetch data from the table: "rate_limits" using primary key columns */
  rateLimitsByPk?: Maybe<RateLimits>;
  /** fetch data from the table in a streaming manner: "rate_limits" */
  rateLimitsStream: Array<RateLimits>;
  /** fetch data from the table: "resources" using primary key columns */
  resourceById?: Maybe<Resources>;
  /** fetch data from the table: "resources" */
  resources: Array<Resources>;
  /** fetch aggregated fields from the table: "resources" */
  resourcesAggregate: ResourcesAggregate;
  /** fetch data from the table in a streaming manner: "resources" */
  resourcesStream: Array<Resources>;
  /** fetch data from the table: "roles" using primary key columns */
  roleById?: Maybe<Roles>;
  /** fetch data from the table: "role_permissions" using primary key columns */
  rolePermissionById?: Maybe<RolePermissions>;
  /** fetch data from the table: "role_permissions" */
  rolePermissions: Array<RolePermissions>;
  /** fetch aggregated fields from the table: "role_permissions" */
  rolePermissionsAggregate: RolePermissionsAggregate;
  /** fetch data from the table in a streaming manner: "role_permissions" */
  rolePermissionsStream: Array<RolePermissions>;
  /** fetch data from the table: "roles" */
  roles: Array<Roles>;
  /** fetch aggregated fields from the table: "roles" */
  rolesAggregate: RolesAggregate;
  /** fetch data from the table in a streaming manner: "roles" */
  rolesStream: Array<Roles>;
  /** fetch data from the table: "security_alerts" */
  securityAlerts: Array<SecurityAlerts>;
  /** fetch aggregated fields from the table: "security_alerts" */
  securityAlertsAggregate: SecurityAlertsAggregate;
  /** fetch data from the table: "security_alerts" using primary key columns */
  securityAlertsByPk?: Maybe<SecurityAlerts>;
  /** fetch data from the table in a streaming manner: "security_alerts" */
  securityAlertsStream: Array<SecurityAlerts>;
  /** An array relationship */
  securitySettings: Array<SecuritySettings>;
  /** An aggregate relationship */
  securitySettingsAggregate: SecuritySettingsAggregate;
  /** fetch data from the table: "security_settings" using primary key columns */
  securitySettingsByPk?: Maybe<SecuritySettings>;
  /** fetch data from the table in a streaming manner: "security_settings" */
  securitySettingsStream: Array<SecuritySettings>;
  /** fetch data from the table: "audit.slow_queries" */
  slowQueries: Array<SlowQueries>;
  /** fetch aggregated fields from the table: "audit.slow_queries" */
  slowQueriesAggregate: SlowQueriesAggregate;
  /** fetch data from the table in a streaming manner: "audit.slow_queries" */
  slowQueriesStream: Array<SlowQueries>;
  /** fetch data from the table: "audit.slow_queries" using primary key columns */
  slowQueryById?: Maybe<SlowQueries>;
  /** fetch data from the table: "staff_billing_performance" */
  staffBillingPerformance: Array<StaffBillingPerformance>;
  /** fetch aggregated fields from the table: "staff_billing_performance" */
  staffBillingPerformanceAggregate: StaffBillingPerformanceAggregate;
  /** fetch data from the table in a streaming manner: "staff_billing_performance" */
  staffBillingPerformanceStream: Array<StaffBillingPerformance>;
  /** fetch data from the table: "system_configuration" */
  systemConfiguration: Array<SystemConfiguration>;
  /** fetch aggregated fields from the table: "system_configuration" */
  systemConfigurationAggregate: SystemConfigurationAggregate;
  /** fetch data from the table: "system_configuration" using primary key columns */
  systemConfigurationByPk?: Maybe<SystemConfiguration>;
  /** fetch data from the table in a streaming manner: "system_configuration" */
  systemConfigurationStream: Array<SystemConfiguration>;
  /** fetch data from the table: "system_health" */
  systemHealth: Array<SystemHealth>;
  /** fetch aggregated fields from the table: "system_health" */
  systemHealthAggregate: SystemHealthAggregate;
  /** fetch data from the table: "system_health" using primary key columns */
  systemHealthByPk?: Maybe<SystemHealth>;
  /** fetch data from the table in a streaming manner: "system_health" */
  systemHealthStream: Array<SystemHealth>;
  /** fetch data from the table: "team_capacity_by_position" */
  teamCapacityByPosition: Array<TeamCapacityByPosition>;
  /** fetch aggregated fields from the table: "team_capacity_by_position" */
  teamCapacityByPositionAggregate: TeamCapacityByPositionAggregate;
  /** fetch data from the table in a streaming manner: "team_capacity_by_position" */
  teamCapacityByPositionStream: Array<TeamCapacityByPosition>;
  /** An array relationship */
  timeEntries: Array<TimeEntries>;
  /** An aggregate relationship */
  timeEntriesAggregate: TimeEntriesAggregate;
  /** fetch data from the table in a streaming manner: "time_entries" */
  timeEntriesStream: Array<TimeEntries>;
  /** fetch data from the table: "time_entries" using primary key columns */
  timeEntry?: Maybe<TimeEntries>;
  /** fetch data from the table: "users" using primary key columns */
  userById?: Maybe<Users>;
  /** An array relationship */
  userEmailTemplateFavorites: Array<UserEmailTemplateFavorites>;
  /** An aggregate relationship */
  userEmailTemplateFavoritesAggregate: UserEmailTemplateFavoritesAggregate;
  /** fetch data from the table: "user_email_template_favorites" using primary key columns */
  userEmailTemplateFavoritesByPk?: Maybe<UserEmailTemplateFavorites>;
  /** fetch data from the table in a streaming manner: "user_email_template_favorites" */
  userEmailTemplateFavoritesStream: Array<UserEmailTemplateFavorites>;
  /** fetch data from the table: "user_invitations" using primary key columns */
  userInvitationById?: Maybe<UserInvitations>;
  /** An array relationship */
  userInvitations: Array<UserInvitations>;
  /** An aggregate relationship */
  userInvitationsAggregate: UserInvitationsAggregate;
  /** fetch data from the table in a streaming manner: "user_invitations" */
  userInvitationsStream: Array<UserInvitations>;
  /** fetch data from the table: "user_roles" using primary key columns */
  userRoleById?: Maybe<UserRoles>;
  /** fetch data from the table: "user_roles" */
  userRoles: Array<UserRoles>;
  /** fetch aggregated fields from the table: "user_roles" */
  userRolesAggregate: UserRolesAggregate;
  /** fetch data from the table in a streaming manner: "user_roles" */
  userRolesStream: Array<UserRoles>;
  /** An array relationship */
  userSessions: Array<UserSessions>;
  /** An aggregate relationship */
  userSessionsAggregate: UserSessionsAggregate;
  /** fetch data from the table: "user_sessions" using primary key columns */
  userSessionsByPk?: Maybe<UserSessions>;
  /** fetch data from the table in a streaming manner: "user_sessions" */
  userSessionsStream: Array<UserSessions>;
  /** fetch data from the table: "user_skills" */
  userSkill: Array<UserSkill>;
  /** fetch aggregated fields from the table: "user_skills" */
  userSkillAggregate: UserSkillAggregate;
  /** fetch data from the table in a streaming manner: "user_skills" */
  userSkillStream: Array<UserSkill>;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  usersAggregate: UsersAggregate;
  /** fetch data from the table in a streaming manner: "users_role_backup" */
  usersRoleBackupStream: Array<UsersRoleBackup>;
  /** fetch data from the table: "users_role_backup" */
  usersRoleBackups: Array<UsersRoleBackup>;
  /** fetch aggregated fields from the table: "users_role_backup" */
  usersRoleBackupsAggregate: UsersRoleBackupAggregate;
  /** fetch data from the table in a streaming manner: "users" */
  usersStream: Array<Users>;
  /** fetch data from the table: "work_schedule" */
  workSchedule: Array<WorkSchedule>;
  /** fetch aggregated fields from the table: "work_schedule" */
  workScheduleAggregate: WorkScheduleAggregate;
  /** fetch data from the table: "work_schedule" using primary key columns */
  workScheduleById?: Maybe<WorkSchedule>;
  /** fetch data from the table in a streaming manner: "work_schedule" */
  workScheduleStream: Array<WorkSchedule>;
};


export type Subscription_RootActivatePayrollVersionsArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Subscription_RootActivatePayrollVersionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Subscription_RootAdjustmentRuleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootAdjustmentRulesArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


export type Subscription_RootAdjustmentRulesAggregateArgs = {
  distinctOn?: InputMaybe<Array<AdjustmentRulesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AdjustmentRulesOrderBy>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


export type Subscription_RootAdjustmentRulesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AdjustmentRulesStreamCursorInput>>;
  where?: InputMaybe<AdjustmentRulesBoolExp>;
};


export type Subscription_RootAppSettingByIdArgs = {
  id: Scalars['String']['input'];
};


export type Subscription_RootAppSettingsArgs = {
  distinctOn?: InputMaybe<Array<AppSettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AppSettingsOrderBy>>;
  where?: InputMaybe<AppSettingsBoolExp>;
};


export type Subscription_RootAppSettingsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AppSettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AppSettingsOrderBy>>;
  where?: InputMaybe<AppSettingsBoolExp>;
};


export type Subscription_RootAppSettingsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AppSettingsStreamCursorInput>>;
  where?: InputMaybe<AppSettingsBoolExp>;
};


export type Subscription_RootAuditLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootAuditLogsArgs = {
  distinctOn?: InputMaybe<Array<AuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditLogsOrderBy>>;
  where?: InputMaybe<AuditLogsBoolExp>;
};


export type Subscription_RootAuditLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditLogsOrderBy>>;
  where?: InputMaybe<AuditLogsBoolExp>;
};


export type Subscription_RootAuditLogsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AuditLogsStreamCursorInput>>;
  where?: InputMaybe<AuditLogsBoolExp>;
};


export type Subscription_RootAuditUserAccessSummaryArgs = {
  distinctOn?: InputMaybe<Array<AuditUserAccessSummarySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditUserAccessSummaryOrderBy>>;
  where?: InputMaybe<AuditUserAccessSummaryBoolExp>;
};


export type Subscription_RootAuditUserAccessSummaryAggregateArgs = {
  distinctOn?: InputMaybe<Array<AuditUserAccessSummarySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuditUserAccessSummaryOrderBy>>;
  where?: InputMaybe<AuditUserAccessSummaryBoolExp>;
};


export type Subscription_RootAuditUserAccessSummaryStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AuditUserAccessSummaryStreamCursorInput>>;
  where?: InputMaybe<AuditUserAccessSummaryBoolExp>;
};


export type Subscription_RootAuthEventByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootAuthEventsArgs = {
  distinctOn?: InputMaybe<Array<AuthEventsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthEventsOrderBy>>;
  where?: InputMaybe<AuthEventsBoolExp>;
};


export type Subscription_RootAuthEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<AuthEventsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AuthEventsOrderBy>>;
  where?: InputMaybe<AuthEventsBoolExp>;
};


export type Subscription_RootAuthEventsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AuthEventsStreamCursorInput>>;
  where?: InputMaybe<AuthEventsBoolExp>;
};


export type Subscription_RootBillingEventLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootBillingEventLogsArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


export type Subscription_RootBillingEventLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


export type Subscription_RootBillingEventLogsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BillingEventLogsStreamCursorInput>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


export type Subscription_RootBillingInvoiceArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


export type Subscription_RootBillingInvoiceAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceOrderBy>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


export type Subscription_RootBillingInvoiceByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootBillingInvoiceItemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootBillingInvoiceItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


export type Subscription_RootBillingInvoiceItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingInvoiceItemSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingInvoiceItemOrderBy>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


export type Subscription_RootBillingInvoiceItemsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BillingInvoiceItemStreamCursorInput>>;
  where?: InputMaybe<BillingInvoiceItemBoolExp>;
};


export type Subscription_RootBillingInvoiceStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BillingInvoiceStreamCursorInput>>;
  where?: InputMaybe<BillingInvoiceBoolExp>;
};


export type Subscription_RootBillingItemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootBillingItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


export type Subscription_RootBillingItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


export type Subscription_RootBillingItemsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BillingItemsStreamCursorInput>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


export type Subscription_RootBillingPeriodArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootBillingPeriodsArgs = {
  distinctOn?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPeriodsOrderBy>>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};


export type Subscription_RootBillingPeriodsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingPeriodsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPeriodsOrderBy>>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};


export type Subscription_RootBillingPeriodsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BillingPeriodsStreamCursorInput>>;
  where?: InputMaybe<BillingPeriodsBoolExp>;
};


export type Subscription_RootBillingPlanByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootBillingPlansArgs = {
  distinctOn?: InputMaybe<Array<BillingPlansSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPlansOrderBy>>;
  where?: InputMaybe<BillingPlansBoolExp>;
};


export type Subscription_RootBillingPlansAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingPlansSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingPlansOrderBy>>;
  where?: InputMaybe<BillingPlansBoolExp>;
};


export type Subscription_RootBillingPlansStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BillingPlansStreamCursorInput>>;
  where?: InputMaybe<BillingPlansBoolExp>;
};


export type Subscription_RootClientBillingAssignmentByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootClientBillingAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


export type Subscription_RootClientBillingAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientBillingAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientBillingAssignmentsOrderBy>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


export type Subscription_RootClientBillingAssignmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientBillingAssignmentsStreamCursorInput>>;
  where?: InputMaybe<ClientBillingAssignmentsBoolExp>;
};


export type Subscription_RootClientByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootClientExternalSystemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootClientExternalSystemsArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


export type Subscription_RootClientExternalSystemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientExternalSystemsOrderBy>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


export type Subscription_RootClientExternalSystemsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientExternalSystemsStreamCursorInput>>;
  where?: InputMaybe<ClientExternalSystemsBoolExp>;
};


export type Subscription_RootClientServicesWithRatesArgs = {
  distinctOn?: InputMaybe<Array<ClientServicesWithRatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientServicesWithRatesOrderBy>>;
  where?: InputMaybe<ClientServicesWithRatesBoolExp>;
};


export type Subscription_RootClientServicesWithRatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientServicesWithRatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientServicesWithRatesOrderBy>>;
  where?: InputMaybe<ClientServicesWithRatesBoolExp>;
};


export type Subscription_RootClientServicesWithRatesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientServicesWithRatesStreamCursorInput>>;
  where?: InputMaybe<ClientServicesWithRatesBoolExp>;
};


export type Subscription_RootClientsArgs = {
  distinctOn?: InputMaybe<Array<ClientsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientsOrderBy>>;
  where?: InputMaybe<ClientsBoolExp>;
};


export type Subscription_RootClientsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ClientsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ClientsOrderBy>>;
  where?: InputMaybe<ClientsBoolExp>;
};


export type Subscription_RootClientsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientsStreamCursorInput>>;
  where?: InputMaybe<ClientsBoolExp>;
};


export type Subscription_RootConsultantCapacityOverviewArgs = {
  distinctOn?: InputMaybe<Array<ConsultantCapacityOverviewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ConsultantCapacityOverviewOrderBy>>;
  where?: InputMaybe<ConsultantCapacityOverviewBoolExp>;
};


export type Subscription_RootConsultantCapacityOverviewAggregateArgs = {
  distinctOn?: InputMaybe<Array<ConsultantCapacityOverviewSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ConsultantCapacityOverviewOrderBy>>;
  where?: InputMaybe<ConsultantCapacityOverviewBoolExp>;
};


export type Subscription_RootConsultantCapacityOverviewStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ConsultantCapacityOverviewStreamCursorInput>>;
  where?: InputMaybe<ConsultantCapacityOverviewBoolExp>;
};


export type Subscription_RootCreatePayrollVersionArgs = {
  args: CreatePayrollVersionArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Subscription_RootCreatePayrollVersionAggregateArgs = {
  args: CreatePayrollVersionArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Subscription_RootCreatePayrollVersionSimpleArgs = {
  args: CreatePayrollVersionSimpleArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Subscription_RootCreatePayrollVersionSimpleAggregateArgs = {
  args: CreatePayrollVersionSimpleArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Subscription_RootCurrentPayrollsArgs = {
  distinctOn?: InputMaybe<Array<CurrentPayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CurrentPayrollsOrderBy>>;
  where?: InputMaybe<CurrentPayrollsBoolExp>;
};


export type Subscription_RootCurrentPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<CurrentPayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<CurrentPayrollsOrderBy>>;
  where?: InputMaybe<CurrentPayrollsBoolExp>;
};


export type Subscription_RootCurrentPayrollsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CurrentPayrollsStreamCursorInput>>;
  where?: InputMaybe<CurrentPayrollsBoolExp>;
};


export type Subscription_RootDataAccessLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootDataAccessLogsArgs = {
  distinctOn?: InputMaybe<Array<DataAccessLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataAccessLogsOrderBy>>;
  where?: InputMaybe<DataAccessLogsBoolExp>;
};


export type Subscription_RootDataAccessLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DataAccessLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataAccessLogsOrderBy>>;
  where?: InputMaybe<DataAccessLogsBoolExp>;
};


export type Subscription_RootDataAccessLogsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DataAccessLogsStreamCursorInput>>;
  where?: InputMaybe<DataAccessLogsBoolExp>;
};


export type Subscription_RootDataBackupsArgs = {
  distinctOn?: InputMaybe<Array<DataBackupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataBackupsOrderBy>>;
  where?: InputMaybe<DataBackupsBoolExp>;
};


export type Subscription_RootDataBackupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DataBackupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataBackupsOrderBy>>;
  where?: InputMaybe<DataBackupsBoolExp>;
};


export type Subscription_RootDataBackupsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootDataBackupsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DataBackupsStreamCursorInput>>;
  where?: InputMaybe<DataBackupsBoolExp>;
};


export type Subscription_RootEmailDraftsArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


export type Subscription_RootEmailDraftsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


export type Subscription_RootEmailDraftsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootEmailDraftsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EmailDraftsStreamCursorInput>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


export type Subscription_RootEmailSendLogsArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


export type Subscription_RootEmailSendLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


export type Subscription_RootEmailSendLogsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootEmailSendLogsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EmailSendLogsStreamCursorInput>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


export type Subscription_RootEmailTemplatesArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


export type Subscription_RootEmailTemplatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


export type Subscription_RootEmailTemplatesByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootEmailTemplatesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EmailTemplatesStreamCursorInput>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


export type Subscription_RootExternalSystemByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootExternalSystemsArgs = {
  distinctOn?: InputMaybe<Array<ExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExternalSystemsOrderBy>>;
  where?: InputMaybe<ExternalSystemsBoolExp>;
};


export type Subscription_RootExternalSystemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<ExternalSystemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ExternalSystemsOrderBy>>;
  where?: InputMaybe<ExternalSystemsBoolExp>;
};


export type Subscription_RootExternalSystemsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExternalSystemsStreamCursorInput>>;
  where?: InputMaybe<ExternalSystemsBoolExp>;
};


export type Subscription_RootFeatureFlagByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootFeatureFlagsArgs = {
  distinctOn?: InputMaybe<Array<FeatureFlagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FeatureFlagsOrderBy>>;
  where?: InputMaybe<FeatureFlagsBoolExp>;
};


export type Subscription_RootFeatureFlagsAggregateArgs = {
  distinctOn?: InputMaybe<Array<FeatureFlagsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FeatureFlagsOrderBy>>;
  where?: InputMaybe<FeatureFlagsBoolExp>;
};


export type Subscription_RootFeatureFlagsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FeatureFlagsStreamCursorInput>>;
  where?: InputMaybe<FeatureFlagsBoolExp>;
};


export type Subscription_RootFileByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootFilesArgs = {
  distinctOn?: InputMaybe<Array<FilesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FilesOrderBy>>;
  where?: InputMaybe<FilesBoolExp>;
};


export type Subscription_RootFilesAggregateArgs = {
  distinctOn?: InputMaybe<Array<FilesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FilesOrderBy>>;
  where?: InputMaybe<FilesBoolExp>;
};


export type Subscription_RootFilesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FilesStreamCursorInput>>;
  where?: InputMaybe<FilesBoolExp>;
};


export type Subscription_RootGeneratePayrollDatesArgs = {
  args: GeneratePayrollDatesArgs;
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Subscription_RootGeneratePayrollDatesAggregateArgs = {
  args: GeneratePayrollDatesArgs;
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Subscription_RootGetLatestPayrollVersionArgs = {
  args: GetLatestPayrollVersionArgs;
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Subscription_RootGetLatestPayrollVersionAggregateArgs = {
  args: GetLatestPayrollVersionArgs;
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Subscription_RootGetPayrollVersionHistoryArgs = {
  args: GetPayrollVersionHistoryArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Subscription_RootGetPayrollVersionHistoryAggregateArgs = {
  args: GetPayrollVersionHistoryArgs;
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Subscription_RootHolidayByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootHolidaysArgs = {
  distinctOn?: InputMaybe<Array<HolidaysSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<HolidaysOrderBy>>;
  where?: InputMaybe<HolidaysBoolExp>;
};


export type Subscription_RootHolidaysAggregateArgs = {
  distinctOn?: InputMaybe<Array<HolidaysSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<HolidaysOrderBy>>;
  where?: InputMaybe<HolidaysBoolExp>;
};


export type Subscription_RootHolidaysStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<HolidaysStreamCursorInput>>;
  where?: InputMaybe<HolidaysBoolExp>;
};


export type Subscription_RootLatestPayrollVersionResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootLatestPayrollVersionResultsArgs = {
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Subscription_RootLatestPayrollVersionResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LatestPayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LatestPayrollVersionResultsOrderBy>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Subscription_RootLatestPayrollVersionResultsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LatestPayrollVersionResultsStreamCursorInput>>;
  where?: InputMaybe<LatestPayrollVersionResultsBoolExp>;
};


export type Subscription_RootLeaveArgs = {
  distinctOn?: InputMaybe<Array<LeaveSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LeaveOrderBy>>;
  where?: InputMaybe<LeaveBoolExp>;
};


export type Subscription_RootLeaveAggregateArgs = {
  distinctOn?: InputMaybe<Array<LeaveSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LeaveOrderBy>>;
  where?: InputMaybe<LeaveBoolExp>;
};


export type Subscription_RootLeaveByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootLeaveStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LeaveStreamCursorInput>>;
  where?: InputMaybe<LeaveBoolExp>;
};


export type Subscription_RootNoteByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootNotesArgs = {
  distinctOn?: InputMaybe<Array<NotesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<NotesOrderBy>>;
  where?: InputMaybe<NotesBoolExp>;
};


export type Subscription_RootNotesAggregateArgs = {
  distinctOn?: InputMaybe<Array<NotesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<NotesOrderBy>>;
  where?: InputMaybe<NotesBoolExp>;
};


export type Subscription_RootNotesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<NotesStreamCursorInput>>;
  where?: InputMaybe<NotesBoolExp>;
};


export type Subscription_RootPayrollActivationResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollActivationResultsArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Subscription_RootPayrollActivationResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollActivationResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollActivationResultsOrderBy>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Subscription_RootPayrollActivationResultsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollActivationResultsStreamCursorInput>>;
  where?: InputMaybe<PayrollActivationResultsBoolExp>;
};


export type Subscription_RootPayrollAssignmentAuditByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollAssignmentAuditsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


export type Subscription_RootPayrollAssignmentAuditsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


export type Subscription_RootPayrollAssignmentAuditsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollAssignmentAuditsStreamCursorInput>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


export type Subscription_RootPayrollAssignmentByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


export type Subscription_RootPayrollAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


export type Subscription_RootPayrollAssignmentsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollAssignmentsStreamCursorInput>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


export type Subscription_RootPayrollByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollCycleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollCyclesArgs = {
  distinctOn?: InputMaybe<Array<PayrollCyclesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollCyclesOrderBy>>;
  where?: InputMaybe<PayrollCyclesBoolExp>;
};


export type Subscription_RootPayrollCyclesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollCyclesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollCyclesOrderBy>>;
  where?: InputMaybe<PayrollCyclesBoolExp>;
};


export type Subscription_RootPayrollCyclesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollCyclesStreamCursorInput>>;
  where?: InputMaybe<PayrollCyclesBoolExp>;
};


export type Subscription_RootPayrollDashboardStatsArgs = {
  distinctOn?: InputMaybe<Array<PayrollDashboardStatsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDashboardStatsOrderBy>>;
  where?: InputMaybe<PayrollDashboardStatsBoolExp>;
};


export type Subscription_RootPayrollDashboardStatsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollDashboardStatsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDashboardStatsOrderBy>>;
  where?: InputMaybe<PayrollDashboardStatsBoolExp>;
};


export type Subscription_RootPayrollDashboardStatsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollDashboardStatsStreamCursorInput>>;
  where?: InputMaybe<PayrollDashboardStatsBoolExp>;
};


export type Subscription_RootPayrollDateByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollDateTypeByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollDateTypesArgs = {
  distinctOn?: InputMaybe<Array<PayrollDateTypesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDateTypesOrderBy>>;
  where?: InputMaybe<PayrollDateTypesBoolExp>;
};


export type Subscription_RootPayrollDateTypesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollDateTypesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDateTypesOrderBy>>;
  where?: InputMaybe<PayrollDateTypesBoolExp>;
};


export type Subscription_RootPayrollDateTypesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollDateTypesStreamCursorInput>>;
  where?: InputMaybe<PayrollDateTypesBoolExp>;
};


export type Subscription_RootPayrollDatesArgs = {
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Subscription_RootPayrollDatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollDatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollDatesOrderBy>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Subscription_RootPayrollDatesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollDatesStreamCursorInput>>;
  where?: InputMaybe<PayrollDatesBoolExp>;
};


export type Subscription_RootPayrollProfitabilityArgs = {
  distinctOn?: InputMaybe<Array<PayrollProfitabilitySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollProfitabilityOrderBy>>;
  where?: InputMaybe<PayrollProfitabilityBoolExp>;
};


export type Subscription_RootPayrollProfitabilityAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollProfitabilitySelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollProfitabilityOrderBy>>;
  where?: InputMaybe<PayrollProfitabilityBoolExp>;
};


export type Subscription_RootPayrollProfitabilityStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollProfitabilityStreamCursorInput>>;
  where?: InputMaybe<PayrollProfitabilityBoolExp>;
};


export type Subscription_RootPayrollRequiredSkillArgs = {
  distinctOn?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollRequiredSkillOrderBy>>;
  where?: InputMaybe<PayrollRequiredSkillBoolExp>;
};


export type Subscription_RootPayrollRequiredSkillAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollRequiredSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollRequiredSkillOrderBy>>;
  where?: InputMaybe<PayrollRequiredSkillBoolExp>;
};


export type Subscription_RootPayrollRequiredSkillStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollRequiredSkillStreamCursorInput>>;
  where?: InputMaybe<PayrollRequiredSkillBoolExp>;
};


export type Subscription_RootPayrollTriggersStatusArgs = {
  distinctOn?: InputMaybe<Array<PayrollTriggersStatusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollTriggersStatusOrderBy>>;
  where?: InputMaybe<PayrollTriggersStatusBoolExp>;
};


export type Subscription_RootPayrollTriggersStatusAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollTriggersStatusSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollTriggersStatusOrderBy>>;
  where?: InputMaybe<PayrollTriggersStatusBoolExp>;
};


export type Subscription_RootPayrollTriggersStatusStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollTriggersStatusStreamCursorInput>>;
  where?: InputMaybe<PayrollTriggersStatusBoolExp>;
};


export type Subscription_RootPayrollVersionHistoryResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollVersionHistoryResultsArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Subscription_RootPayrollVersionHistoryResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionHistoryResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionHistoryResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Subscription_RootPayrollVersionHistoryResultsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollVersionHistoryResultsStreamCursorInput>>;
  where?: InputMaybe<PayrollVersionHistoryResultsBoolExp>;
};


export type Subscription_RootPayrollVersionResultByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPayrollVersionResultsArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Subscription_RootPayrollVersionResultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollVersionResultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollVersionResultsOrderBy>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Subscription_RootPayrollVersionResultsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollVersionResultsStreamCursorInput>>;
  where?: InputMaybe<PayrollVersionResultsBoolExp>;
};


export type Subscription_RootPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


export type Subscription_RootPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


export type Subscription_RootPayrollsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PayrollsStreamCursorInput>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


export type Subscription_RootPermissionAuditLogByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPermissionAuditLogsArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


export type Subscription_RootPermissionAuditLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


export type Subscription_RootPermissionAuditLogsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PermissionAuditLogsStreamCursorInput>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


export type Subscription_RootPermissionByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPermissionChangeByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPermissionChangesArgs = {
  distinctOn?: InputMaybe<Array<PermissionChangesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionChangesOrderBy>>;
  where?: InputMaybe<PermissionChangesBoolExp>;
};


export type Subscription_RootPermissionChangesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionChangesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionChangesOrderBy>>;
  where?: InputMaybe<PermissionChangesBoolExp>;
};


export type Subscription_RootPermissionChangesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PermissionChangesStreamCursorInput>>;
  where?: InputMaybe<PermissionChangesBoolExp>;
};


export type Subscription_RootPermissionOverrideByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootPermissionOverridesArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


export type Subscription_RootPermissionOverridesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


export type Subscription_RootPermissionOverridesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PermissionOverridesStreamCursorInput>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


export type Subscription_RootPermissionUsageReportsArgs = {
  distinctOn?: InputMaybe<Array<PermissionUsageReportsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionUsageReportsOrderBy>>;
  where?: InputMaybe<PermissionUsageReportsBoolExp>;
};


export type Subscription_RootPermissionUsageReportsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionUsageReportsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionUsageReportsOrderBy>>;
  where?: InputMaybe<PermissionUsageReportsBoolExp>;
};


export type Subscription_RootPermissionUsageReportsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PermissionUsageReportsStreamCursorInput>>;
  where?: InputMaybe<PermissionUsageReportsBoolExp>;
};


export type Subscription_RootPermissionsArgs = {
  distinctOn?: InputMaybe<Array<PermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionsOrderBy>>;
  where?: InputMaybe<PermissionsBoolExp>;
};


export type Subscription_RootPermissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionsOrderBy>>;
  where?: InputMaybe<PermissionsBoolExp>;
};


export type Subscription_RootPermissionsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PermissionsStreamCursorInput>>;
  where?: InputMaybe<PermissionsBoolExp>;
};


export type Subscription_RootPositionAdminDefaultsArgs = {
  distinctOn?: InputMaybe<Array<PositionAdminDefaultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PositionAdminDefaultsOrderBy>>;
  where?: InputMaybe<PositionAdminDefaultsBoolExp>;
};


export type Subscription_RootPositionAdminDefaultsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PositionAdminDefaultsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PositionAdminDefaultsOrderBy>>;
  where?: InputMaybe<PositionAdminDefaultsBoolExp>;
};


export type Subscription_RootPositionAdminDefaultsByPkArgs = {
  position: Scalars['user_position']['input'];
};


export type Subscription_RootPositionAdminDefaultsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<PositionAdminDefaultsStreamCursorInput>>;
  where?: InputMaybe<PositionAdminDefaultsBoolExp>;
};


export type Subscription_RootRateLimitsArgs = {
  distinctOn?: InputMaybe<Array<RateLimitsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RateLimitsOrderBy>>;
  where?: InputMaybe<RateLimitsBoolExp>;
};


export type Subscription_RootRateLimitsAggregateArgs = {
  distinctOn?: InputMaybe<Array<RateLimitsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RateLimitsOrderBy>>;
  where?: InputMaybe<RateLimitsBoolExp>;
};


export type Subscription_RootRateLimitsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootRateLimitsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<RateLimitsStreamCursorInput>>;
  where?: InputMaybe<RateLimitsBoolExp>;
};


export type Subscription_RootResourceByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootResourcesArgs = {
  distinctOn?: InputMaybe<Array<ResourcesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ResourcesOrderBy>>;
  where?: InputMaybe<ResourcesBoolExp>;
};


export type Subscription_RootResourcesAggregateArgs = {
  distinctOn?: InputMaybe<Array<ResourcesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ResourcesOrderBy>>;
  where?: InputMaybe<ResourcesBoolExp>;
};


export type Subscription_RootResourcesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ResourcesStreamCursorInput>>;
  where?: InputMaybe<ResourcesBoolExp>;
};


export type Subscription_RootRoleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootRolePermissionByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootRolePermissionsArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


export type Subscription_RootRolePermissionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<RolePermissionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolePermissionsOrderBy>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


export type Subscription_RootRolePermissionsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<RolePermissionsStreamCursorInput>>;
  where?: InputMaybe<RolePermissionsBoolExp>;
};


export type Subscription_RootRolesArgs = {
  distinctOn?: InputMaybe<Array<RolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolesOrderBy>>;
  where?: InputMaybe<RolesBoolExp>;
};


export type Subscription_RootRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<RolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RolesOrderBy>>;
  where?: InputMaybe<RolesBoolExp>;
};


export type Subscription_RootRolesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<RolesStreamCursorInput>>;
  where?: InputMaybe<RolesBoolExp>;
};


export type Subscription_RootSecurityAlertsArgs = {
  distinctOn?: InputMaybe<Array<SecurityAlertsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecurityAlertsOrderBy>>;
  where?: InputMaybe<SecurityAlertsBoolExp>;
};


export type Subscription_RootSecurityAlertsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SecurityAlertsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecurityAlertsOrderBy>>;
  where?: InputMaybe<SecurityAlertsBoolExp>;
};


export type Subscription_RootSecurityAlertsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootSecurityAlertsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SecurityAlertsStreamCursorInput>>;
  where?: InputMaybe<SecurityAlertsBoolExp>;
};


export type Subscription_RootSecuritySettingsArgs = {
  distinctOn?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecuritySettingsOrderBy>>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};


export type Subscription_RootSecuritySettingsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecuritySettingsOrderBy>>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};


export type Subscription_RootSecuritySettingsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootSecuritySettingsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SecuritySettingsStreamCursorInput>>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};


export type Subscription_RootSlowQueriesArgs = {
  distinctOn?: InputMaybe<Array<SlowQueriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SlowQueriesOrderBy>>;
  where?: InputMaybe<SlowQueriesBoolExp>;
};


export type Subscription_RootSlowQueriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<SlowQueriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SlowQueriesOrderBy>>;
  where?: InputMaybe<SlowQueriesBoolExp>;
};


export type Subscription_RootSlowQueriesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SlowQueriesStreamCursorInput>>;
  where?: InputMaybe<SlowQueriesBoolExp>;
};


export type Subscription_RootSlowQueryByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootStaffBillingPerformanceArgs = {
  distinctOn?: InputMaybe<Array<StaffBillingPerformanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<StaffBillingPerformanceOrderBy>>;
  where?: InputMaybe<StaffBillingPerformanceBoolExp>;
};


export type Subscription_RootStaffBillingPerformanceAggregateArgs = {
  distinctOn?: InputMaybe<Array<StaffBillingPerformanceSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<StaffBillingPerformanceOrderBy>>;
  where?: InputMaybe<StaffBillingPerformanceBoolExp>;
};


export type Subscription_RootStaffBillingPerformanceStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<StaffBillingPerformanceStreamCursorInput>>;
  where?: InputMaybe<StaffBillingPerformanceBoolExp>;
};


export type Subscription_RootSystemConfigurationArgs = {
  distinctOn?: InputMaybe<Array<SystemConfigurationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemConfigurationOrderBy>>;
  where?: InputMaybe<SystemConfigurationBoolExp>;
};


export type Subscription_RootSystemConfigurationAggregateArgs = {
  distinctOn?: InputMaybe<Array<SystemConfigurationSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemConfigurationOrderBy>>;
  where?: InputMaybe<SystemConfigurationBoolExp>;
};


export type Subscription_RootSystemConfigurationByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootSystemConfigurationStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SystemConfigurationStreamCursorInput>>;
  where?: InputMaybe<SystemConfigurationBoolExp>;
};


export type Subscription_RootSystemHealthArgs = {
  distinctOn?: InputMaybe<Array<SystemHealthSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemHealthOrderBy>>;
  where?: InputMaybe<SystemHealthBoolExp>;
};


export type Subscription_RootSystemHealthAggregateArgs = {
  distinctOn?: InputMaybe<Array<SystemHealthSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SystemHealthOrderBy>>;
  where?: InputMaybe<SystemHealthBoolExp>;
};


export type Subscription_RootSystemHealthByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootSystemHealthStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SystemHealthStreamCursorInput>>;
  where?: InputMaybe<SystemHealthBoolExp>;
};


export type Subscription_RootTeamCapacityByPositionArgs = {
  distinctOn?: InputMaybe<Array<TeamCapacityByPositionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamCapacityByPositionOrderBy>>;
  where?: InputMaybe<TeamCapacityByPositionBoolExp>;
};


export type Subscription_RootTeamCapacityByPositionAggregateArgs = {
  distinctOn?: InputMaybe<Array<TeamCapacityByPositionSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TeamCapacityByPositionOrderBy>>;
  where?: InputMaybe<TeamCapacityByPositionBoolExp>;
};


export type Subscription_RootTeamCapacityByPositionStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TeamCapacityByPositionStreamCursorInput>>;
  where?: InputMaybe<TeamCapacityByPositionBoolExp>;
};


export type Subscription_RootTimeEntriesArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


export type Subscription_RootTimeEntriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


export type Subscription_RootTimeEntriesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TimeEntriesStreamCursorInput>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


export type Subscription_RootTimeEntryArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootUserByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootUserEmailTemplateFavoritesArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


export type Subscription_RootUserEmailTemplateFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


export type Subscription_RootUserEmailTemplateFavoritesByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootUserEmailTemplateFavoritesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserEmailTemplateFavoritesStreamCursorInput>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


export type Subscription_RootUserInvitationByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootUserInvitationsArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


export type Subscription_RootUserInvitationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


export type Subscription_RootUserInvitationsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserInvitationsStreamCursorInput>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


export type Subscription_RootUserRoleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootUserRolesArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


export type Subscription_RootUserRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


export type Subscription_RootUserRolesStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserRolesStreamCursorInput>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


export type Subscription_RootUserSessionsArgs = {
  distinctOn?: InputMaybe<Array<UserSessionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSessionsOrderBy>>;
  where?: InputMaybe<UserSessionsBoolExp>;
};


export type Subscription_RootUserSessionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSessionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSessionsOrderBy>>;
  where?: InputMaybe<UserSessionsBoolExp>;
};


export type Subscription_RootUserSessionsByPkArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootUserSessionsStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserSessionsStreamCursorInput>>;
  where?: InputMaybe<UserSessionsBoolExp>;
};


export type Subscription_RootUserSkillArgs = {
  distinctOn?: InputMaybe<Array<UserSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSkillOrderBy>>;
  where?: InputMaybe<UserSkillBoolExp>;
};


export type Subscription_RootUserSkillAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSkillOrderBy>>;
  where?: InputMaybe<UserSkillBoolExp>;
};


export type Subscription_RootUserSkillStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserSkillStreamCursorInput>>;
  where?: InputMaybe<UserSkillBoolExp>;
};


export type Subscription_RootUsersArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


export type Subscription_RootUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


export type Subscription_RootUsersRoleBackupStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UsersRoleBackupStreamCursorInput>>;
  where?: InputMaybe<UsersRoleBackupBoolExp>;
};


export type Subscription_RootUsersRoleBackupsArgs = {
  distinctOn?: InputMaybe<Array<UsersRoleBackupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersRoleBackupOrderBy>>;
  where?: InputMaybe<UsersRoleBackupBoolExp>;
};


export type Subscription_RootUsersRoleBackupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UsersRoleBackupSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersRoleBackupOrderBy>>;
  where?: InputMaybe<UsersRoleBackupBoolExp>;
};


export type Subscription_RootUsersStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UsersStreamCursorInput>>;
  where?: InputMaybe<UsersBoolExp>;
};


export type Subscription_RootWorkScheduleArgs = {
  distinctOn?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WorkScheduleOrderBy>>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};


export type Subscription_RootWorkScheduleAggregateArgs = {
  distinctOn?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WorkScheduleOrderBy>>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};


export type Subscription_RootWorkScheduleByIdArgs = {
  id: Scalars['uuid']['input'];
};


export type Subscription_RootWorkScheduleStreamArgs = {
  batchSize: Scalars['Int']['input'];
  cursor: Array<InputMaybe<WorkScheduleStreamCursorInput>>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};

/** Time tracking for profitability analysis */
export type TimeEntries = {
  __typename?: 'timeEntries';
  /** An object relationship */
  billingItem?: Maybe<BillingItems>;
  /** Billing item this time relates to */
  billingItemId?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  client: Clients;
  /** Client this work was for */
  clientId: Scalars['uuid']['output'];
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Description of work performed */
  description?: Maybe<Scalars['String']['output']>;
  /** Hours spent on this work */
  hoursSpent: Scalars['numeric']['output'];
  id: Scalars['uuid']['output'];
  /** An object relationship */
  payroll?: Maybe<Payrolls>;
  /** Specific payroll job this relates to */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  /** Staff member who worked on this */
  staffUserId: Scalars['uuid']['output'];
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  user: Users;
  /** Date the work was performed */
  workDate: Scalars['date']['output'];
};

/** aggregated selection of "time_entries" */
export type TimeEntriesAggregate = {
  __typename?: 'timeEntriesAggregate';
  aggregate?: Maybe<TimeEntriesAggregateFields>;
  nodes: Array<TimeEntries>;
};

export type TimeEntriesAggregateBoolExp = {
  count?: InputMaybe<TimeEntriesAggregateBoolExpCount>;
};

export type TimeEntriesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TimeEntriesBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "time_entries" */
export type TimeEntriesAggregateFields = {
  __typename?: 'timeEntriesAggregateFields';
  avg?: Maybe<TimeEntriesAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TimeEntriesMaxFields>;
  min?: Maybe<TimeEntriesMinFields>;
  stddev?: Maybe<TimeEntriesStddevFields>;
  stddevPop?: Maybe<TimeEntriesStddevPopFields>;
  stddevSamp?: Maybe<TimeEntriesStddevSampFields>;
  sum?: Maybe<TimeEntriesSumFields>;
  varPop?: Maybe<TimeEntriesVarPopFields>;
  varSamp?: Maybe<TimeEntriesVarSampFields>;
  variance?: Maybe<TimeEntriesVarianceFields>;
};


/** aggregate fields of "time_entries" */
export type TimeEntriesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "time_entries" */
export type TimeEntriesAggregateOrderBy = {
  avg?: InputMaybe<TimeEntriesAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<TimeEntriesMaxOrderBy>;
  min?: InputMaybe<TimeEntriesMinOrderBy>;
  stddev?: InputMaybe<TimeEntriesStddevOrderBy>;
  stddevPop?: InputMaybe<TimeEntriesStddevPopOrderBy>;
  stddevSamp?: InputMaybe<TimeEntriesStddevSampOrderBy>;
  sum?: InputMaybe<TimeEntriesSumOrderBy>;
  varPop?: InputMaybe<TimeEntriesVarPopOrderBy>;
  varSamp?: InputMaybe<TimeEntriesVarSampOrderBy>;
  variance?: InputMaybe<TimeEntriesVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "time_entries" */
export type TimeEntriesArrRelInsertInput = {
  data: Array<TimeEntriesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<TimeEntriesOnConflict>;
};

/** aggregate avg on columns */
export type TimeEntriesAvgFields = {
  __typename?: 'timeEntriesAvgFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "time_entries" */
export type TimeEntriesAvgOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "time_entries". All fields are combined with a logical 'AND'. */
export type TimeEntriesBoolExp = {
  _and?: InputMaybe<Array<TimeEntriesBoolExp>>;
  _not?: InputMaybe<TimeEntriesBoolExp>;
  _or?: InputMaybe<Array<TimeEntriesBoolExp>>;
  billingItem?: InputMaybe<BillingItemsBoolExp>;
  billingItemId?: InputMaybe<UuidComparisonExp>;
  client?: InputMaybe<ClientsBoolExp>;
  clientId?: InputMaybe<UuidComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  description?: InputMaybe<StringComparisonExp>;
  hoursSpent?: InputMaybe<NumericComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  payroll?: InputMaybe<PayrollsBoolExp>;
  payrollId?: InputMaybe<UuidComparisonExp>;
  staffUserId?: InputMaybe<UuidComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  workDate?: InputMaybe<DateComparisonExp>;
};

/** unique or primary key constraints on table "time_entries" */
export type TimeEntriesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'time_entries_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "time_entries" */
export type TimeEntriesIncInput = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "time_entries" */
export type TimeEntriesInsertInput = {
  billingItem?: InputMaybe<BillingItemsObjRelInsertInput>;
  /** Billing item this time relates to */
  billingItemId?: InputMaybe<Scalars['uuid']['input']>;
  client?: InputMaybe<ClientsObjRelInsertInput>;
  /** Client this work was for */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Description of work performed */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  payroll?: InputMaybe<PayrollsObjRelInsertInput>;
  /** Specific payroll job this relates to */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** Staff member who worked on this */
  staffUserId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  /** Date the work was performed */
  workDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate max on columns */
export type TimeEntriesMaxFields = {
  __typename?: 'timeEntriesMaxFields';
  /** Billing item this time relates to */
  billingItemId?: Maybe<Scalars['uuid']['output']>;
  /** Client this work was for */
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Description of work performed */
  description?: Maybe<Scalars['String']['output']>;
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  /** Specific payroll job this relates to */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  /** Staff member who worked on this */
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Date the work was performed */
  workDate?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "time_entries" */
export type TimeEntriesMaxOrderBy = {
  /** Billing item this time relates to */
  billingItemId?: InputMaybe<OrderBy>;
  /** Client this work was for */
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  /** Description of work performed */
  description?: InputMaybe<OrderBy>;
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  /** Specific payroll job this relates to */
  payrollId?: InputMaybe<OrderBy>;
  /** Staff member who worked on this */
  staffUserId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  /** Date the work was performed */
  workDate?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type TimeEntriesMinFields = {
  __typename?: 'timeEntriesMinFields';
  /** Billing item this time relates to */
  billingItemId?: Maybe<Scalars['uuid']['output']>;
  /** Client this work was for */
  clientId?: Maybe<Scalars['uuid']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Description of work performed */
  description?: Maybe<Scalars['String']['output']>;
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  /** Specific payroll job this relates to */
  payrollId?: Maybe<Scalars['uuid']['output']>;
  /** Staff member who worked on this */
  staffUserId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** Date the work was performed */
  workDate?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "time_entries" */
export type TimeEntriesMinOrderBy = {
  /** Billing item this time relates to */
  billingItemId?: InputMaybe<OrderBy>;
  /** Client this work was for */
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  /** Description of work performed */
  description?: InputMaybe<OrderBy>;
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  /** Specific payroll job this relates to */
  payrollId?: InputMaybe<OrderBy>;
  /** Staff member who worked on this */
  staffUserId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  /** Date the work was performed */
  workDate?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "time_entries" */
export type TimeEntriesMutationResponse = {
  __typename?: 'timeEntriesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<TimeEntries>;
};

/** on_conflict condition type for table "time_entries" */
export type TimeEntriesOnConflict = {
  constraint: TimeEntriesConstraint;
  updateColumns?: Array<TimeEntriesUpdateColumn>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};

/** Ordering options when selecting data from "time_entries". */
export type TimeEntriesOrderBy = {
  billingItem?: InputMaybe<BillingItemsOrderBy>;
  billingItemId?: InputMaybe<OrderBy>;
  client?: InputMaybe<ClientsOrderBy>;
  clientId?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  description?: InputMaybe<OrderBy>;
  hoursSpent?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  payroll?: InputMaybe<PayrollsOrderBy>;
  payrollId?: InputMaybe<OrderBy>;
  staffUserId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  workDate?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: time_entries */
export type TimeEntriesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "time_entries" */
export type TimeEntriesSelectColumn =
  /** column name */
  | 'billingItemId'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'hoursSpent'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'staffUserId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'workDate'
  | '%future added value';

/** input type for updating data in table "time_entries" */
export type TimeEntriesSetInput = {
  /** Billing item this time relates to */
  billingItemId?: InputMaybe<Scalars['uuid']['input']>;
  /** Client this work was for */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Description of work performed */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Specific payroll job this relates to */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** Staff member who worked on this */
  staffUserId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Date the work was performed */
  workDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type TimeEntriesStddevFields = {
  __typename?: 'timeEntriesStddevFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "time_entries" */
export type TimeEntriesStddevOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type TimeEntriesStddevPopFields = {
  __typename?: 'timeEntriesStddevPopFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "time_entries" */
export type TimeEntriesStddevPopOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type TimeEntriesStddevSampFields = {
  __typename?: 'timeEntriesStddevSampFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "time_entries" */
export type TimeEntriesStddevSampOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "timeEntries" */
export type TimeEntriesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: TimeEntriesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type TimeEntriesStreamCursorValueInput = {
  /** Billing item this time relates to */
  billingItemId?: InputMaybe<Scalars['uuid']['input']>;
  /** Client this work was for */
  clientId?: InputMaybe<Scalars['uuid']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Description of work performed */
  description?: InputMaybe<Scalars['String']['input']>;
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Specific payroll job this relates to */
  payrollId?: InputMaybe<Scalars['uuid']['input']>;
  /** Staff member who worked on this */
  staffUserId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Date the work was performed */
  workDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type TimeEntriesSumFields = {
  __typename?: 'timeEntriesSumFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "time_entries" */
export type TimeEntriesSumOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

/** update columns of table "time_entries" */
export type TimeEntriesUpdateColumn =
  /** column name */
  | 'billingItemId'
  /** column name */
  | 'clientId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'description'
  /** column name */
  | 'hoursSpent'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollId'
  /** column name */
  | 'staffUserId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'workDate'
  | '%future added value';

export type TimeEntriesUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<TimeEntriesIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TimeEntriesSetInput>;
  /** filter the rows which have to be updated */
  where: TimeEntriesBoolExp;
};

/** aggregate varPop on columns */
export type TimeEntriesVarPopFields = {
  __typename?: 'timeEntriesVarPopFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "time_entries" */
export type TimeEntriesVarPopOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type TimeEntriesVarSampFields = {
  __typename?: 'timeEntriesVarSampFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "time_entries" */
export type TimeEntriesVarSampOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type TimeEntriesVarianceFields = {
  __typename?: 'timeEntriesVarianceFields';
  /** Hours spent on this work */
  hoursSpent?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "time_entries" */
export type TimeEntriesVarianceOrderBy = {
  /** Hours spent on this work */
  hoursSpent?: InputMaybe<OrderBy>;
};

export type UserEmailTemplateFavoritesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
  predicate: IntComparisonExp;
};

/** Stores invitation metadata for two-stage user invitation flow with role-based access control */
export type UserInvitations = {
  __typename?: 'userInvitations';
  acceptedAt?: Maybe<Scalars['timestamptz']['output']>;
  acceptedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  acceptedByUser?: Maybe<Users>;
  clerkInvitationId?: Maybe<Scalars['String']['output']>;
  clerkTicket?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  email: Scalars['String']['output'];
  expiresAt: Scalars['timestamptz']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['uuid']['output'];
  invitationMetadata?: Maybe<Scalars['jsonb']['output']>;
  invitationStatus: Scalars['invitation_status_enum']['output'];
  invitedAt: Scalars['timestamptz']['output'];
  invitedBy: Scalars['uuid']['output'];
  /** An object relationship */
  invitedByUser?: Maybe<Users>;
  invitedRole: Scalars['String']['output'];
  lastName: Scalars['String']['output'];
  managerId?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  managerUser?: Maybe<Users>;
  revokeReason?: Maybe<Scalars['String']['output']>;
  revokedAt?: Maybe<Scalars['timestamptz']['output']>;
  revokedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  revokedByUser?: Maybe<Users>;
  status: Scalars['String']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** Stores invitation metadata for two-stage user invitation flow with role-based access control */
export type UserInvitationsInvitationMetadataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "user_invitations" */
export type UserInvitationsAggregate = {
  __typename?: 'userInvitationsAggregate';
  aggregate?: Maybe<UserInvitationsAggregateFields>;
  nodes: Array<UserInvitations>;
};

export type UserInvitationsAggregateBoolExp = {
  count?: InputMaybe<UserInvitationsAggregateBoolExpCount>;
};

export type UserInvitationsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserInvitationsBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "user_invitations" */
export type UserInvitationsAggregateFields = {
  __typename?: 'userInvitationsAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<UserInvitationsMaxFields>;
  min?: Maybe<UserInvitationsMinFields>;
};


/** aggregate fields of "user_invitations" */
export type UserInvitationsAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_invitations" */
export type UserInvitationsAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UserInvitationsMaxOrderBy>;
  min?: InputMaybe<UserInvitationsMinOrderBy>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserInvitationsAppendInput = {
  invitationMetadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "user_invitations" */
export type UserInvitationsArrRelInsertInput = {
  data: Array<UserInvitationsInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<UserInvitationsOnConflict>;
};

/** Boolean expression to filter rows from the table "user_invitations". All fields are combined with a logical 'AND'. */
export type UserInvitationsBoolExp = {
  _and?: InputMaybe<Array<UserInvitationsBoolExp>>;
  _not?: InputMaybe<UserInvitationsBoolExp>;
  _or?: InputMaybe<Array<UserInvitationsBoolExp>>;
  acceptedAt?: InputMaybe<TimestamptzComparisonExp>;
  acceptedBy?: InputMaybe<UuidComparisonExp>;
  acceptedByUser?: InputMaybe<UsersBoolExp>;
  clerkInvitationId?: InputMaybe<StringComparisonExp>;
  clerkTicket?: InputMaybe<StringComparisonExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  email?: InputMaybe<StringComparisonExp>;
  expiresAt?: InputMaybe<TimestamptzComparisonExp>;
  firstName?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  invitationMetadata?: InputMaybe<JsonbComparisonExp>;
  invitationStatus?: InputMaybe<InvitationStatusEnumComparisonExp>;
  invitedAt?: InputMaybe<TimestamptzComparisonExp>;
  invitedBy?: InputMaybe<UuidComparisonExp>;
  invitedByUser?: InputMaybe<UsersBoolExp>;
  invitedRole?: InputMaybe<StringComparisonExp>;
  lastName?: InputMaybe<StringComparisonExp>;
  managerId?: InputMaybe<UuidComparisonExp>;
  managerUser?: InputMaybe<UsersBoolExp>;
  revokeReason?: InputMaybe<StringComparisonExp>;
  revokedAt?: InputMaybe<TimestamptzComparisonExp>;
  revokedBy?: InputMaybe<UuidComparisonExp>;
  revokedByUser?: InputMaybe<UsersBoolExp>;
  status?: InputMaybe<StringComparisonExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
};

/** unique or primary key constraints on table "user_invitations" */
export type UserInvitationsConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'user_invitations_pkey'
  | '%future added value';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserInvitationsDeleteAtPathInput = {
  invitationMetadata?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserInvitationsDeleteElemInput = {
  invitationMetadata?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserInvitationsDeleteKeyInput = {
  invitationMetadata?: InputMaybe<Scalars['String']['input']>;
};

/** input type for inserting data into table "user_invitations" */
export type UserInvitationsInsertInput = {
  acceptedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  acceptedBy?: InputMaybe<Scalars['uuid']['input']>;
  acceptedByUser?: InputMaybe<UsersObjRelInsertInput>;
  clerkInvitationId?: InputMaybe<Scalars['String']['input']>;
  clerkTicket?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invitationMetadata?: InputMaybe<Scalars['jsonb']['input']>;
  invitationStatus?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  invitedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  invitedBy?: InputMaybe<Scalars['uuid']['input']>;
  invitedByUser?: InputMaybe<UsersObjRelInsertInput>;
  invitedRole?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  managerId?: InputMaybe<Scalars['uuid']['input']>;
  managerUser?: InputMaybe<UsersObjRelInsertInput>;
  revokeReason?: InputMaybe<Scalars['String']['input']>;
  revokedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  revokedBy?: InputMaybe<Scalars['uuid']['input']>;
  revokedByUser?: InputMaybe<UsersObjRelInsertInput>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
};

/** aggregate max on columns */
export type UserInvitationsMaxFields = {
  __typename?: 'userInvitationsMaxFields';
  acceptedAt?: Maybe<Scalars['timestamptz']['output']>;
  acceptedBy?: Maybe<Scalars['uuid']['output']>;
  clerkInvitationId?: Maybe<Scalars['String']['output']>;
  clerkTicket?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invitationStatus?: Maybe<Scalars['invitation_status_enum']['output']>;
  invitedAt?: Maybe<Scalars['timestamptz']['output']>;
  invitedBy?: Maybe<Scalars['uuid']['output']>;
  invitedRole?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  managerId?: Maybe<Scalars['uuid']['output']>;
  revokeReason?: Maybe<Scalars['String']['output']>;
  revokedAt?: Maybe<Scalars['timestamptz']['output']>;
  revokedBy?: Maybe<Scalars['uuid']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "user_invitations" */
export type UserInvitationsMaxOrderBy = {
  acceptedAt?: InputMaybe<OrderBy>;
  acceptedBy?: InputMaybe<OrderBy>;
  clerkInvitationId?: InputMaybe<OrderBy>;
  clerkTicket?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invitationStatus?: InputMaybe<OrderBy>;
  invitedAt?: InputMaybe<OrderBy>;
  invitedBy?: InputMaybe<OrderBy>;
  invitedRole?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  revokeReason?: InputMaybe<OrderBy>;
  revokedAt?: InputMaybe<OrderBy>;
  revokedBy?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type UserInvitationsMinFields = {
  __typename?: 'userInvitationsMinFields';
  acceptedAt?: Maybe<Scalars['timestamptz']['output']>;
  acceptedBy?: Maybe<Scalars['uuid']['output']>;
  clerkInvitationId?: Maybe<Scalars['String']['output']>;
  clerkTicket?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  expiresAt?: Maybe<Scalars['timestamptz']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  invitationStatus?: Maybe<Scalars['invitation_status_enum']['output']>;
  invitedAt?: Maybe<Scalars['timestamptz']['output']>;
  invitedBy?: Maybe<Scalars['uuid']['output']>;
  invitedRole?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  managerId?: Maybe<Scalars['uuid']['output']>;
  revokeReason?: Maybe<Scalars['String']['output']>;
  revokedAt?: Maybe<Scalars['timestamptz']['output']>;
  revokedBy?: Maybe<Scalars['uuid']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "user_invitations" */
export type UserInvitationsMinOrderBy = {
  acceptedAt?: InputMaybe<OrderBy>;
  acceptedBy?: InputMaybe<OrderBy>;
  clerkInvitationId?: InputMaybe<OrderBy>;
  clerkTicket?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invitationStatus?: InputMaybe<OrderBy>;
  invitedAt?: InputMaybe<OrderBy>;
  invitedBy?: InputMaybe<OrderBy>;
  invitedRole?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  revokeReason?: InputMaybe<OrderBy>;
  revokedAt?: InputMaybe<OrderBy>;
  revokedBy?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "user_invitations" */
export type UserInvitationsMutationResponse = {
  __typename?: 'userInvitationsMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserInvitations>;
};

/** on_conflict condition type for table "user_invitations" */
export type UserInvitationsOnConflict = {
  constraint: UserInvitationsConstraint;
  updateColumns?: Array<UserInvitationsUpdateColumn>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};

/** Ordering options when selecting data from "user_invitations". */
export type UserInvitationsOrderBy = {
  acceptedAt?: InputMaybe<OrderBy>;
  acceptedBy?: InputMaybe<OrderBy>;
  acceptedByUser?: InputMaybe<UsersOrderBy>;
  clerkInvitationId?: InputMaybe<OrderBy>;
  clerkTicket?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  expiresAt?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  invitationMetadata?: InputMaybe<OrderBy>;
  invitationStatus?: InputMaybe<OrderBy>;
  invitedAt?: InputMaybe<OrderBy>;
  invitedBy?: InputMaybe<OrderBy>;
  invitedByUser?: InputMaybe<UsersOrderBy>;
  invitedRole?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  managerId?: InputMaybe<OrderBy>;
  managerUser?: InputMaybe<UsersOrderBy>;
  revokeReason?: InputMaybe<OrderBy>;
  revokedAt?: InputMaybe<OrderBy>;
  revokedBy?: InputMaybe<OrderBy>;
  revokedByUser?: InputMaybe<UsersOrderBy>;
  status?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
};

/** primary key columns input for table: user_invitations */
export type UserInvitationsPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserInvitationsPrependInput = {
  invitationMetadata?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "user_invitations" */
export type UserInvitationsSelectColumn =
  /** column name */
  | 'acceptedAt'
  /** column name */
  | 'acceptedBy'
  /** column name */
  | 'clerkInvitationId'
  /** column name */
  | 'clerkTicket'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'email'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'firstName'
  /** column name */
  | 'id'
  /** column name */
  | 'invitationMetadata'
  /** column name */
  | 'invitationStatus'
  /** column name */
  | 'invitedAt'
  /** column name */
  | 'invitedBy'
  /** column name */
  | 'invitedRole'
  /** column name */
  | 'lastName'
  /** column name */
  | 'managerId'
  /** column name */
  | 'revokeReason'
  /** column name */
  | 'revokedAt'
  /** column name */
  | 'revokedBy'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt'
  | '%future added value';

/** input type for updating data in table "user_invitations" */
export type UserInvitationsSetInput = {
  acceptedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  acceptedBy?: InputMaybe<Scalars['uuid']['input']>;
  clerkInvitationId?: InputMaybe<Scalars['String']['input']>;
  clerkTicket?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invitationMetadata?: InputMaybe<Scalars['jsonb']['input']>;
  invitationStatus?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  invitedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  invitedBy?: InputMaybe<Scalars['uuid']['input']>;
  invitedRole?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  managerId?: InputMaybe<Scalars['uuid']['input']>;
  revokeReason?: InputMaybe<Scalars['String']['input']>;
  revokedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  revokedBy?: InputMaybe<Scalars['uuid']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** Streaming cursor of the table "userInvitations" */
export type UserInvitationsStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: UserInvitationsStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type UserInvitationsStreamCursorValueInput = {
  acceptedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  acceptedBy?: InputMaybe<Scalars['uuid']['input']>;
  clerkInvitationId?: InputMaybe<Scalars['String']['input']>;
  clerkTicket?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  invitationMetadata?: InputMaybe<Scalars['jsonb']['input']>;
  invitationStatus?: InputMaybe<Scalars['invitation_status_enum']['input']>;
  invitedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  invitedBy?: InputMaybe<Scalars['uuid']['input']>;
  invitedRole?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  managerId?: InputMaybe<Scalars['uuid']['input']>;
  revokeReason?: InputMaybe<Scalars['String']['input']>;
  revokedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  revokedBy?: InputMaybe<Scalars['uuid']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** update columns of table "user_invitations" */
export type UserInvitationsUpdateColumn =
  /** column name */
  | 'acceptedAt'
  /** column name */
  | 'acceptedBy'
  /** column name */
  | 'clerkInvitationId'
  /** column name */
  | 'clerkTicket'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'email'
  /** column name */
  | 'expiresAt'
  /** column name */
  | 'firstName'
  /** column name */
  | 'id'
  /** column name */
  | 'invitationMetadata'
  /** column name */
  | 'invitationStatus'
  /** column name */
  | 'invitedAt'
  /** column name */
  | 'invitedBy'
  /** column name */
  | 'invitedRole'
  /** column name */
  | 'lastName'
  /** column name */
  | 'managerId'
  /** column name */
  | 'revokeReason'
  /** column name */
  | 'revokedAt'
  /** column name */
  | 'revokedBy'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt'
  | '%future added value';

export type UserInvitationsUpdates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<UserInvitationsAppendInput>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _deleteAtPath?: InputMaybe<UserInvitationsDeleteAtPathInput>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _deleteElem?: InputMaybe<UserInvitationsDeleteElemInput>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _deleteKey?: InputMaybe<UserInvitationsDeleteKeyInput>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<UserInvitationsPrependInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserInvitationsSetInput>;
  /** filter the rows which have to be updated */
  where: UserInvitationsBoolExp;
};

/** columns and relationships of "user_roles" */
export type UserRoles = {
  __typename?: 'userRoles';
  /** An object relationship */
  assignedRole: Roles;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['uuid']['output'];
  roleId: Scalars['uuid']['output'];
  /** An object relationship */
  roleUser: Users;
  updatedAt: Scalars['timestamptz']['output'];
  userId: Scalars['uuid']['output'];
};

/** aggregated selection of "user_roles" */
export type UserRolesAggregate = {
  __typename?: 'userRolesAggregate';
  aggregate?: Maybe<UserRolesAggregateFields>;
  nodes: Array<UserRoles>;
};

export type UserRolesAggregateBoolExp = {
  count?: InputMaybe<UserRolesAggregateBoolExpCount>;
};

export type UserRolesAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UserRolesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserRolesBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "user_roles" */
export type UserRolesAggregateFields = {
  __typename?: 'userRolesAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<UserRolesMaxFields>;
  min?: Maybe<UserRolesMinFields>;
};


/** aggregate fields of "user_roles" */
export type UserRolesAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UserRolesSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_roles" */
export type UserRolesAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UserRolesMaxOrderBy>;
  min?: InputMaybe<UserRolesMinOrderBy>;
};

/** input type for inserting array relation for remote table "user_roles" */
export type UserRolesArrRelInsertInput = {
  data: Array<UserRolesInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<UserRolesOnConflict>;
};

/** Boolean expression to filter rows from the table "user_roles". All fields are combined with a logical 'AND'. */
export type UserRolesBoolExp = {
  _and?: InputMaybe<Array<UserRolesBoolExp>>;
  _not?: InputMaybe<UserRolesBoolExp>;
  _or?: InputMaybe<Array<UserRolesBoolExp>>;
  assignedRole?: InputMaybe<RolesBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  roleId?: InputMaybe<UuidComparisonExp>;
  roleUser?: InputMaybe<UsersBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** unique or primary key constraints on table "user_roles" */
export type UserRolesConstraint =
  /** unique or primary key constraint on columns "id" */
  | 'user_roles_pkey'
  /** unique or primary key constraint on columns "role_id", "user_id" */
  | 'user_roles_user_id_role_id_key'
  | '%future added value';

/** input type for inserting data into table "user_roles" */
export type UserRolesInsertInput = {
  assignedRole?: InputMaybe<RolesObjRelInsertInput>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  roleId?: InputMaybe<Scalars['uuid']['input']>;
  roleUser?: InputMaybe<UsersObjRelInsertInput>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type UserRolesMaxFields = {
  __typename?: 'userRolesMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  roleId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "user_roles" */
export type UserRolesMaxOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  roleId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type UserRolesMinFields = {
  __typename?: 'userRolesMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  roleId?: Maybe<Scalars['uuid']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "user_roles" */
export type UserRolesMinOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  roleId?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "user_roles" */
export type UserRolesMutationResponse = {
  __typename?: 'userRolesMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserRoles>;
};

/** on_conflict condition type for table "user_roles" */
export type UserRolesOnConflict = {
  constraint: UserRolesConstraint;
  updateColumns?: Array<UserRolesUpdateColumn>;
  where?: InputMaybe<UserRolesBoolExp>;
};

/** Ordering options when selecting data from "user_roles". */
export type UserRolesOrderBy = {
  assignedRole?: InputMaybe<RolesOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  roleId?: InputMaybe<OrderBy>;
  roleUser?: InputMaybe<UsersOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: user_roles */
export type UserRolesPkColumnsInput = {
  id: Scalars['uuid']['input'];
};

/** select columns of table "user_roles" */
export type UserRolesSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'roleId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "user_roles" */
export type UserRolesSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  roleId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "userRoles" */
export type UserRolesStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: UserRolesStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type UserRolesStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  roleId?: InputMaybe<Scalars['uuid']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** update columns of table "user_roles" */
export type UserRolesUpdateColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'roleId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  | '%future added value';

export type UserRolesUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserRolesSetInput>;
  /** filter the rows which have to be updated */
  where: UserRolesBoolExp;
};

export type UserSessionsAggregateBoolExpBool_And = {
  arguments: UserSessionsSelectColumnUserSessionsAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserSessionsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UserSessionsAggregateBoolExpBool_Or = {
  arguments: UserSessionsSelectColumnUserSessionsAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserSessionsBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UserSessionsAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UserSessionsSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserSessionsBoolExp>;
  predicate: IntComparisonExp;
};

/** columns and relationships of "user_skills" */
export type UserSkill = {
  __typename?: 'userSkill';
  proficiencyLevel?: Maybe<Scalars['String']['output']>;
  skillName?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  skilledUser?: Maybe<Users>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** aggregated selection of "user_skills" */
export type UserSkillAggregate = {
  __typename?: 'userSkillAggregate';
  aggregate?: Maybe<UserSkillAggregateFields>;
  nodes: Array<UserSkill>;
};

export type UserSkillAggregateBoolExp = {
  count?: InputMaybe<UserSkillAggregateBoolExpCount>;
};

export type UserSkillAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UserSkillSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserSkillBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "user_skills" */
export type UserSkillAggregateFields = {
  __typename?: 'userSkillAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<UserSkillMaxFields>;
  min?: Maybe<UserSkillMinFields>;
};


/** aggregate fields of "user_skills" */
export type UserSkillAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UserSkillSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_skills" */
export type UserSkillAggregateOrderBy = {
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UserSkillMaxOrderBy>;
  min?: InputMaybe<UserSkillMinOrderBy>;
};

/** input type for inserting array relation for remote table "user_skills" */
export type UserSkillArrRelInsertInput = {
  data: Array<UserSkillInsertInput>;
};

/** Boolean expression to filter rows from the table "user_skills". All fields are combined with a logical 'AND'. */
export type UserSkillBoolExp = {
  _and?: InputMaybe<Array<UserSkillBoolExp>>;
  _not?: InputMaybe<UserSkillBoolExp>;
  _or?: InputMaybe<Array<UserSkillBoolExp>>;
  proficiencyLevel?: InputMaybe<StringComparisonExp>;
  skillName?: InputMaybe<StringComparisonExp>;
  skilledUser?: InputMaybe<UsersBoolExp>;
  userId?: InputMaybe<UuidComparisonExp>;
};

/** input type for inserting data into table "user_skills" */
export type UserSkillInsertInput = {
  proficiencyLevel?: InputMaybe<Scalars['String']['input']>;
  skillName?: InputMaybe<Scalars['String']['input']>;
  skilledUser?: InputMaybe<UsersObjRelInsertInput>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** aggregate max on columns */
export type UserSkillMaxFields = {
  __typename?: 'userSkillMaxFields';
  proficiencyLevel?: Maybe<Scalars['String']['output']>;
  skillName?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by max() on columns of table "user_skills" */
export type UserSkillMaxOrderBy = {
  proficiencyLevel?: InputMaybe<OrderBy>;
  skillName?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type UserSkillMinFields = {
  __typename?: 'userSkillMinFields';
  proficiencyLevel?: Maybe<Scalars['String']['output']>;
  skillName?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['uuid']['output']>;
};

/** order by min() on columns of table "user_skills" */
export type UserSkillMinOrderBy = {
  proficiencyLevel?: InputMaybe<OrderBy>;
  skillName?: InputMaybe<OrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "user_skills" */
export type UserSkillMutationResponse = {
  __typename?: 'userSkillMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserSkill>;
};

/** Ordering options when selecting data from "user_skills". */
export type UserSkillOrderBy = {
  proficiencyLevel?: InputMaybe<OrderBy>;
  skillName?: InputMaybe<OrderBy>;
  skilledUser?: InputMaybe<UsersOrderBy>;
  userId?: InputMaybe<OrderBy>;
};

/** select columns of table "user_skills" */
export type UserSkillSelectColumn =
  /** column name */
  | 'proficiencyLevel'
  /** column name */
  | 'skillName'
  /** column name */
  | 'userId'
  | '%future added value';

/** input type for updating data in table "user_skills" */
export type UserSkillSetInput = {
  proficiencyLevel?: InputMaybe<Scalars['String']['input']>;
  skillName?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

/** Streaming cursor of the table "userSkill" */
export type UserSkillStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: UserSkillStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type UserSkillStreamCursorValueInput = {
  proficiencyLevel?: InputMaybe<Scalars['String']['input']>;
  skillName?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['uuid']['input']>;
};

export type UserSkillUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserSkillSetInput>;
  /** filter the rows which have to be updated */
  where: UserSkillBoolExp;
};

/** columns and relationships of "users" */
export type Users = {
  __typename?: 'users';
  /** User address or location */
  address?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  assignedRoles: Array<UserRoles>;
  /** An aggregate relationship */
  assignedRolesAggregate: UserRolesAggregate;
  /** An array relationship */
  authoredNotes: Array<Notes>;
  /** An aggregate relationship */
  authoredNotesAggregate: NotesAggregate;
  /** An array relationship */
  backupConsultantPayrolls: Array<Payrolls>;
  /** An aggregate relationship */
  backupConsultantPayrollsAggregate: PayrollsAggregate;
  /** An array relationship */
  billingItems: Array<BillingItems>;
  /** An aggregate relationship */
  billingItemsAggregate: BillingItemsAggregate;
  /** An array relationship */
  billingItemsConfirmedBy: Array<BillingItems>;
  /** An aggregate relationship */
  billingItemsConfirmedByAggregate: BillingItemsAggregate;
  /** An array relationship */
  billingItemsUserId: Array<BillingItems>;
  /** An aggregate relationship */
  billingItemsUserIdAggregate: BillingItemsAggregate;
  /** User biography or description */
  bio?: Maybe<Scalars['String']['output']>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: Maybe<Scalars['String']['output']>;
  computedName?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  consultantAssignments: Array<PayrollAssignments>;
  /** An aggregate relationship */
  consultantAssignmentsAggregate: PayrollAssignmentsAggregate;
  /** An array relationship */
  createdAssignmentAudits: Array<PayrollAssignmentAudits>;
  /** An aggregate relationship */
  createdAssignmentAuditsAggregate: PayrollAssignmentAuditsAggregate;
  /** An array relationship */
  createdAssignments: Array<PayrollAssignments>;
  /** An aggregate relationship */
  createdAssignmentsAggregate: PayrollAssignmentsAggregate;
  /** Timestamp when the user was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An array relationship */
  createdBillingEvents: Array<BillingEventLogs>;
  /** An aggregate relationship */
  createdBillingEventsAggregate: BillingEventLogsAggregate;
  /** An array relationship */
  createdPermissionOverrides: Array<PermissionOverrides>;
  /** An aggregate relationship */
  createdPermissionOverridesAggregate: PermissionOverridesAggregate;
  /** An array relationship */
  dataBackups: Array<DataBackups>;
  /** An aggregate relationship */
  dataBackupsAggregate: DataBackupsAggregate;
  deactivatedAt?: Maybe<Scalars['timestamptz']['output']>;
  deactivatedBy?: Maybe<Scalars['String']['output']>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
  /** User's email address (unique) */
  email: Scalars['String']['output'];
  /** An array relationship */
  emailDrafts: Array<EmailDrafts>;
  /** An aggregate relationship */
  emailDraftsAggregate: EmailDraftsAggregate;
  /** An array relationship */
  emailSendLogs: Array<EmailSendLogs>;
  /** An aggregate relationship */
  emailSendLogsAggregate: EmailSendLogsAggregate;
  /** An array relationship */
  emailTemplates: Array<EmailTemplates>;
  /** An aggregate relationship */
  emailTemplatesAggregate: EmailTemplatesAggregate;
  /** An array relationship */
  emailTemplatesCreatedByUserId: Array<EmailTemplates>;
  /** An aggregate relationship */
  emailTemplatesCreatedByUserIdAggregate: EmailTemplatesAggregate;
  firstName: Scalars['String']['output'];
  /** Unique identifier for the user */
  id: Scalars['uuid']['output'];
  /** URL to the user's profile image */
  image?: Maybe<Scalars['String']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  /** Whether the user is a staff member (vs. external user) */
  isStaff?: Maybe<Scalars['Boolean']['output']>;
  lastName: Scalars['String']['output'];
  /** An array relationship */
  managedPayrolls: Array<Payrolls>;
  /** An aggregate relationship */
  managedPayrollsAggregate: PayrollsAggregate;
  /** An array relationship */
  managedTeamMembers: Array<Users>;
  /** An aggregate relationship */
  managedTeamMembersAggregate: UsersAggregate;
  /** An array relationship */
  managedUsers: Array<Users>;
  /** An aggregate relationship */
  managedUsersAggregate: UsersAggregate;
  /** Reference to the user's manager */
  managerId?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  managerUser?: Maybe<Users>;
  /** An array relationship */
  newConsultantAuditTrail: Array<PayrollAssignmentAudits>;
  /** An aggregate relationship */
  newConsultantAuditTrailAggregate: PayrollAssignmentAuditsAggregate;
  /** An array relationship */
  originalConsultantAssignments: Array<PayrollAssignments>;
  /** An aggregate relationship */
  originalConsultantAssignmentsAggregate: PayrollAssignmentsAggregate;
  /** An array relationship */
  originalConsultantAuditTrail: Array<PayrollAssignmentAudits>;
  /** An aggregate relationship */
  originalConsultantAuditTrailAggregate: PayrollAssignmentAuditsAggregate;
  /** User contact phone number */
  phone?: Maybe<Scalars['String']['output']>;
  /** Organizational position affecting admin time allocation */
  position?: Maybe<Scalars['user_position']['output']>;
  /** An array relationship */
  primaryConsultantPayrolls: Array<Payrolls>;
  /** An aggregate relationship */
  primaryConsultantPayrollsAggregate: PayrollsAggregate;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role: Scalars['user_role']['output'];
  /** An array relationship */
  securitySettings: Array<SecuritySettings>;
  /** An aggregate relationship */
  securitySettingsAggregate: SecuritySettingsAggregate;
  /** Current user status - must be consistent with isActive field */
  status: Scalars['user_status_enum']['output'];
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: Maybe<Scalars['String']['output']>;
  /** Timestamp when status was last changed */
  statusChangedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** User ID who changed the status */
  statusChangedBy?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  statusChangedByUser?: Maybe<Users>;
  /** An array relationship */
  targetedPermissionAudits: Array<PermissionAuditLogs>;
  /** An aggregate relationship */
  targetedPermissionAuditsAggregate: PermissionAuditLogsAggregate;
  /** An array relationship */
  timeEntries: Array<TimeEntries>;
  /** An aggregate relationship */
  timeEntriesAggregate: TimeEntriesAggregate;
  /** Timestamp when the user was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** An array relationship */
  userEmailTemplateFavorites: Array<UserEmailTemplateFavorites>;
  /** An aggregate relationship */
  userEmailTemplateFavoritesAggregate: UserEmailTemplateFavoritesAggregate;
  /** An array relationship */
  userInvitations: Array<UserInvitations>;
  /** An array relationship */
  userInvitationsAcceptedBy: Array<UserInvitations>;
  /** An aggregate relationship */
  userInvitationsAcceptedByAggregate: UserInvitationsAggregate;
  /** An aggregate relationship */
  userInvitationsAggregate: UserInvitationsAggregate;
  /** An array relationship */
  userInvitationsInvitedBy: Array<UserInvitations>;
  /** An aggregate relationship */
  userInvitationsInvitedByAggregate: UserInvitationsAggregate;
  /** An array relationship */
  userInvitationsManagerId: Array<UserInvitations>;
  /** An aggregate relationship */
  userInvitationsManagerIdAggregate: UserInvitationsAggregate;
  /** An array relationship */
  userLeaveRecords: Array<Leave>;
  /** An aggregate relationship */
  userLeaveRecordsAggregate: LeaveAggregate;
  /** An array relationship */
  userPermissionAudits: Array<PermissionAuditLogs>;
  /** An aggregate relationship */
  userPermissionAuditsAggregate: PermissionAuditLogsAggregate;
  /** An array relationship */
  userPermissionOverrides: Array<PermissionOverrides>;
  /** An aggregate relationship */
  userPermissionOverridesAggregate: PermissionOverridesAggregate;
  /** An array relationship */
  userSessions: Array<UserSessions>;
  /** An aggregate relationship */
  userSessionsAggregate: UserSessionsAggregate;
  /** An array relationship */
  userSkills: Array<UserSkill>;
  /** An aggregate relationship */
  userSkillsAggregate: UserSkillAggregate;
  /** An array relationship */
  userWorkSchedules: Array<WorkSchedule>;
  /** An aggregate relationship */
  userWorkSchedulesAggregate: WorkScheduleAggregate;
  /** User's unique username for login */
  username?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  usersStatusChangedBy: Array<Users>;
  /** An aggregate relationship */
  usersStatusChangedByAggregate: UsersAggregate;
};


/** columns and relationships of "users" */
export type UsersAssignedRolesArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersAssignedRolesAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserRolesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserRolesOrderBy>>;
  where?: InputMaybe<UserRolesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersAuthoredNotesArgs = {
  distinctOn?: InputMaybe<Array<NotesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<NotesOrderBy>>;
  where?: InputMaybe<NotesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersAuthoredNotesAggregateArgs = {
  distinctOn?: InputMaybe<Array<NotesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<NotesOrderBy>>;
  where?: InputMaybe<NotesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBackupConsultantPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBackupConsultantPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBillingItemsArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBillingItemsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBillingItemsConfirmedByArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBillingItemsConfirmedByAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBillingItemsUserIdArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersBillingItemsUserIdAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingItemsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingItemsOrderBy>>;
  where?: InputMaybe<BillingItemsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersConsultantAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersConsultantAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedAssignmentAuditsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedAssignmentAuditsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedBillingEventsArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedBillingEventsAggregateArgs = {
  distinctOn?: InputMaybe<Array<BillingEventLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BillingEventLogsOrderBy>>;
  where?: InputMaybe<BillingEventLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedPermissionOverridesArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersCreatedPermissionOverridesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersDataBackupsArgs = {
  distinctOn?: InputMaybe<Array<DataBackupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataBackupsOrderBy>>;
  where?: InputMaybe<DataBackupsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersDataBackupsAggregateArgs = {
  distinctOn?: InputMaybe<Array<DataBackupsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DataBackupsOrderBy>>;
  where?: InputMaybe<DataBackupsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailDraftsArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailDraftsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailDraftsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailDraftsOrderBy>>;
  where?: InputMaybe<EmailDraftsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailSendLogsArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailSendLogsAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailSendLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailSendLogsOrderBy>>;
  where?: InputMaybe<EmailSendLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailTemplatesArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailTemplatesAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailTemplatesCreatedByUserIdArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersEmailTemplatesCreatedByUserIdAggregateArgs = {
  distinctOn?: InputMaybe<Array<EmailTemplatesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EmailTemplatesOrderBy>>;
  where?: InputMaybe<EmailTemplatesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersManagedPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersManagedPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersManagedTeamMembersArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


/** columns and relationships of "users" */
export type UsersManagedTeamMembersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


/** columns and relationships of "users" */
export type UsersManagedUsersArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


/** columns and relationships of "users" */
export type UsersManagedUsersAggregateArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


/** columns and relationships of "users" */
export type UsersNewConsultantAuditTrailArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersNewConsultantAuditTrailAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersOriginalConsultantAssignmentsArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersOriginalConsultantAssignmentsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersOriginalConsultantAuditTrailArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersOriginalConsultantAuditTrailAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollAssignmentAuditsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollAssignmentAuditsOrderBy>>;
  where?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersPrimaryConsultantPayrollsArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersPrimaryConsultantPayrollsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PayrollsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PayrollsOrderBy>>;
  where?: InputMaybe<PayrollsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersSecuritySettingsArgs = {
  distinctOn?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecuritySettingsOrderBy>>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersSecuritySettingsAggregateArgs = {
  distinctOn?: InputMaybe<Array<SecuritySettingsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SecuritySettingsOrderBy>>;
  where?: InputMaybe<SecuritySettingsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersTargetedPermissionAuditsArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersTargetedPermissionAuditsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersTimeEntriesArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersTimeEntriesAggregateArgs = {
  distinctOn?: InputMaybe<Array<TimeEntriesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TimeEntriesOrderBy>>;
  where?: InputMaybe<TimeEntriesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserEmailTemplateFavoritesArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserEmailTemplateFavoritesAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserEmailTemplateFavoritesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserEmailTemplateFavoritesOrderBy>>;
  where?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsAcceptedByArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsAcceptedByAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsInvitedByArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsInvitedByAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsManagerIdArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserInvitationsManagerIdAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserInvitationsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserInvitationsOrderBy>>;
  where?: InputMaybe<UserInvitationsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserLeaveRecordsArgs = {
  distinctOn?: InputMaybe<Array<LeaveSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LeaveOrderBy>>;
  where?: InputMaybe<LeaveBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserLeaveRecordsAggregateArgs = {
  distinctOn?: InputMaybe<Array<LeaveSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LeaveOrderBy>>;
  where?: InputMaybe<LeaveBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserPermissionAuditsArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserPermissionAuditsAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionAuditLogsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionAuditLogsOrderBy>>;
  where?: InputMaybe<PermissionAuditLogsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserPermissionOverridesArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserPermissionOverridesAggregateArgs = {
  distinctOn?: InputMaybe<Array<PermissionOverridesSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PermissionOverridesOrderBy>>;
  where?: InputMaybe<PermissionOverridesBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserSessionsArgs = {
  distinctOn?: InputMaybe<Array<UserSessionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSessionsOrderBy>>;
  where?: InputMaybe<UserSessionsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserSessionsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSessionsSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSessionsOrderBy>>;
  where?: InputMaybe<UserSessionsBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserSkillsArgs = {
  distinctOn?: InputMaybe<Array<UserSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSkillOrderBy>>;
  where?: InputMaybe<UserSkillBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserSkillsAggregateArgs = {
  distinctOn?: InputMaybe<Array<UserSkillSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UserSkillOrderBy>>;
  where?: InputMaybe<UserSkillBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserWorkSchedulesArgs = {
  distinctOn?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WorkScheduleOrderBy>>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUserWorkSchedulesAggregateArgs = {
  distinctOn?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WorkScheduleOrderBy>>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUsersStatusChangedByArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};


/** columns and relationships of "users" */
export type UsersUsersStatusChangedByAggregateArgs = {
  distinctOn?: InputMaybe<Array<UsersSelectColumn>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UsersOrderBy>>;
  where?: InputMaybe<UsersBoolExp>;
};

/** aggregated selection of "users" */
export type UsersAggregate = {
  __typename?: 'usersAggregate';
  aggregate?: Maybe<UsersAggregateFields>;
  nodes: Array<Users>;
};

export type UsersAggregateBoolExp = {
  bool_and?: InputMaybe<UsersAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<UsersAggregateBoolExpBool_Or>;
  count?: InputMaybe<UsersAggregateBoolExpCount>;
};

export type UsersAggregateBoolExpBool_And = {
  arguments: UsersSelectColumnUsersAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UsersBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UsersAggregateBoolExpBool_Or = {
  arguments: UsersSelectColumnUsersAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UsersBoolExp>;
  predicate: BooleanComparisonExp;
};

export type UsersAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<UsersSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UsersBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "users" */
export type UsersAggregateFields = {
  __typename?: 'usersAggregateFields';
  avg?: Maybe<UsersAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<UsersMaxFields>;
  min?: Maybe<UsersMinFields>;
  stddev?: Maybe<UsersStddevFields>;
  stddevPop?: Maybe<UsersStddevPopFields>;
  stddevSamp?: Maybe<UsersStddevSampFields>;
  sum?: Maybe<UsersSumFields>;
  varPop?: Maybe<UsersVarPopFields>;
  varSamp?: Maybe<UsersVarSampFields>;
  variance?: Maybe<UsersVarianceFields>;
};


/** aggregate fields of "users" */
export type UsersAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UsersSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "users" */
export type UsersAggregateOrderBy = {
  avg?: InputMaybe<UsersAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<UsersMaxOrderBy>;
  min?: InputMaybe<UsersMinOrderBy>;
  stddev?: InputMaybe<UsersStddevOrderBy>;
  stddevPop?: InputMaybe<UsersStddevPopOrderBy>;
  stddevSamp?: InputMaybe<UsersStddevSampOrderBy>;
  sum?: InputMaybe<UsersSumOrderBy>;
  varPop?: InputMaybe<UsersVarPopOrderBy>;
  varSamp?: InputMaybe<UsersVarSampOrderBy>;
  variance?: InputMaybe<UsersVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "users" */
export type UsersArrRelInsertInput = {
  data: Array<UsersInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<UsersOnConflict>;
};

/** aggregate avg on columns */
export type UsersAvgFields = {
  __typename?: 'usersAvgFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "users" */
export type UsersAvgOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export type UsersBoolExp = {
  _and?: InputMaybe<Array<UsersBoolExp>>;
  _not?: InputMaybe<UsersBoolExp>;
  _or?: InputMaybe<Array<UsersBoolExp>>;
  address?: InputMaybe<StringComparisonExp>;
  assignedRoles?: InputMaybe<UserRolesBoolExp>;
  assignedRolesAggregate?: InputMaybe<UserRolesAggregateBoolExp>;
  authoredNotes?: InputMaybe<NotesBoolExp>;
  authoredNotesAggregate?: InputMaybe<NotesAggregateBoolExp>;
  backupConsultantPayrolls?: InputMaybe<PayrollsBoolExp>;
  backupConsultantPayrollsAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  billingItems?: InputMaybe<BillingItemsBoolExp>;
  billingItemsAggregate?: InputMaybe<BillingItemsAggregateBoolExp>;
  billingItemsConfirmedBy?: InputMaybe<BillingItemsBoolExp>;
  billingItemsConfirmedByAggregate?: InputMaybe<BillingItemsAggregateBoolExp>;
  billingItemsUserId?: InputMaybe<BillingItemsBoolExp>;
  billingItemsUserIdAggregate?: InputMaybe<BillingItemsAggregateBoolExp>;
  bio?: InputMaybe<StringComparisonExp>;
  clerkUserId?: InputMaybe<StringComparisonExp>;
  computedName?: InputMaybe<StringComparisonExp>;
  consultantAssignments?: InputMaybe<PayrollAssignmentsBoolExp>;
  consultantAssignmentsAggregate?: InputMaybe<PayrollAssignmentsAggregateBoolExp>;
  createdAssignmentAudits?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
  createdAssignmentAuditsAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateBoolExp>;
  createdAssignments?: InputMaybe<PayrollAssignmentsBoolExp>;
  createdAssignmentsAggregate?: InputMaybe<PayrollAssignmentsAggregateBoolExp>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  createdBillingEvents?: InputMaybe<BillingEventLogsBoolExp>;
  createdBillingEventsAggregate?: InputMaybe<BillingEventLogsAggregateBoolExp>;
  createdPermissionOverrides?: InputMaybe<PermissionOverridesBoolExp>;
  createdPermissionOverridesAggregate?: InputMaybe<PermissionOverridesAggregateBoolExp>;
  dataBackups?: InputMaybe<DataBackupsBoolExp>;
  dataBackupsAggregate?: InputMaybe<DataBackupsAggregateBoolExp>;
  deactivatedAt?: InputMaybe<TimestamptzComparisonExp>;
  deactivatedBy?: InputMaybe<StringComparisonExp>;
  defaultAdminTimePercentage?: InputMaybe<NumericComparisonExp>;
  email?: InputMaybe<StringComparisonExp>;
  emailDrafts?: InputMaybe<EmailDraftsBoolExp>;
  emailDraftsAggregate?: InputMaybe<EmailDraftsAggregateBoolExp>;
  emailSendLogs?: InputMaybe<EmailSendLogsBoolExp>;
  emailSendLogsAggregate?: InputMaybe<EmailSendLogsAggregateBoolExp>;
  emailTemplates?: InputMaybe<EmailTemplatesBoolExp>;
  emailTemplatesAggregate?: InputMaybe<EmailTemplatesAggregateBoolExp>;
  emailTemplatesCreatedByUserId?: InputMaybe<EmailTemplatesBoolExp>;
  emailTemplatesCreatedByUserIdAggregate?: InputMaybe<EmailTemplatesAggregateBoolExp>;
  firstName?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  image?: InputMaybe<StringComparisonExp>;
  isActive?: InputMaybe<BooleanComparisonExp>;
  isStaff?: InputMaybe<BooleanComparisonExp>;
  lastName?: InputMaybe<StringComparisonExp>;
  managedPayrolls?: InputMaybe<PayrollsBoolExp>;
  managedPayrollsAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  managedTeamMembers?: InputMaybe<UsersBoolExp>;
  managedTeamMembersAggregate?: InputMaybe<UsersAggregateBoolExp>;
  managedUsers?: InputMaybe<UsersBoolExp>;
  managedUsersAggregate?: InputMaybe<UsersAggregateBoolExp>;
  managerId?: InputMaybe<UuidComparisonExp>;
  managerUser?: InputMaybe<UsersBoolExp>;
  newConsultantAuditTrail?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
  newConsultantAuditTrailAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateBoolExp>;
  originalConsultantAssignments?: InputMaybe<PayrollAssignmentsBoolExp>;
  originalConsultantAssignmentsAggregate?: InputMaybe<PayrollAssignmentsAggregateBoolExp>;
  originalConsultantAuditTrail?: InputMaybe<PayrollAssignmentAuditsBoolExp>;
  originalConsultantAuditTrailAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateBoolExp>;
  phone?: InputMaybe<StringComparisonExp>;
  position?: InputMaybe<UserPositionComparisonExp>;
  primaryConsultantPayrolls?: InputMaybe<PayrollsBoolExp>;
  primaryConsultantPayrollsAggregate?: InputMaybe<PayrollsAggregateBoolExp>;
  role?: InputMaybe<UserRoleComparisonExp>;
  securitySettings?: InputMaybe<SecuritySettingsBoolExp>;
  securitySettingsAggregate?: InputMaybe<SecuritySettingsAggregateBoolExp>;
  status?: InputMaybe<UserStatusEnumComparisonExp>;
  statusChangeReason?: InputMaybe<StringComparisonExp>;
  statusChangedAt?: InputMaybe<TimestamptzComparisonExp>;
  statusChangedBy?: InputMaybe<UuidComparisonExp>;
  statusChangedByUser?: InputMaybe<UsersBoolExp>;
  targetedPermissionAudits?: InputMaybe<PermissionAuditLogsBoolExp>;
  targetedPermissionAuditsAggregate?: InputMaybe<PermissionAuditLogsAggregateBoolExp>;
  timeEntries?: InputMaybe<TimeEntriesBoolExp>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateBoolExp>;
  updatedAt?: InputMaybe<TimestamptzComparisonExp>;
  userEmailTemplateFavorites?: InputMaybe<UserEmailTemplateFavoritesBoolExp>;
  userEmailTemplateFavoritesAggregate?: InputMaybe<UserEmailTemplateFavoritesAggregateBoolExp>;
  userInvitations?: InputMaybe<UserInvitationsBoolExp>;
  userInvitationsAcceptedBy?: InputMaybe<UserInvitationsBoolExp>;
  userInvitationsAcceptedByAggregate?: InputMaybe<UserInvitationsAggregateBoolExp>;
  userInvitationsAggregate?: InputMaybe<UserInvitationsAggregateBoolExp>;
  userInvitationsInvitedBy?: InputMaybe<UserInvitationsBoolExp>;
  userInvitationsInvitedByAggregate?: InputMaybe<UserInvitationsAggregateBoolExp>;
  userInvitationsManagerId?: InputMaybe<UserInvitationsBoolExp>;
  userInvitationsManagerIdAggregate?: InputMaybe<UserInvitationsAggregateBoolExp>;
  userLeaveRecords?: InputMaybe<LeaveBoolExp>;
  userLeaveRecordsAggregate?: InputMaybe<LeaveAggregateBoolExp>;
  userPermissionAudits?: InputMaybe<PermissionAuditLogsBoolExp>;
  userPermissionAuditsAggregate?: InputMaybe<PermissionAuditLogsAggregateBoolExp>;
  userPermissionOverrides?: InputMaybe<PermissionOverridesBoolExp>;
  userPermissionOverridesAggregate?: InputMaybe<PermissionOverridesAggregateBoolExp>;
  userSessions?: InputMaybe<UserSessionsBoolExp>;
  userSessionsAggregate?: InputMaybe<UserSessionsAggregateBoolExp>;
  userSkills?: InputMaybe<UserSkillBoolExp>;
  userSkillsAggregate?: InputMaybe<UserSkillAggregateBoolExp>;
  userWorkSchedules?: InputMaybe<WorkScheduleBoolExp>;
  userWorkSchedulesAggregate?: InputMaybe<WorkScheduleAggregateBoolExp>;
  username?: InputMaybe<StringComparisonExp>;
  usersStatusChangedBy?: InputMaybe<UsersBoolExp>;
  usersStatusChangedByAggregate?: InputMaybe<UsersAggregateBoolExp>;
};

/** unique or primary key constraints on table "users" */
export type UsersConstraint =
  /** unique or primary key constraint on columns "clerk_user_id" */
  | 'users_clerk_user_id_key'
  /** unique or primary key constraint on columns "email" */
  | 'users_email_key'
  /** unique or primary key constraint on columns "id" */
  | 'users_pkey'
  /** unique or primary key constraint on columns "username" */
  | 'users_username_key'
  | '%future added value';

/** input type for incrementing numeric columns in table "users" */
export type UsersIncInput = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "users" */
export type UsersInsertInput = {
  /** User address or location */
  address?: InputMaybe<Scalars['String']['input']>;
  assignedRoles?: InputMaybe<UserRolesArrRelInsertInput>;
  authoredNotes?: InputMaybe<NotesArrRelInsertInput>;
  backupConsultantPayrolls?: InputMaybe<PayrollsArrRelInsertInput>;
  billingItems?: InputMaybe<BillingItemsArrRelInsertInput>;
  billingItemsConfirmedBy?: InputMaybe<BillingItemsArrRelInsertInput>;
  billingItemsUserId?: InputMaybe<BillingItemsArrRelInsertInput>;
  /** User biography or description */
  bio?: InputMaybe<Scalars['String']['input']>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: InputMaybe<Scalars['String']['input']>;
  consultantAssignments?: InputMaybe<PayrollAssignmentsArrRelInsertInput>;
  createdAssignmentAudits?: InputMaybe<PayrollAssignmentAuditsArrRelInsertInput>;
  createdAssignments?: InputMaybe<PayrollAssignmentsArrRelInsertInput>;
  /** Timestamp when the user was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  createdBillingEvents?: InputMaybe<BillingEventLogsArrRelInsertInput>;
  createdPermissionOverrides?: InputMaybe<PermissionOverridesArrRelInsertInput>;
  dataBackups?: InputMaybe<DataBackupsArrRelInsertInput>;
  deactivatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deactivatedBy?: InputMaybe<Scalars['String']['input']>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<Scalars['numeric']['input']>;
  /** User's email address (unique) */
  email?: InputMaybe<Scalars['String']['input']>;
  emailDrafts?: InputMaybe<EmailDraftsArrRelInsertInput>;
  emailSendLogs?: InputMaybe<EmailSendLogsArrRelInsertInput>;
  emailTemplates?: InputMaybe<EmailTemplatesArrRelInsertInput>;
  emailTemplatesCreatedByUserId?: InputMaybe<EmailTemplatesArrRelInsertInput>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the user */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** URL to the user's profile image */
  image?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the user is a staff member (vs. external user) */
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  managedPayrolls?: InputMaybe<PayrollsArrRelInsertInput>;
  managedTeamMembers?: InputMaybe<UsersArrRelInsertInput>;
  managedUsers?: InputMaybe<UsersArrRelInsertInput>;
  /** Reference to the user's manager */
  managerId?: InputMaybe<Scalars['uuid']['input']>;
  managerUser?: InputMaybe<UsersObjRelInsertInput>;
  newConsultantAuditTrail?: InputMaybe<PayrollAssignmentAuditsArrRelInsertInput>;
  originalConsultantAssignments?: InputMaybe<PayrollAssignmentsArrRelInsertInput>;
  originalConsultantAuditTrail?: InputMaybe<PayrollAssignmentAuditsArrRelInsertInput>;
  /** User contact phone number */
  phone?: InputMaybe<Scalars['String']['input']>;
  /** Organizational position affecting admin time allocation */
  position?: InputMaybe<Scalars['user_position']['input']>;
  primaryConsultantPayrolls?: InputMaybe<PayrollsArrRelInsertInput>;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role?: InputMaybe<Scalars['user_role']['input']>;
  securitySettings?: InputMaybe<SecuritySettingsArrRelInsertInput>;
  /** Current user status - must be consistent with isActive field */
  status?: InputMaybe<Scalars['user_status_enum']['input']>;
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when status was last changed */
  statusChangedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User ID who changed the status */
  statusChangedBy?: InputMaybe<Scalars['uuid']['input']>;
  statusChangedByUser?: InputMaybe<UsersObjRelInsertInput>;
  targetedPermissionAudits?: InputMaybe<PermissionAuditLogsArrRelInsertInput>;
  timeEntries?: InputMaybe<TimeEntriesArrRelInsertInput>;
  /** Timestamp when the user was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  userEmailTemplateFavorites?: InputMaybe<UserEmailTemplateFavoritesArrRelInsertInput>;
  userInvitations?: InputMaybe<UserInvitationsArrRelInsertInput>;
  userInvitationsAcceptedBy?: InputMaybe<UserInvitationsArrRelInsertInput>;
  userInvitationsInvitedBy?: InputMaybe<UserInvitationsArrRelInsertInput>;
  userInvitationsManagerId?: InputMaybe<UserInvitationsArrRelInsertInput>;
  userLeaveRecords?: InputMaybe<LeaveArrRelInsertInput>;
  userPermissionAudits?: InputMaybe<PermissionAuditLogsArrRelInsertInput>;
  userPermissionOverrides?: InputMaybe<PermissionOverridesArrRelInsertInput>;
  userSessions?: InputMaybe<UserSessionsArrRelInsertInput>;
  userSkills?: InputMaybe<UserSkillArrRelInsertInput>;
  userWorkSchedules?: InputMaybe<WorkScheduleArrRelInsertInput>;
  /** User's unique username for login */
  username?: InputMaybe<Scalars['String']['input']>;
  usersStatusChangedBy?: InputMaybe<UsersArrRelInsertInput>;
};

/** aggregate max on columns */
export type UsersMaxFields = {
  __typename?: 'usersMaxFields';
  /** User address or location */
  address?: Maybe<Scalars['String']['output']>;
  /** User biography or description */
  bio?: Maybe<Scalars['String']['output']>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: Maybe<Scalars['String']['output']>;
  computedName?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the user was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deactivatedAt?: Maybe<Scalars['timestamptz']['output']>;
  deactivatedBy?: Maybe<Scalars['String']['output']>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
  /** User's email address (unique) */
  email?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the user */
  id?: Maybe<Scalars['uuid']['output']>;
  /** URL to the user's profile image */
  image?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  /** Reference to the user's manager */
  managerId?: Maybe<Scalars['uuid']['output']>;
  /** User contact phone number */
  phone?: Maybe<Scalars['String']['output']>;
  /** Organizational position affecting admin time allocation */
  position?: Maybe<Scalars['user_position']['output']>;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role?: Maybe<Scalars['user_role']['output']>;
  /** Current user status - must be consistent with isActive field */
  status?: Maybe<Scalars['user_status_enum']['output']>;
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: Maybe<Scalars['String']['output']>;
  /** Timestamp when status was last changed */
  statusChangedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** User ID who changed the status */
  statusChangedBy?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the user was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** User's unique username for login */
  username?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "users" */
export type UsersMaxOrderBy = {
  /** User address or location */
  address?: InputMaybe<OrderBy>;
  /** User biography or description */
  bio?: InputMaybe<OrderBy>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: InputMaybe<OrderBy>;
  computedName?: InputMaybe<OrderBy>;
  /** Timestamp when the user was created */
  createdAt?: InputMaybe<OrderBy>;
  deactivatedAt?: InputMaybe<OrderBy>;
  deactivatedBy?: InputMaybe<OrderBy>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
  /** User's email address (unique) */
  email?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  /** Unique identifier for the user */
  id?: InputMaybe<OrderBy>;
  /** URL to the user's profile image */
  image?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  /** Reference to the user's manager */
  managerId?: InputMaybe<OrderBy>;
  /** User contact phone number */
  phone?: InputMaybe<OrderBy>;
  /** Organizational position affecting admin time allocation */
  position?: InputMaybe<OrderBy>;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role?: InputMaybe<OrderBy>;
  /** Current user status - must be consistent with isActive field */
  status?: InputMaybe<OrderBy>;
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: InputMaybe<OrderBy>;
  /** Timestamp when status was last changed */
  statusChangedAt?: InputMaybe<OrderBy>;
  /** User ID who changed the status */
  statusChangedBy?: InputMaybe<OrderBy>;
  /** Timestamp when the user was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** User's unique username for login */
  username?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type UsersMinFields = {
  __typename?: 'usersMinFields';
  /** User address or location */
  address?: Maybe<Scalars['String']['output']>;
  /** User biography or description */
  bio?: Maybe<Scalars['String']['output']>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: Maybe<Scalars['String']['output']>;
  computedName?: Maybe<Scalars['String']['output']>;
  /** Timestamp when the user was created */
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  deactivatedAt?: Maybe<Scalars['timestamptz']['output']>;
  deactivatedBy?: Maybe<Scalars['String']['output']>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
  /** User's email address (unique) */
  email?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  /** Unique identifier for the user */
  id?: Maybe<Scalars['uuid']['output']>;
  /** URL to the user's profile image */
  image?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  /** Reference to the user's manager */
  managerId?: Maybe<Scalars['uuid']['output']>;
  /** User contact phone number */
  phone?: Maybe<Scalars['String']['output']>;
  /** Organizational position affecting admin time allocation */
  position?: Maybe<Scalars['user_position']['output']>;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role?: Maybe<Scalars['user_role']['output']>;
  /** Current user status - must be consistent with isActive field */
  status?: Maybe<Scalars['user_status_enum']['output']>;
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: Maybe<Scalars['String']['output']>;
  /** Timestamp when status was last changed */
  statusChangedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** User ID who changed the status */
  statusChangedBy?: Maybe<Scalars['uuid']['output']>;
  /** Timestamp when the user was last updated */
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  /** User's unique username for login */
  username?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "users" */
export type UsersMinOrderBy = {
  /** User address or location */
  address?: InputMaybe<OrderBy>;
  /** User biography or description */
  bio?: InputMaybe<OrderBy>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: InputMaybe<OrderBy>;
  computedName?: InputMaybe<OrderBy>;
  /** Timestamp when the user was created */
  createdAt?: InputMaybe<OrderBy>;
  deactivatedAt?: InputMaybe<OrderBy>;
  deactivatedBy?: InputMaybe<OrderBy>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
  /** User's email address (unique) */
  email?: InputMaybe<OrderBy>;
  firstName?: InputMaybe<OrderBy>;
  /** Unique identifier for the user */
  id?: InputMaybe<OrderBy>;
  /** URL to the user's profile image */
  image?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  /** Reference to the user's manager */
  managerId?: InputMaybe<OrderBy>;
  /** User contact phone number */
  phone?: InputMaybe<OrderBy>;
  /** Organizational position affecting admin time allocation */
  position?: InputMaybe<OrderBy>;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role?: InputMaybe<OrderBy>;
  /** Current user status - must be consistent with isActive field */
  status?: InputMaybe<OrderBy>;
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: InputMaybe<OrderBy>;
  /** Timestamp when status was last changed */
  statusChangedAt?: InputMaybe<OrderBy>;
  /** User ID who changed the status */
  statusChangedBy?: InputMaybe<OrderBy>;
  /** Timestamp when the user was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** User's unique username for login */
  username?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "users" */
export type UsersMutationResponse = {
  __typename?: 'usersMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Users>;
};

/** input type for inserting object relation for remote table "users" */
export type UsersObjRelInsertInput = {
  data: UsersInsertInput;
  /** upsert condition */
  onConflict?: InputMaybe<UsersOnConflict>;
};

/** on_conflict condition type for table "users" */
export type UsersOnConflict = {
  constraint: UsersConstraint;
  updateColumns?: Array<UsersUpdateColumn>;
  where?: InputMaybe<UsersBoolExp>;
};

/** Ordering options when selecting data from "users". */
export type UsersOrderBy = {
  address?: InputMaybe<OrderBy>;
  assignedRolesAggregate?: InputMaybe<UserRolesAggregateOrderBy>;
  authoredNotesAggregate?: InputMaybe<NotesAggregateOrderBy>;
  backupConsultantPayrollsAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  billingItemsAggregate?: InputMaybe<BillingItemsAggregateOrderBy>;
  billingItemsConfirmedByAggregate?: InputMaybe<BillingItemsAggregateOrderBy>;
  billingItemsUserIdAggregate?: InputMaybe<BillingItemsAggregateOrderBy>;
  bio?: InputMaybe<OrderBy>;
  clerkUserId?: InputMaybe<OrderBy>;
  computedName?: InputMaybe<OrderBy>;
  consultantAssignmentsAggregate?: InputMaybe<PayrollAssignmentsAggregateOrderBy>;
  createdAssignmentAuditsAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateOrderBy>;
  createdAssignmentsAggregate?: InputMaybe<PayrollAssignmentsAggregateOrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  createdBillingEventsAggregate?: InputMaybe<BillingEventLogsAggregateOrderBy>;
  createdPermissionOverridesAggregate?: InputMaybe<PermissionOverridesAggregateOrderBy>;
  dataBackupsAggregate?: InputMaybe<DataBackupsAggregateOrderBy>;
  deactivatedAt?: InputMaybe<OrderBy>;
  deactivatedBy?: InputMaybe<OrderBy>;
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  emailDraftsAggregate?: InputMaybe<EmailDraftsAggregateOrderBy>;
  emailSendLogsAggregate?: InputMaybe<EmailSendLogsAggregateOrderBy>;
  emailTemplatesAggregate?: InputMaybe<EmailTemplatesAggregateOrderBy>;
  emailTemplatesCreatedByUserIdAggregate?: InputMaybe<EmailTemplatesAggregateOrderBy>;
  firstName?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  image?: InputMaybe<OrderBy>;
  isActive?: InputMaybe<OrderBy>;
  isStaff?: InputMaybe<OrderBy>;
  lastName?: InputMaybe<OrderBy>;
  managedPayrollsAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  managedTeamMembersAggregate?: InputMaybe<UsersAggregateOrderBy>;
  managedUsersAggregate?: InputMaybe<UsersAggregateOrderBy>;
  managerId?: InputMaybe<OrderBy>;
  managerUser?: InputMaybe<UsersOrderBy>;
  newConsultantAuditTrailAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateOrderBy>;
  originalConsultantAssignmentsAggregate?: InputMaybe<PayrollAssignmentsAggregateOrderBy>;
  originalConsultantAuditTrailAggregate?: InputMaybe<PayrollAssignmentAuditsAggregateOrderBy>;
  phone?: InputMaybe<OrderBy>;
  position?: InputMaybe<OrderBy>;
  primaryConsultantPayrollsAggregate?: InputMaybe<PayrollsAggregateOrderBy>;
  role?: InputMaybe<OrderBy>;
  securitySettingsAggregate?: InputMaybe<SecuritySettingsAggregateOrderBy>;
  status?: InputMaybe<OrderBy>;
  statusChangeReason?: InputMaybe<OrderBy>;
  statusChangedAt?: InputMaybe<OrderBy>;
  statusChangedBy?: InputMaybe<OrderBy>;
  statusChangedByUser?: InputMaybe<UsersOrderBy>;
  targetedPermissionAuditsAggregate?: InputMaybe<PermissionAuditLogsAggregateOrderBy>;
  timeEntriesAggregate?: InputMaybe<TimeEntriesAggregateOrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  userEmailTemplateFavoritesAggregate?: InputMaybe<UserEmailTemplateFavoritesAggregateOrderBy>;
  userInvitationsAcceptedByAggregate?: InputMaybe<UserInvitationsAggregateOrderBy>;
  userInvitationsAggregate?: InputMaybe<UserInvitationsAggregateOrderBy>;
  userInvitationsInvitedByAggregate?: InputMaybe<UserInvitationsAggregateOrderBy>;
  userInvitationsManagerIdAggregate?: InputMaybe<UserInvitationsAggregateOrderBy>;
  userLeaveRecordsAggregate?: InputMaybe<LeaveAggregateOrderBy>;
  userPermissionAuditsAggregate?: InputMaybe<PermissionAuditLogsAggregateOrderBy>;
  userPermissionOverridesAggregate?: InputMaybe<PermissionOverridesAggregateOrderBy>;
  userSessionsAggregate?: InputMaybe<UserSessionsAggregateOrderBy>;
  userSkillsAggregate?: InputMaybe<UserSkillAggregateOrderBy>;
  userWorkSchedulesAggregate?: InputMaybe<WorkScheduleAggregateOrderBy>;
  username?: InputMaybe<OrderBy>;
  usersStatusChangedByAggregate?: InputMaybe<UsersAggregateOrderBy>;
};

/** primary key columns input for table: users */
export type UsersPkColumnsInput = {
  /** Unique identifier for the user */
  id: Scalars['uuid']['input'];
};

/** columns and relationships of "users_role_backup" */
export type UsersRoleBackup = {
  __typename?: 'usersRoleBackup';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  role?: Maybe<Scalars['user_role']['output']>;
};

/** aggregated selection of "users_role_backup" */
export type UsersRoleBackupAggregate = {
  __typename?: 'usersRoleBackupAggregate';
  aggregate?: Maybe<UsersRoleBackupAggregateFields>;
  nodes: Array<UsersRoleBackup>;
};

/** aggregate fields of "users_role_backup" */
export type UsersRoleBackupAggregateFields = {
  __typename?: 'usersRoleBackupAggregateFields';
  count: Scalars['Int']['output'];
  max?: Maybe<UsersRoleBackupMaxFields>;
  min?: Maybe<UsersRoleBackupMinFields>;
};


/** aggregate fields of "users_role_backup" */
export type UsersRoleBackupAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<UsersRoleBackupSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "users_role_backup". All fields are combined with a logical 'AND'. */
export type UsersRoleBackupBoolExp = {
  _and?: InputMaybe<Array<UsersRoleBackupBoolExp>>;
  _not?: InputMaybe<UsersRoleBackupBoolExp>;
  _or?: InputMaybe<Array<UsersRoleBackupBoolExp>>;
  createdAt?: InputMaybe<TimestamptzComparisonExp>;
  email?: InputMaybe<StringComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  role?: InputMaybe<UserRoleComparisonExp>;
};

/** input type for inserting data into table "users_role_backup" */
export type UsersRoleBackupInsertInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  role?: InputMaybe<Scalars['user_role']['input']>;
};

/** aggregate max on columns */
export type UsersRoleBackupMaxFields = {
  __typename?: 'usersRoleBackupMaxFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  role?: Maybe<Scalars['user_role']['output']>;
};

/** aggregate min on columns */
export type UsersRoleBackupMinFields = {
  __typename?: 'usersRoleBackupMinFields';
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['uuid']['output']>;
  role?: Maybe<Scalars['user_role']['output']>;
};

/** response of any mutation on the table "users_role_backup" */
export type UsersRoleBackupMutationResponse = {
  __typename?: 'usersRoleBackupMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UsersRoleBackup>;
};

/** Ordering options when selecting data from "users_role_backup". */
export type UsersRoleBackupOrderBy = {
  createdAt?: InputMaybe<OrderBy>;
  email?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  role?: InputMaybe<OrderBy>;
};

/** select columns of table "users_role_backup" */
export type UsersRoleBackupSelectColumn =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'email'
  /** column name */
  | 'id'
  /** column name */
  | 'role'
  | '%future added value';

/** input type for updating data in table "users_role_backup" */
export type UsersRoleBackupSetInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  role?: InputMaybe<Scalars['user_role']['input']>;
};

/** Streaming cursor of the table "usersRoleBackup" */
export type UsersRoleBackupStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: UsersRoleBackupStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type UsersRoleBackupStreamCursorValueInput = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['uuid']['input']>;
  role?: InputMaybe<Scalars['user_role']['input']>;
};

export type UsersRoleBackupUpdates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UsersRoleBackupSetInput>;
  /** filter the rows which have to be updated */
  where: UsersRoleBackupBoolExp;
};

/** select columns of table "users" */
export type UsersSelectColumn =
  /** column name */
  | 'address'
  /** column name */
  | 'bio'
  /** column name */
  | 'clerkUserId'
  /** column name */
  | 'computedName'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'deactivatedAt'
  /** column name */
  | 'deactivatedBy'
  /** column name */
  | 'defaultAdminTimePercentage'
  /** column name */
  | 'email'
  /** column name */
  | 'firstName'
  /** column name */
  | 'id'
  /** column name */
  | 'image'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isStaff'
  /** column name */
  | 'lastName'
  /** column name */
  | 'managerId'
  /** column name */
  | 'phone'
  /** column name */
  | 'position'
  /** column name */
  | 'role'
  /** column name */
  | 'status'
  /** column name */
  | 'statusChangeReason'
  /** column name */
  | 'statusChangedAt'
  /** column name */
  | 'statusChangedBy'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'username'
  | '%future added value';

/** select "usersAggregateBoolExpBool_andArgumentsColumns" columns of table "users" */
export type UsersSelectColumnUsersAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'isActive'
  /** column name */
  | 'isStaff'
  | '%future added value';

/** select "usersAggregateBoolExpBool_orArgumentsColumns" columns of table "users" */
export type UsersSelectColumnUsersAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'isActive'
  /** column name */
  | 'isStaff'
  | '%future added value';

/** input type for updating data in table "users" */
export type UsersSetInput = {
  /** User address or location */
  address?: InputMaybe<Scalars['String']['input']>;
  /** User biography or description */
  bio?: InputMaybe<Scalars['String']['input']>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the user was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deactivatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deactivatedBy?: InputMaybe<Scalars['String']['input']>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<Scalars['numeric']['input']>;
  /** User's email address (unique) */
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the user */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** URL to the user's profile image */
  image?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the user is a staff member (vs. external user) */
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** Reference to the user's manager */
  managerId?: InputMaybe<Scalars['uuid']['input']>;
  /** User contact phone number */
  phone?: InputMaybe<Scalars['String']['input']>;
  /** Organizational position affecting admin time allocation */
  position?: InputMaybe<Scalars['user_position']['input']>;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role?: InputMaybe<Scalars['user_role']['input']>;
  /** Current user status - must be consistent with isActive field */
  status?: InputMaybe<Scalars['user_status_enum']['input']>;
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when status was last changed */
  statusChangedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User ID who changed the status */
  statusChangedBy?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the user was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User's unique username for login */
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type UsersStddevFields = {
  __typename?: 'usersStddevFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "users" */
export type UsersStddevOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type UsersStddevPopFields = {
  __typename?: 'usersStddevPopFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "users" */
export type UsersStddevPopOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type UsersStddevSampFields = {
  __typename?: 'usersStddevSampFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "users" */
export type UsersStddevSampOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "users" */
export type UsersStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: UsersStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type UsersStreamCursorValueInput = {
  /** User address or location */
  address?: InputMaybe<Scalars['String']['input']>;
  /** User biography or description */
  bio?: InputMaybe<Scalars['String']['input']>;
  /** External identifier from Clerk authentication service */
  clerkUserId?: InputMaybe<Scalars['String']['input']>;
  computedName?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when the user was created */
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deactivatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deactivatedBy?: InputMaybe<Scalars['String']['input']>;
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<Scalars['numeric']['input']>;
  /** User's email address (unique) */
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  /** Unique identifier for the user */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** URL to the user's profile image */
  image?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the user is a staff member (vs. external user) */
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** Reference to the user's manager */
  managerId?: InputMaybe<Scalars['uuid']['input']>;
  /** User contact phone number */
  phone?: InputMaybe<Scalars['String']['input']>;
  /** Organizational position affecting admin time allocation */
  position?: InputMaybe<Scalars['user_position']['input']>;
  /** User's system role (viewer, consultant, manager, org_admin) */
  role?: InputMaybe<Scalars['user_role']['input']>;
  /** Current user status - must be consistent with isActive field */
  status?: InputMaybe<Scalars['user_status_enum']['input']>;
  /** Reason for the status change (for audit purposes) */
  statusChangeReason?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp when status was last changed */
  statusChangedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User ID who changed the status */
  statusChangedBy?: InputMaybe<Scalars['uuid']['input']>;
  /** Timestamp when the user was last updated */
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  /** User's unique username for login */
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type UsersSumFields = {
  __typename?: 'usersSumFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "users" */
export type UsersSumOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** update columns of table "users" */
export type UsersUpdateColumn =
  /** column name */
  | 'address'
  /** column name */
  | 'bio'
  /** column name */
  | 'clerkUserId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'deactivatedAt'
  /** column name */
  | 'deactivatedBy'
  /** column name */
  | 'defaultAdminTimePercentage'
  /** column name */
  | 'email'
  /** column name */
  | 'firstName'
  /** column name */
  | 'id'
  /** column name */
  | 'image'
  /** column name */
  | 'isActive'
  /** column name */
  | 'isStaff'
  /** column name */
  | 'lastName'
  /** column name */
  | 'managerId'
  /** column name */
  | 'phone'
  /** column name */
  | 'position'
  /** column name */
  | 'role'
  /** column name */
  | 'status'
  /** column name */
  | 'statusChangeReason'
  /** column name */
  | 'statusChangedAt'
  /** column name */
  | 'statusChangedBy'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'username'
  | '%future added value';

export type UsersUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<UsersIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UsersSetInput>;
  /** filter the rows which have to be updated */
  where: UsersBoolExp;
};

/** aggregate varPop on columns */
export type UsersVarPopFields = {
  __typename?: 'usersVarPopFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "users" */
export type UsersVarPopOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type UsersVarSampFields = {
  __typename?: 'usersVarSampFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "users" */
export type UsersVarSampOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type UsersVarianceFields = {
  __typename?: 'usersVarianceFields';
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "users" */
export type UsersVarianceOrderBy = {
  /** Default admin time percentage for this user */
  defaultAdminTimePercentage?: InputMaybe<OrderBy>;
};

/** columns and relationships of "work_schedule" */
export type WorkSchedule = {
  __typename?: 'workSchedule';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  /** Timestamp when the schedule entry was created */
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  /** Unique identifier for the work schedule entry */
  id: Scalars['uuid']['output'];
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: Maybe<Scalars['timestamp']['output']>;
  /** An object relationship */
  user: Users;
  /** Reference to the user this schedule belongs to */
  userId: Scalars['uuid']['output'];
  /** Whether to use position-based default admin time or custom override */
  usesDefaultAdminTime?: Maybe<Scalars['Boolean']['output']>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay: Scalars['String']['output'];
  /** Number of hours worked on this day */
  workHours: Scalars['numeric']['output'];
};

/** aggregated selection of "work_schedule" */
export type WorkScheduleAggregate = {
  __typename?: 'workScheduleAggregate';
  aggregate?: Maybe<WorkScheduleAggregateFields>;
  nodes: Array<WorkSchedule>;
};

export type WorkScheduleAggregateBoolExp = {
  bool_and?: InputMaybe<WorkScheduleAggregateBoolExpBool_And>;
  bool_or?: InputMaybe<WorkScheduleAggregateBoolExpBool_Or>;
  count?: InputMaybe<WorkScheduleAggregateBoolExpCount>;
};

export type WorkScheduleAggregateBoolExpBool_And = {
  arguments: WorkScheduleSelectColumnWorkScheduleAggregateBoolExpBool_AndArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<WorkScheduleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type WorkScheduleAggregateBoolExpBool_Or = {
  arguments: WorkScheduleSelectColumnWorkScheduleAggregateBoolExpBool_OrArgumentsColumns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<WorkScheduleBoolExp>;
  predicate: BooleanComparisonExp;
};

export type WorkScheduleAggregateBoolExpCount = {
  arguments?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<WorkScheduleBoolExp>;
  predicate: IntComparisonExp;
};

/** aggregate fields of "work_schedule" */
export type WorkScheduleAggregateFields = {
  __typename?: 'workScheduleAggregateFields';
  avg?: Maybe<WorkScheduleAvgFields>;
  count: Scalars['Int']['output'];
  max?: Maybe<WorkScheduleMaxFields>;
  min?: Maybe<WorkScheduleMinFields>;
  stddev?: Maybe<WorkScheduleStddevFields>;
  stddevPop?: Maybe<WorkScheduleStddevPopFields>;
  stddevSamp?: Maybe<WorkScheduleStddevSampFields>;
  sum?: Maybe<WorkScheduleSumFields>;
  varPop?: Maybe<WorkScheduleVarPopFields>;
  varSamp?: Maybe<WorkScheduleVarSampFields>;
  variance?: Maybe<WorkScheduleVarianceFields>;
};


/** aggregate fields of "work_schedule" */
export type WorkScheduleAggregateFieldsCountArgs = {
  columns?: InputMaybe<Array<WorkScheduleSelectColumn>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "work_schedule" */
export type WorkScheduleAggregateOrderBy = {
  avg?: InputMaybe<WorkScheduleAvgOrderBy>;
  count?: InputMaybe<OrderBy>;
  max?: InputMaybe<WorkScheduleMaxOrderBy>;
  min?: InputMaybe<WorkScheduleMinOrderBy>;
  stddev?: InputMaybe<WorkScheduleStddevOrderBy>;
  stddevPop?: InputMaybe<WorkScheduleStddevPopOrderBy>;
  stddevSamp?: InputMaybe<WorkScheduleStddevSampOrderBy>;
  sum?: InputMaybe<WorkScheduleSumOrderBy>;
  varPop?: InputMaybe<WorkScheduleVarPopOrderBy>;
  varSamp?: InputMaybe<WorkScheduleVarSampOrderBy>;
  variance?: InputMaybe<WorkScheduleVarianceOrderBy>;
};

/** input type for inserting array relation for remote table "work_schedule" */
export type WorkScheduleArrRelInsertInput = {
  data: Array<WorkScheduleInsertInput>;
  /** upsert condition */
  onConflict?: InputMaybe<WorkScheduleOnConflict>;
};

/** aggregate avg on columns */
export type WorkScheduleAvgFields = {
  __typename?: 'workScheduleAvgFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "work_schedule" */
export type WorkScheduleAvgOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** Boolean expression to filter rows from the table "work_schedule". All fields are combined with a logical 'AND'. */
export type WorkScheduleBoolExp = {
  _and?: InputMaybe<Array<WorkScheduleBoolExp>>;
  _not?: InputMaybe<WorkScheduleBoolExp>;
  _or?: InputMaybe<Array<WorkScheduleBoolExp>>;
  adminTimeHours?: InputMaybe<NumericComparisonExp>;
  createdAt?: InputMaybe<TimestampComparisonExp>;
  id?: InputMaybe<UuidComparisonExp>;
  payrollCapacityHours?: InputMaybe<NumericComparisonExp>;
  updatedAt?: InputMaybe<TimestampComparisonExp>;
  user?: InputMaybe<UsersBoolExp>;
  userId?: InputMaybe<UuidComparisonExp>;
  usesDefaultAdminTime?: InputMaybe<BooleanComparisonExp>;
  workDay?: InputMaybe<StringComparisonExp>;
  workHours?: InputMaybe<NumericComparisonExp>;
};

/** unique or primary key constraints on table "work_schedule" */
export type WorkScheduleConstraint =
  /** unique or primary key constraint on columns "user_id", "work_day" */
  | 'unique_user_work_day'
  /** unique or primary key constraint on columns "id" */
  | 'work_schedule_pkey'
  | '%future added value';

/** input type for incrementing numeric columns in table "work_schedule" */
export type WorkScheduleIncInput = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "work_schedule" */
export type WorkScheduleInsertInput = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Timestamp when the schedule entry was created */
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Unique identifier for the work schedule entry */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: InputMaybe<Scalars['timestamp']['input']>;
  user?: InputMaybe<UsersObjRelInsertInput>;
  /** Reference to the user this schedule belongs to */
  userId?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether to use position-based default admin time or custom override */
  usesDefaultAdminTime?: InputMaybe<Scalars['Boolean']['input']>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay?: InputMaybe<Scalars['String']['input']>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate max on columns */
export type WorkScheduleMaxFields = {
  __typename?: 'workScheduleMaxFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  /** Timestamp when the schedule entry was created */
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  /** Unique identifier for the work schedule entry */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: Maybe<Scalars['timestamp']['output']>;
  /** Reference to the user this schedule belongs to */
  userId?: Maybe<Scalars['uuid']['output']>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay?: Maybe<Scalars['String']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['numeric']['output']>;
};

/** order by max() on columns of table "work_schedule" */
export type WorkScheduleMaxOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Timestamp when the schedule entry was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Unique identifier for the work schedule entry */
  id?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** Reference to the user this schedule belongs to */
  userId?: InputMaybe<OrderBy>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** aggregate min on columns */
export type WorkScheduleMinFields = {
  __typename?: 'workScheduleMinFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  /** Timestamp when the schedule entry was created */
  createdAt?: Maybe<Scalars['timestamp']['output']>;
  /** Unique identifier for the work schedule entry */
  id?: Maybe<Scalars['uuid']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: Maybe<Scalars['timestamp']['output']>;
  /** Reference to the user this schedule belongs to */
  userId?: Maybe<Scalars['uuid']['output']>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay?: Maybe<Scalars['String']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['numeric']['output']>;
};

/** order by min() on columns of table "work_schedule" */
export type WorkScheduleMinOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Timestamp when the schedule entry was created */
  createdAt?: InputMaybe<OrderBy>;
  /** Unique identifier for the work schedule entry */
  id?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: InputMaybe<OrderBy>;
  /** Reference to the user this schedule belongs to */
  userId?: InputMaybe<OrderBy>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** response of any mutation on the table "work_schedule" */
export type WorkScheduleMutationResponse = {
  __typename?: 'workScheduleMutationResponse';
  /** number of rows affected by the mutation */
  affectedRows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<WorkSchedule>;
};

/** on_conflict condition type for table "work_schedule" */
export type WorkScheduleOnConflict = {
  constraint: WorkScheduleConstraint;
  updateColumns?: Array<WorkScheduleUpdateColumn>;
  where?: InputMaybe<WorkScheduleBoolExp>;
};

/** Ordering options when selecting data from "work_schedule". */
export type WorkScheduleOrderBy = {
  adminTimeHours?: InputMaybe<OrderBy>;
  createdAt?: InputMaybe<OrderBy>;
  id?: InputMaybe<OrderBy>;
  payrollCapacityHours?: InputMaybe<OrderBy>;
  updatedAt?: InputMaybe<OrderBy>;
  user?: InputMaybe<UsersOrderBy>;
  userId?: InputMaybe<OrderBy>;
  usesDefaultAdminTime?: InputMaybe<OrderBy>;
  workDay?: InputMaybe<OrderBy>;
  workHours?: InputMaybe<OrderBy>;
};

/** primary key columns input for table: work_schedule */
export type WorkSchedulePkColumnsInput = {
  /** Unique identifier for the work schedule entry */
  id: Scalars['uuid']['input'];
};

/** select columns of table "work_schedule" */
export type WorkScheduleSelectColumn =
  /** column name */
  | 'adminTimeHours'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollCapacityHours'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  /** column name */
  | 'usesDefaultAdminTime'
  /** column name */
  | 'workDay'
  /** column name */
  | 'workHours'
  | '%future added value';

/** select "workScheduleAggregateBoolExpBool_andArgumentsColumns" columns of table "work_schedule" */
export type WorkScheduleSelectColumnWorkScheduleAggregateBoolExpBool_AndArgumentsColumns =
  /** column name */
  | 'usesDefaultAdminTime'
  | '%future added value';

/** select "workScheduleAggregateBoolExpBool_orArgumentsColumns" columns of table "work_schedule" */
export type WorkScheduleSelectColumnWorkScheduleAggregateBoolExpBool_OrArgumentsColumns =
  /** column name */
  | 'usesDefaultAdminTime'
  | '%future added value';

/** input type for updating data in table "work_schedule" */
export type WorkScheduleSetInput = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Timestamp when the schedule entry was created */
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Unique identifier for the work schedule entry */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Reference to the user this schedule belongs to */
  userId?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether to use position-based default admin time or custom override */
  usesDefaultAdminTime?: InputMaybe<Scalars['Boolean']['input']>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay?: InputMaybe<Scalars['String']['input']>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate stddev on columns */
export type WorkScheduleStddevFields = {
  __typename?: 'workScheduleStddevFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "work_schedule" */
export type WorkScheduleStddevOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** aggregate stddevPop on columns */
export type WorkScheduleStddevPopFields = {
  __typename?: 'workScheduleStddevPopFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevPop() on columns of table "work_schedule" */
export type WorkScheduleStddevPopOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** aggregate stddevSamp on columns */
export type WorkScheduleStddevSampFields = {
  __typename?: 'workScheduleStddevSampFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** order by stddevSamp() on columns of table "work_schedule" */
export type WorkScheduleStddevSampOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** Streaming cursor of the table "workSchedule" */
export type WorkScheduleStreamCursorInput = {
  /** Stream column input with initial value */
  initialValue: WorkScheduleStreamCursorValueInput;
  /** cursor ordering */
  ordering?: InputMaybe<CursorOrdering>;
};

/** Initial value of the column from where the streaming should start */
export type WorkScheduleStreamCursorValueInput = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Timestamp when the schedule entry was created */
  createdAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Unique identifier for the work schedule entry */
  id?: InputMaybe<Scalars['uuid']['input']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<Scalars['numeric']['input']>;
  /** Timestamp when the schedule entry was last updated */
  updatedAt?: InputMaybe<Scalars['timestamp']['input']>;
  /** Reference to the user this schedule belongs to */
  userId?: InputMaybe<Scalars['uuid']['input']>;
  /** Whether to use position-based default admin time or custom override */
  usesDefaultAdminTime?: InputMaybe<Scalars['Boolean']['input']>;
  /** Day of the week (Monday, Tuesday, etc.) */
  workDay?: InputMaybe<Scalars['String']['input']>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate sum on columns */
export type WorkScheduleSumFields = {
  __typename?: 'workScheduleSumFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['numeric']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['numeric']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "work_schedule" */
export type WorkScheduleSumOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** update columns of table "work_schedule" */
export type WorkScheduleUpdateColumn =
  /** column name */
  | 'adminTimeHours'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'payrollCapacityHours'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'userId'
  /** column name */
  | 'usesDefaultAdminTime'
  /** column name */
  | 'workDay'
  /** column name */
  | 'workHours'
  | '%future added value';

export type WorkScheduleUpdates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<WorkScheduleIncInput>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<WorkScheduleSetInput>;
  /** filter the rows which have to be updated */
  where: WorkScheduleBoolExp;
};

/** aggregate varPop on columns */
export type WorkScheduleVarPopFields = {
  __typename?: 'workScheduleVarPopFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** order by varPop() on columns of table "work_schedule" */
export type WorkScheduleVarPopOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** aggregate varSamp on columns */
export type WorkScheduleVarSampFields = {
  __typename?: 'workScheduleVarSampFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** order by varSamp() on columns of table "work_schedule" */
export type WorkScheduleVarSampOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

/** aggregate variance on columns */
export type WorkScheduleVarianceFields = {
  __typename?: 'workScheduleVarianceFields';
  /** Hours allocated to administrative tasks */
  adminTimeHours?: Maybe<Scalars['Float']['output']>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: Maybe<Scalars['Float']['output']>;
  /** Number of hours worked on this day */
  workHours?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "work_schedule" */
export type WorkScheduleVarianceOrderBy = {
  /** Hours allocated to administrative tasks */
  adminTimeHours?: InputMaybe<OrderBy>;
  /** Hours available for payroll processing (work_hours - admin_time_hours) */
  payrollCapacityHours?: InputMaybe<OrderBy>;
  /** Number of hours worked on this day */
  workHours?: InputMaybe<OrderBy>;
};

export type UserMinimalFragment = { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string };

export type UserCoreSharedFragment = { __typename?: 'users', role: any, isActive?: boolean | null, id: string, firstName: string, lastName: string, computedName?: string | null, email: string };

export type UserBasicFragment = { __typename?: 'users', clerkUserId?: string | null, createdAt?: string | null, updatedAt?: string | null, role: any, isActive?: boolean | null, id: string, firstName: string, lastName: string, computedName?: string | null, email: string };

export type UserBaseFragment = { __typename?: 'users', clerkUserId?: string | null, createdAt?: string | null, updatedAt?: string | null, role: any, isActive?: boolean | null, id: string, firstName: string, lastName: string, computedName?: string | null, email: string };

export type UserWithRoleFragment = { __typename?: 'users', username?: string | null, isStaff?: boolean | null, clerkUserId?: string | null, createdAt?: string | null, updatedAt?: string | null, role: any, isActive?: boolean | null, id: string, firstName: string, lastName: string, computedName?: string | null, email: string };

export type UserProfileFragment = { __typename?: 'users', clerkUserId?: string | null, image?: string | null, managerId?: string | null, deactivatedAt?: string | null, deactivatedBy?: string | null, username?: string | null, isStaff?: boolean | null, createdAt?: string | null, updatedAt?: string | null, role: any, isActive?: boolean | null, id: string, firstName: string, lastName: string, computedName?: string | null, email: string, managerUser?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null };

export type UserSearchResultFragment = { __typename?: 'users', username?: string | null, isStaff?: boolean | null, role: any, isActive?: boolean | null, id: string, firstName: string, lastName: string, computedName?: string | null, email: string };

export type ClientMinimalFragment = { __typename?: 'clients', id: string, name: string };

export type ClientBaseFragment = { __typename?: 'clients', id: string, name: string, active?: boolean | null, contactEmail?: string | null, contactPerson?: string | null, contactPhone?: string | null, createdAt?: string | null };

export type ClientWithStatsFragment = { __typename?: 'clients', id: string, name: string, active?: boolean | null, contactEmail?: string | null, contactPerson?: string | null, contactPhone?: string | null, createdAt?: string | null, currentEmployeeCount: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', sum?: { __typename?: 'payrollsSumFields', employeeCount?: number | null } | null } | null }, activePayrollCount: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', count: number } | null } };

export type ClientListBaseFragment = { __typename?: 'clients', id: string, name: string, active?: boolean | null, contactEmail?: string | null, contactPerson?: string | null, contactPhone?: string | null, createdAt?: string | null, payrollCount: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', count: number } | null } };

export type PayrollMinimalFragment = { __typename?: 'payrolls', id: string, name: string, employeeCount?: number | null, status: any };

export type PayrollBaseFragment = { __typename?: 'payrolls', id: string, name: string, employeeCount?: number | null, status: any, payrollSystem?: string | null, processingTime: number, processingDaysBeforeEft: number, versionNumber?: number | null, supersededDate?: string | null, createdAt?: string | null, updatedAt?: string | null };

export type PayrollWithClientFragment = { __typename?: 'payrolls', clientId: string, id: string, name: string, employeeCount?: number | null, status: any, payrollSystem?: string | null, processingTime: number, processingDaysBeforeEft: number, versionNumber?: number | null, supersededDate?: string | null, createdAt?: string | null, updatedAt?: string | null, client: { __typename?: 'clients', id: string, name: string, active?: boolean | null } };

export type PayrollListItemFragment = { __typename?: 'payrolls', primaryConsultantUserId?: string | null, backupConsultantUserId?: string | null, managerUserId?: string | null, createdByUserId?: string | null, cycleId: string, dateTypeId: string, dateValue?: number | null, clientId: string, id: string, name: string, employeeCount?: number | null, status: any, payrollSystem?: string | null, processingTime: number, processingDaysBeforeEft: number, versionNumber?: number | null, supersededDate?: string | null, createdAt?: string | null, updatedAt?: string | null, payrollCycle: { __typename?: 'payrollCycles', id: string, name: any, description?: string | null }, payrollDateType: { __typename?: 'payrollDateTypes', id: string, name: any, description?: string | null }, primaryConsultant?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null, backupConsultant?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null, manager?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null, client: { __typename?: 'clients', id: string, name: string, active?: boolean | null } };

export type PayrollWithDatesFragment = { __typename?: 'payrolls', goLiveDate?: string | null, id: string, name: string, employeeCount?: number | null, status: any, payrollSystem?: string | null, processingTime: number, processingDaysBeforeEft: number, versionNumber?: number | null, supersededDate?: string | null, createdAt?: string | null, updatedAt?: string | null, payrollDates: Array<{ __typename?: 'payrollDates', id: string, originalEftDate: string, adjustedEftDate: string, notes?: string | null }> };

export type PayrollFullDetailFragment = { __typename?: 'payrolls', dateTypeId: string, cycleId: string, dateValue?: number | null, versionReason?: string | null, supersededDate?: string | null, parentPayrollId?: string | null, goLiveDate?: string | null, clientId: string, id: string, name: string, employeeCount?: number | null, status: any, payrollSystem?: string | null, processingTime: number, processingDaysBeforeEft: number, versionNumber?: number | null, createdAt?: string | null, updatedAt?: string | null, parentPayroll?: { __typename?: 'payrolls', id: string, versionNumber?: number | null } | null, childPayrolls: Array<{ __typename?: 'payrolls', id: string, versionNumber?: number | null, versionReason?: string | null, createdAt?: string | null }>, primaryConsultant?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null, backupConsultant?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null, manager?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null, payrollDates: Array<{ __typename?: 'payrollDates', id: string, originalEftDate: string, adjustedEftDate: string, notes?: string | null }>, client: { __typename?: 'clients', id: string, name: string, active?: boolean | null } };

export type NoteWithAuthorFragment = { __typename?: 'notes', id: string, content: string, isImportant?: boolean | null, createdAt?: any | null, entityId: string, entityType: string, authorUser?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null };

export type PermissionBaseFragment = { __typename?: 'permissions', id: string, resourceId: string, description?: string | null, legacyPermissionName?: string | null, action: any };

export type RoleWithPermissionsFragment = { __typename?: 'roles', id: string, name: string, displayName: string, description?: string | null, isSystemRole: boolean, priority: number, assignedPermissions: Array<{ __typename?: 'rolePermissions', grantedPermission: { __typename?: 'permissions', id: string, resourceId: string, description?: string | null, legacyPermissionName?: string | null, action: any } }> };

export type AuditLogEntryFragment = { __typename?: 'auditLogs', id: string, userId?: string | null, userEmail?: string | null, userRole?: string | null, action: string, resourceType: string, resourceId?: string | null, eventTime: string, success?: boolean | null, errorMessage?: string | null, ipAddress?: any | null, userAgent?: string | null, requestId?: string | null, sessionId?: string | null, metadata?: any | null, oldValues?: any | null, newValues?: any | null, createdAt?: string | null };

export type AuthEventFragment = { __typename?: 'authEvents', id: string, userId?: string | null, userEmail?: string | null, eventType: string, eventTime: string, success?: boolean | null, failureReason?: string | null, ipAddress?: any | null, userAgent?: string | null, metadata?: any | null };

export type DataAccessLogFragment = { __typename?: 'dataAccessLogs', id: string, userId: string, resourceType: string, resourceId?: string | null, accessType: string, accessedAt: string, dataClassification?: string | null, fieldsAccessed?: Array<string> | null, rowCount?: number | null, ipAddress?: any | null, metadata?: any | null };

export type PermissionChangeFragment = { __typename?: 'permissionChanges', id: string, changedAt: string, changedByUserId: string, targetUserId?: string | null, targetRoleId?: string | null, changeType: string, permissionType?: string | null, oldPermissions?: any | null, newPermissions?: any | null, reason?: string | null, approvedByUserId?: string | null };

export type PayrollDateInfoFragment = { __typename?: 'payrollDates', id: string, originalEftDate: string, adjustedEftDate: string, notes?: string | null, createdAt?: string | null };

export type PermissionOverrideInfoFragment = { __typename?: 'permissionOverrides', id: string, userId?: string | null, role?: string | null, resource: string, operation: string, granted: boolean, reason?: string | null, conditions?: any | null, expiresAt?: string | null, createdBy?: string | null, createdAt: string };

export type LogAuditEventMutationVariables = Exact<{
  input: AuditLogsInsertInput;
}>;


export type LogAuditEventMutation = { __typename?: 'mutation_root', insertAuditLogsOne?: { __typename?: 'auditLogs', id: string, eventTime: string } | null };

export type InsertFileMutationVariables = Exact<{
  input: FilesInsertInput;
}>;


export type InsertFileMutation = { __typename?: 'mutation_root', insertFile?: { __typename?: 'files', id: string, filename: string, bucket: string, objectKey: string, size?: number | null, mimetype?: string | null, url?: string | null, clientId?: string | null, payrollId?: string | null, uploadedBy?: string | null, category?: string | null, isPublic?: boolean | null, metadata?: any | null, fileType?: string | null, createdAt?: string | null } | null };

export type UpdateFileMetadataMutationVariables = Exact<{
  id: Scalars['uuid']['input'];
  updates: FilesSetInput;
}>;


export type UpdateFileMetadataMutation = { __typename?: 'mutation_root', updateFileById?: { __typename?: 'files', id: string, filename: string, bucket: string, objectKey: string, size?: number | null, mimetype?: string | null, url?: string | null, clientId?: string | null, payrollId?: string | null, uploadedBy?: string | null, category?: string | null, isPublic?: boolean | null, metadata?: any | null, fileType?: string | null, createdAt?: string | null } | null };

export type DeleteFileMutationVariables = Exact<{
  id: Scalars['uuid']['input'];
}>;


export type DeleteFileMutation = { __typename?: 'mutation_root', deleteFileById?: { __typename?: 'files', id: string, filename: string, objectKey: string } | null };

export type RefreshDataMutationVariables = Exact<{ [key: string]: never; }>;


export type RefreshDataMutation = { __typename: 'mutation_root' };

export type GetDashboardMetricsQueryVariables = Exact<{
  userId: Scalars['uuid']['input'];
}>;


export type GetDashboardMetricsQuery = { __typename?: 'query_root', clientsAggregate: { __typename?: 'clientsAggregate', aggregate?: { __typename?: 'clientsAggregateFields', count: number } | null }, activePayrollsAggregate: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', count: number } | null }, totalEmployeesAggregate: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', sum?: { __typename?: 'payrollsSumFields', employeeCount?: number | null } | null } | null }, upcomingPayrolls: Array<{ __typename?: 'payrolls', id: string, name: string, employeeCount?: number | null, status: any, client: { __typename?: 'clients', id: string, name: string } }> };

export type GetDashboardStatsOptimizedQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type GetDashboardStatsOptimizedQuery = { __typename?: 'query_root', clientsAggregate: { __typename?: 'clientsAggregate', aggregate?: { __typename?: 'clientsAggregateFields', count: number } | null }, totalPayrolls: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', count: number } | null }, activePayrolls: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', count: number } | null }, upcomingPayrolls: Array<{ __typename?: 'payrolls', id: string, name: string, status: any, client: { __typename?: 'clients', id: string, name: string }, nextEftDate: Array<{ __typename?: 'payrollDates', originalEftDate: string, adjustedEftDate: string, processingDate: string }> }> };

export type GetClientsDashboardStatsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetClientsDashboardStatsQuery = { __typename?: 'query_root', activeClientsCount: { __typename?: 'clientsAggregate', aggregate?: { __typename?: 'clientsAggregateFields', count: number } | null }, totalPayrollsCount: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', count: number } | null }, totalEmployeesSum: { __typename?: 'payrollsAggregate', aggregate?: { __typename?: 'payrollsAggregateFields', sum?: { __typename?: 'payrollsSumFields', employeeCount?: number | null } | null } | null }, clientsNeedingAttention: Array<{ __typename?: 'clients', id: string, name: string }> };

export type GetCurrentUserQueryVariables = Exact<{
  userId: Scalars['uuid']['input'];
}>;


export type GetCurrentUserQuery = { __typename?: 'query_root', user?: { __typename?: 'users', clerkUserId?: string | null, image?: string | null, managerId?: string | null, deactivatedAt?: string | null, deactivatedBy?: string | null, username?: string | null, isStaff?: boolean | null, createdAt?: string | null, updatedAt?: string | null, role: any, isActive?: boolean | null, id: string, firstName: string, lastName: string, computedName?: string | null, email: string, managerUser?: { __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string } | null } | null };

export type GetUsersForDropdownQueryVariables = Exact<{
  role?: InputMaybe<Scalars['user_role']['input']>;
}>;


export type GetUsersForDropdownQuery = { __typename?: 'query_root', users: Array<{ __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string }> };

export type GetSystemHealthQueryVariables = Exact<{ [key: string]: never; }>;


export type GetSystemHealthQuery = { __typename?: 'query_root', databaseHealth: Array<{ __typename?: 'users', id: string }>, recentActivity: { __typename?: 'auditLogsAggregate', aggregate?: { __typename?: 'auditLogsAggregateFields', count: number } | null } };

export type GlobalSearchQueryVariables = Exact<{
  searchTerm: Scalars['String']['input'];
}>;


export type GlobalSearchQuery = { __typename?: 'query_root', clients: Array<{ __typename?: 'clients', id: string, name: string }>, users: Array<{ __typename?: 'users', id: string, firstName: string, lastName: string, computedName?: string | null, email: string }>, payrolls: Array<{ __typename?: 'payrolls', id: string, name: string, employeeCount?: number | null, status: any, client: { __typename?: 'clients', id: string, name: string } }> };

export type GetFileByIdQueryVariables = Exact<{
  id: Scalars['uuid']['input'];
}>;


export type GetFileByIdQuery = { __typename?: 'query_root', fileById?: { __typename?: 'files', id: string, filename: string, bucket: string, objectKey: string, size?: number | null, mimetype?: string | null, url?: string | null, clientId?: string | null, payrollId?: string | null, uploadedBy?: string | null, category?: string | null, isPublic?: boolean | null, metadata?: any | null, fileType?: string | null, createdAt?: string | null, client?: { __typename?: 'clients', name: string } | null, payroll?: { __typename?: 'payrolls', name: string } | null, uploader?: { __typename?: 'users', firstName: string, lastName: string, computedName?: string | null } | null } | null };

export type ListFilesQueryVariables = Exact<{
  where?: InputMaybe<FilesBoolExp>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<FilesOrderBy> | FilesOrderBy>;
}>;


export type ListFilesQuery = { __typename?: 'query_root', files: Array<{ __typename?: 'files', id: string, filename: string, bucket: string, objectKey: string, size?: number | null, mimetype?: string | null, url?: string | null, clientId?: string | null, payrollId?: string | null, uploadedBy?: string | null, category?: string | null, isPublic?: boolean | null, metadata?: any | null, fileType?: string | null, createdAt?: string | null, client?: { __typename?: 'clients', name: string } | null, payroll?: { __typename?: 'payrolls', name: string } | null, uploader?: { __typename?: 'users', firstName: string, lastName: string, computedName?: string | null } | null }>, filesAggregate: { __typename?: 'filesAggregate', aggregate?: { __typename?: 'filesAggregateFields', count: number } | null } };

export type RecentActivitySubscriptionVariables = Exact<{
  resourceTypes?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
}>;


export type RecentActivitySubscription = { __typename?: 'subscription_root', auditLogs: Array<{ __typename?: 'auditLogs', id: string, userId?: string | null, userEmail?: string | null, userRole?: string | null, action: string, resourceType: string, resourceId?: string | null, eventTime: string, success?: boolean | null, errorMessage?: string | null, ipAddress?: any | null, userAgent?: string | null, requestId?: string | null, sessionId?: string | null, metadata?: any | null, oldValues?: any | null, newValues?: any | null, createdAt?: string | null }> };

export type AuthenticationEventsSubscriptionVariables = Exact<{
  userId?: InputMaybe<Scalars['uuid']['input']>;
}>;


export type AuthenticationEventsSubscription = { __typename?: 'subscription_root', authEvents: Array<{ __typename?: 'authEvents', id: string, userId?: string | null, userEmail?: string | null, eventType: string, eventTime: string, success?: boolean | null, failureReason?: string | null, ipAddress?: any | null, userAgent?: string | null, metadata?: any | null }> };

export type SensitiveDataAccessSubscriptionVariables = Exact<{
  resourceTypes: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type SensitiveDataAccessSubscription = { __typename?: 'subscription_root', dataAccessLogs: Array<{ __typename?: 'dataAccessLogs', id: string, userId: string, resourceType: string, resourceId?: string | null, accessType: string, accessedAt: string, dataClassification?: string | null, fieldsAccessed?: Array<string> | null, rowCount?: number | null, ipAddress?: any | null, metadata?: any | null }> };

export type PermissionChangeStreamSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type PermissionChangeStreamSubscription = { __typename?: 'subscription_root', permissionChanges: Array<{ __typename?: 'permissionChanges', id: string, changedAt: string, changedByUserId: string, targetUserId?: string | null, targetRoleId?: string | null, changeType: string, permissionType?: string | null, oldPermissions?: any | null, newPermissions?: any | null, reason?: string | null, approvedByUserId?: string | null }> };

export const UserMinimalFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]} as unknown as DocumentNode<UserMinimalFragment, unknown>;
export const UserCoreSharedFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserCoreShared"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]} as unknown as DocumentNode<UserCoreSharedFragment, unknown>;
export const UserBasicFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserBasic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserCoreShared"}},{"kind":"Field","name":{"kind":"Name","value":"clerkUserId"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserCoreShared"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}}]} as unknown as DocumentNode<UserBasicFragment, unknown>;
export const UserBaseFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserBasic"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserCoreShared"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserBasic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserCoreShared"}},{"kind":"Field","name":{"kind":"Name","value":"clerkUserId"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<UserBaseFragment, unknown>;
export const UserWithRoleFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserWithRole"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserBasic"}},{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"isStaff"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserCoreShared"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserBasic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserCoreShared"}},{"kind":"Field","name":{"kind":"Name","value":"clerkUserId"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<UserWithRoleFragment, unknown>;
export const UserProfileFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserWithRole"}},{"kind":"Field","name":{"kind":"Name","value":"clerkUserId"}},{"kind":"Field","name":{"kind":"Name","value":"image"}},{"kind":"Field","name":{"kind":"Name","value":"managerId"}},{"kind":"Field","name":{"kind":"Name","value":"deactivatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"deactivatedBy"}},{"kind":"Field","name":{"kind":"Name","value":"managerUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserCoreShared"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserBasic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserCoreShared"}},{"kind":"Field","name":{"kind":"Name","value":"clerkUserId"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserWithRole"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserBasic"}},{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"isStaff"}}]}}]} as unknown as DocumentNode<UserProfileFragment, unknown>;
export const UserSearchResultFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserSearchResult"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserCoreShared"}},{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"isStaff"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserCoreShared"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}}]} as unknown as DocumentNode<UserSearchResultFragment, unknown>;
export const ClientMinimalFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]} as unknown as DocumentNode<ClientMinimalFragment, unknown>;
export const ClientBaseFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"contactEmail"}},{"kind":"Field","name":{"kind":"Name","value":"contactPerson"}},{"kind":"Field","name":{"kind":"Name","value":"contactPhone"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]} as unknown as DocumentNode<ClientBaseFragment, unknown>;
export const ClientWithStatsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientWithStats"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ClientBase"}},{"kind":"Field","alias":{"kind":"Name","value":"currentEmployeeCount"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"activePayrollCount"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"Active","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"contactEmail"}},{"kind":"Field","name":{"kind":"Name","value":"contactPerson"}},{"kind":"Field","name":{"kind":"Name","value":"contactPhone"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]} as unknown as DocumentNode<ClientWithStatsFragment, unknown>;
export const ClientListBaseFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientListBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ClientBase"}},{"kind":"Field","alias":{"kind":"Name","value":"payrollCount"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"contactEmail"}},{"kind":"Field","name":{"kind":"Name","value":"contactPerson"}},{"kind":"Field","name":{"kind":"Name","value":"contactPhone"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]} as unknown as DocumentNode<ClientListBaseFragment, unknown>;
export const PayrollMinimalFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<PayrollMinimalFragment, unknown>;
export const PayrollBaseFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"payrollSystem"}},{"kind":"Field","name":{"kind":"Name","value":"processingTime"}},{"kind":"Field","name":{"kind":"Name","value":"processingDaysBeforeEft"}},{"kind":"Field","name":{"kind":"Name","value":"versionNumber"}},{"kind":"Field","name":{"kind":"Name","value":"supersededDate"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<PayrollBaseFragment, unknown>;
export const PayrollWithClientFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollWithClient"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollBase"}},{"kind":"Field","name":{"kind":"Name","value":"clientId"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"active"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"payrollSystem"}},{"kind":"Field","name":{"kind":"Name","value":"processingTime"}},{"kind":"Field","name":{"kind":"Name","value":"processingDaysBeforeEft"}},{"kind":"Field","name":{"kind":"Name","value":"versionNumber"}},{"kind":"Field","name":{"kind":"Name","value":"supersededDate"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<PayrollWithClientFragment, unknown>;
export const PayrollListItemFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollListItem"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollWithClient"}},{"kind":"Field","name":{"kind":"Name","value":"primaryConsultantUserId"}},{"kind":"Field","name":{"kind":"Name","value":"backupConsultantUserId"}},{"kind":"Field","name":{"kind":"Name","value":"managerUserId"}},{"kind":"Field","name":{"kind":"Name","value":"createdByUserId"}},{"kind":"Field","name":{"kind":"Name","value":"cycleId"}},{"kind":"Field","name":{"kind":"Name","value":"dateTypeId"}},{"kind":"Field","name":{"kind":"Name","value":"dateValue"}},{"kind":"Field","name":{"kind":"Name","value":"payrollCycle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}},{"kind":"Field","name":{"kind":"Name","value":"payrollDateType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}},{"kind":"Field","name":{"kind":"Name","value":"primaryConsultant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"backupConsultant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"manager"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"payrollSystem"}},{"kind":"Field","name":{"kind":"Name","value":"processingTime"}},{"kind":"Field","name":{"kind":"Name","value":"processingDaysBeforeEft"}},{"kind":"Field","name":{"kind":"Name","value":"versionNumber"}},{"kind":"Field","name":{"kind":"Name","value":"supersededDate"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollWithClient"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollBase"}},{"kind":"Field","name":{"kind":"Name","value":"clientId"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"active"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]} as unknown as DocumentNode<PayrollListItemFragment, unknown>;
export const PayrollWithDatesFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollWithDates"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollBase"}},{"kind":"Field","name":{"kind":"Name","value":"goLiveDate"}},{"kind":"Field","name":{"kind":"Name","value":"payrollDates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"originalEftDate"},"value":{"kind":"EnumValue","value":"ASC"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"originalEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"adjustedEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"payrollSystem"}},{"kind":"Field","name":{"kind":"Name","value":"processingTime"}},{"kind":"Field","name":{"kind":"Name","value":"processingDaysBeforeEft"}},{"kind":"Field","name":{"kind":"Name","value":"versionNumber"}},{"kind":"Field","name":{"kind":"Name","value":"supersededDate"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<PayrollWithDatesFragment, unknown>;
export const PayrollFullDetailFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollFullDetail"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollWithDates"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollWithClient"}},{"kind":"Field","name":{"kind":"Name","value":"dateTypeId"}},{"kind":"Field","name":{"kind":"Name","value":"cycleId"}},{"kind":"Field","name":{"kind":"Name","value":"dateValue"}},{"kind":"Field","name":{"kind":"Name","value":"versionReason"}},{"kind":"Field","name":{"kind":"Name","value":"supersededDate"}},{"kind":"Field","name":{"kind":"Name","value":"parentPayrollId"}},{"kind":"Field","name":{"kind":"Name","value":"parentPayroll"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"versionNumber"}}]}},{"kind":"Field","name":{"kind":"Name","value":"childPayrolls"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"versionNumber"},"value":{"kind":"EnumValue","value":"DESC"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"versionNumber"}},{"kind":"Field","name":{"kind":"Name","value":"versionReason"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}},{"kind":"Field","name":{"kind":"Name","value":"primaryConsultant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"backupConsultant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"manager"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"payrollSystem"}},{"kind":"Field","name":{"kind":"Name","value":"processingTime"}},{"kind":"Field","name":{"kind":"Name","value":"processingDaysBeforeEft"}},{"kind":"Field","name":{"kind":"Name","value":"versionNumber"}},{"kind":"Field","name":{"kind":"Name","value":"supersededDate"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollWithDates"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollBase"}},{"kind":"Field","name":{"kind":"Name","value":"goLiveDate"}},{"kind":"Field","name":{"kind":"Name","value":"payrollDates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"originalEftDate"},"value":{"kind":"EnumValue","value":"ASC"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"originalEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"adjustedEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollWithClient"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollBase"}},{"kind":"Field","name":{"kind":"Name","value":"clientId"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"active"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]} as unknown as DocumentNode<PayrollFullDetailFragment, unknown>;
export const NoteWithAuthorFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NoteWithAuthor"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"notes"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"content"}},{"kind":"Field","name":{"kind":"Name","value":"isImportant"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"entityId"}},{"kind":"Field","name":{"kind":"Name","value":"entityType"}},{"kind":"Field","name":{"kind":"Name","value":"authorUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]} as unknown as DocumentNode<NoteWithAuthorFragment, unknown>;
export const PermissionBaseFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PermissionBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"permissions"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"resourceId"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"legacyPermissionName"}},{"kind":"Field","name":{"kind":"Name","value":"action"}}]}}]} as unknown as DocumentNode<PermissionBaseFragment, unknown>;
export const RoleWithPermissionsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RoleWithPermissions"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"roles"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isSystemRole"}},{"kind":"Field","name":{"kind":"Name","value":"priority"}},{"kind":"Field","name":{"kind":"Name","value":"assignedPermissions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"grantedPermission"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PermissionBase"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PermissionBase"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"permissions"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"resourceId"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"legacyPermissionName"}},{"kind":"Field","name":{"kind":"Name","value":"action"}}]}}]} as unknown as DocumentNode<RoleWithPermissionsFragment, unknown>;
export const AuditLogEntryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuditLogEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"auditLogs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"userEmail"}},{"kind":"Field","name":{"kind":"Name","value":"userRole"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"resourceType"}},{"kind":"Field","name":{"kind":"Name","value":"resourceId"}},{"kind":"Field","name":{"kind":"Name","value":"eventTime"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"errorMessage"}},{"kind":"Field","name":{"kind":"Name","value":"ipAddress"}},{"kind":"Field","name":{"kind":"Name","value":"userAgent"}},{"kind":"Field","name":{"kind":"Name","value":"requestId"}},{"kind":"Field","name":{"kind":"Name","value":"sessionId"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}},{"kind":"Field","name":{"kind":"Name","value":"oldValues"}},{"kind":"Field","name":{"kind":"Name","value":"newValues"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]} as unknown as DocumentNode<AuditLogEntryFragment, unknown>;
export const AuthEventFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"authEvents"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"userEmail"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"eventTime"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"failureReason"}},{"kind":"Field","name":{"kind":"Name","value":"ipAddress"}},{"kind":"Field","name":{"kind":"Name","value":"userAgent"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}}]}}]} as unknown as DocumentNode<AuthEventFragment, unknown>;
export const DataAccessLogFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"DataAccessLog"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"dataAccessLogs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"resourceType"}},{"kind":"Field","name":{"kind":"Name","value":"resourceId"}},{"kind":"Field","name":{"kind":"Name","value":"accessType"}},{"kind":"Field","name":{"kind":"Name","value":"accessedAt"}},{"kind":"Field","name":{"kind":"Name","value":"dataClassification"}},{"kind":"Field","name":{"kind":"Name","value":"fieldsAccessed"}},{"kind":"Field","name":{"kind":"Name","value":"rowCount"}},{"kind":"Field","name":{"kind":"Name","value":"ipAddress"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}}]}}]} as unknown as DocumentNode<DataAccessLogFragment, unknown>;
export const PermissionChangeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PermissionChange"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"permissionChanges"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"changedAt"}},{"kind":"Field","name":{"kind":"Name","value":"changedByUserId"}},{"kind":"Field","name":{"kind":"Name","value":"targetUserId"}},{"kind":"Field","name":{"kind":"Name","value":"targetRoleId"}},{"kind":"Field","name":{"kind":"Name","value":"changeType"}},{"kind":"Field","name":{"kind":"Name","value":"permissionType"}},{"kind":"Field","name":{"kind":"Name","value":"oldPermissions"}},{"kind":"Field","name":{"kind":"Name","value":"newPermissions"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"approvedByUserId"}}]}}]} as unknown as DocumentNode<PermissionChangeFragment, unknown>;
export const PayrollDateInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollDateInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrollDates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"originalEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"adjustedEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]} as unknown as DocumentNode<PayrollDateInfoFragment, unknown>;
export const PermissionOverrideInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PermissionOverrideInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"permissionOverrides"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"resource"}},{"kind":"Field","name":{"kind":"Name","value":"operation"}},{"kind":"Field","name":{"kind":"Name","value":"granted"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"conditions"}},{"kind":"Field","name":{"kind":"Name","value":"expiresAt"}},{"kind":"Field","name":{"kind":"Name","value":"createdBy"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]} as unknown as DocumentNode<PermissionOverrideInfoFragment, unknown>;
export const LogAuditEventDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"LogAuditEvent"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"auditLogsInsertInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"insertAuditLogsOne"},"name":{"kind":"Name","value":"insertAuditLog"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"eventTime"}}]}}]}}]} as unknown as DocumentNode<LogAuditEventMutation, LogAuditEventMutationVariables>;
export const InsertFileDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"InsertFile"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"filesInsertInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"insertFile"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"object"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"filename"}},{"kind":"Field","name":{"kind":"Name","value":"bucket"}},{"kind":"Field","name":{"kind":"Name","value":"objectKey"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"mimetype"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"clientId"}},{"kind":"Field","name":{"kind":"Name","value":"payrollId"}},{"kind":"Field","name":{"kind":"Name","value":"uploadedBy"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"isPublic"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}},{"kind":"Field","name":{"kind":"Name","value":"fileType"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]} as unknown as DocumentNode<InsertFileMutation, InsertFileMutationVariables>;
export const UpdateFileMetadataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateFileMetadata"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updates"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"filesSetInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateFileById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pkColumns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updates"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"filename"}},{"kind":"Field","name":{"kind":"Name","value":"bucket"}},{"kind":"Field","name":{"kind":"Name","value":"objectKey"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"mimetype"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"clientId"}},{"kind":"Field","name":{"kind":"Name","value":"payrollId"}},{"kind":"Field","name":{"kind":"Name","value":"uploadedBy"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"isPublic"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}},{"kind":"Field","name":{"kind":"Name","value":"fileType"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]} as unknown as DocumentNode<UpdateFileMetadataMutation, UpdateFileMetadataMutationVariables>;
export const DeleteFileDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteFile"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteFileById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"filename"}},{"kind":"Field","name":{"kind":"Name","value":"objectKey"}}]}}]}}]} as unknown as DocumentNode<DeleteFileMutation, DeleteFileMutationVariables>;
export const RefreshDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RefreshData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}}]}}]} as unknown as DocumentNode<RefreshDataMutation, RefreshDataMutationVariables>;
export const GetDashboardMetricsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetDashboardMetrics"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"clientsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"active"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"activePayrollsAggregate"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_nin"},"value":{"kind":"ListValue","values":[{"kind":"StringValue","value":"Completed","block":false},{"kind":"StringValue","value":"Failed","block":false}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"totalEmployeesAggregate"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"upcomingPayrolls"},"name":{"kind":"Name","value":"payrolls"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_nin"},"value":{"kind":"ListValue","values":[{"kind":"StringValue","value":"Completed","block":false},{"kind":"StringValue","value":"Failed","block":false},{"kind":"StringValue","value":"Cancelled","block":false}]}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"updatedAt"},"value":{"kind":"EnumValue","value":"DESC"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ClientMinimal"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]} as unknown as DocumentNode<GetDashboardMetricsQuery, GetDashboardMetricsQueryVariables>;
export const GetDashboardStatsOptimizedDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetDashboardStatsOptimized"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}},"defaultValue":{"kind":"IntValue","value":"10"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"clientsAggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"totalPayrolls"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"activePayrolls"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"Active","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"upcomingPayrolls"},"name":{"kind":"Name","value":"payrolls"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"status"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"Active","block":false}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"payrollDates"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"adjustedEftDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_gte"},"value":{"kind":"StringValue","value":"now()","block":false}}]}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"updatedAt"},"value":{"kind":"EnumValue","value":"DESC"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"nextEftDate"},"name":{"kind":"Name","value":"payrollDates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"adjustedEftDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_gte"},"value":{"kind":"StringValue","value":"now()","block":false}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"adjustedEftDate"},"value":{"kind":"EnumValue","value":"ASC"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"originalEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"adjustedEftDate"}},{"kind":"Field","name":{"kind":"Name","value":"processingDate"}}]}}]}}]}}]} as unknown as DocumentNode<GetDashboardStatsOptimizedQuery, GetDashboardStatsOptimizedQueryVariables>;
export const GetClientsDashboardStatsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetClientsDashboardStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"activeClientsCount"},"name":{"kind":"Name","value":"clientsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"active"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"totalPayrollsCount"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"totalEmployeesSum"},"name":{"kind":"Name","value":"payrollsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"clientsNeedingAttention"},"name":{"kind":"Name","value":"clients"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"active"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"_not"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"payrolls"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ClientMinimal"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]} as unknown as DocumentNode<GetClientsDashboardStatsQuery, GetClientsDashboardStatsQueryVariables>;
export const GetCurrentUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetCurrentUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"user"},"name":{"kind":"Name","value":"userById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserProfile"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserCoreShared"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserBasic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserCoreShared"}},{"kind":"Field","name":{"kind":"Name","value":"clerkUserId"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserWithRole"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserBasic"}},{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"isStaff"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserProfile"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserWithRole"}},{"kind":"Field","name":{"kind":"Name","value":"clerkUserId"}},{"kind":"Field","name":{"kind":"Name","value":"image"}},{"kind":"Field","name":{"kind":"Name","value":"managerId"}},{"kind":"Field","name":{"kind":"Name","value":"deactivatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"deactivatedBy"}},{"kind":"Field","name":{"kind":"Name","value":"managerUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}}]}}]} as unknown as DocumentNode<GetCurrentUserQuery, GetCurrentUserQueryVariables>;
export const GetUsersForDropdownDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetUsersForDropdown"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"role"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"user_role"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"isActive"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"BooleanValue","value":true}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"role"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"role"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"computedName"},"value":{"kind":"EnumValue","value":"ASC"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]} as unknown as DocumentNode<GetUsersForDropdownQuery, GetUsersForDropdownQueryVariables>;
export const GetSystemHealthDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetSystemHealth"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"databaseHealth"},"name":{"kind":"Name","value":"users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"recentActivity"},"name":{"kind":"Name","value":"auditLogsAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"eventTime"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_gte"},"value":{"kind":"StringValue","value":"now() - interval '1 hour'","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<GetSystemHealthQuery, GetSystemHealthQueryVariables>;
export const GlobalSearchDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GlobalSearch"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"clients"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"contactEmail"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}}}]}}]}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ClientMinimal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_or"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"computedName"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"firstName"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"lastName"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}}}]}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"email"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}}}]}}]}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"UserMinimal"}}]}},{"kind":"Field","name":{"kind":"Name","value":"payrolls"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"client"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_ilike"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchTerm"}}}]}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"supersededDate"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_isNull"},"value":{"kind":"BooleanValue","value":true}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PayrollMinimal"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ClientMinimal"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ClientMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"clients"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UserMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"users"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PayrollMinimal"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"payrolls"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"employeeCount"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<GlobalSearchQuery, GlobalSearchQueryVariables>;
export const GetFileByIdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetFileById"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fileById"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"filename"}},{"kind":"Field","name":{"kind":"Name","value":"bucket"}},{"kind":"Field","name":{"kind":"Name","value":"objectKey"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"mimetype"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"clientId"}},{"kind":"Field","name":{"kind":"Name","value":"payrollId"}},{"kind":"Field","name":{"kind":"Name","value":"uploadedBy"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"isPublic"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}},{"kind":"Field","name":{"kind":"Name","value":"fileType"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"payroll"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"uploader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}}]}}]}}]}}]} as unknown as DocumentNode<GetFileByIdQuery, GetFileByIdQueryVariables>;
export const ListFilesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ListFiles"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"filesBoolExp"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"filesOrderBy"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"files"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"filename"}},{"kind":"Field","name":{"kind":"Name","value":"bucket"}},{"kind":"Field","name":{"kind":"Name","value":"objectKey"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"mimetype"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"clientId"}},{"kind":"Field","name":{"kind":"Name","value":"payrollId"}},{"kind":"Field","name":{"kind":"Name","value":"uploadedBy"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"isPublic"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}},{"kind":"Field","name":{"kind":"Name","value":"fileType"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"client"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"payroll"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"uploader"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"computedName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"filesAggregate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<ListFilesQuery, ListFilesQueryVariables>;
export const RecentActivityDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"RecentActivity"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"resourceTypes"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"auditLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"resourceType"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"resourceTypes"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"eventTime"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_gte"},"value":{"kind":"StringValue","value":"now() - interval '5 minutes'","block":false}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"eventTime"},"value":{"kind":"EnumValue","value":"DESC"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"20"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuditLogEntry"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuditLogEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"auditLogs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"userEmail"}},{"kind":"Field","name":{"kind":"Name","value":"userRole"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"resourceType"}},{"kind":"Field","name":{"kind":"Name","value":"resourceId"}},{"kind":"Field","name":{"kind":"Name","value":"eventTime"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"errorMessage"}},{"kind":"Field","name":{"kind":"Name","value":"ipAddress"}},{"kind":"Field","name":{"kind":"Name","value":"userAgent"}},{"kind":"Field","name":{"kind":"Name","value":"requestId"}},{"kind":"Field","name":{"kind":"Name","value":"sessionId"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}},{"kind":"Field","name":{"kind":"Name","value":"oldValues"}},{"kind":"Field","name":{"kind":"Name","value":"newValues"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]} as unknown as DocumentNode<RecentActivitySubscription, RecentActivitySubscriptionVariables>;
export const AuthenticationEventsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"AuthenticationEvents"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"userId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userId"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"eventTime"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_gte"},"value":{"kind":"StringValue","value":"now() - interval '10 minutes'","block":false}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"eventTime"},"value":{"kind":"EnumValue","value":"DESC"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AuthEvent"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AuthEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"authEvents"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"userEmail"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"eventTime"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"failureReason"}},{"kind":"Field","name":{"kind":"Name","value":"ipAddress"}},{"kind":"Field","name":{"kind":"Name","value":"userAgent"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}}]}}]} as unknown as DocumentNode<AuthenticationEventsSubscription, AuthenticationEventsSubscriptionVariables>;
export const SensitiveDataAccessDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"SensitiveDataAccess"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"resourceTypes"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dataAccessLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"resourceType"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"resourceTypes"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"accessedAt"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_gte"},"value":{"kind":"StringValue","value":"now() - interval '10 minutes'","block":false}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"accessedAt"},"value":{"kind":"EnumValue","value":"DESC"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DataAccessLog"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"DataAccessLog"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"dataAccessLogs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"resourceType"}},{"kind":"Field","name":{"kind":"Name","value":"resourceId"}},{"kind":"Field","name":{"kind":"Name","value":"accessType"}},{"kind":"Field","name":{"kind":"Name","value":"accessedAt"}},{"kind":"Field","name":{"kind":"Name","value":"dataClassification"}},{"kind":"Field","name":{"kind":"Name","value":"fieldsAccessed"}},{"kind":"Field","name":{"kind":"Name","value":"rowCount"}},{"kind":"Field","name":{"kind":"Name","value":"ipAddress"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}}]}}]} as unknown as DocumentNode<SensitiveDataAccessSubscription, SensitiveDataAccessSubscriptionVariables>;
export const PermissionChangeStreamDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"PermissionChangeStream"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"permissionChanges"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"changedAt"},"value":{"kind":"EnumValue","value":"DESC"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"10"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PermissionChange"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PermissionChange"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"permissionChanges"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"changedAt"}},{"kind":"Field","name":{"kind":"Name","value":"changedByUserId"}},{"kind":"Field","name":{"kind":"Name","value":"targetUserId"}},{"kind":"Field","name":{"kind":"Name","value":"targetRoleId"}},{"kind":"Field","name":{"kind":"Name","value":"changeType"}},{"kind":"Field","name":{"kind":"Name","value":"permissionType"}},{"kind":"Field","name":{"kind":"Name","value":"oldPermissions"}},{"kind":"Field","name":{"kind":"Name","value":"newPermissions"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"approvedByUserId"}}]}}]} as unknown as DocumentNode<PermissionChangeStreamSubscription, PermissionChangeStreamSubscriptionVariables>;