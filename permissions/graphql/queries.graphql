# Permissions Domain Queries

# Resources
query GetResources($where: resources_bool_exp, $order_by: [resources_order_by!]) {
  resources(where: $where, order_by: $order_by) {
    ...ResourceCore
    permissions {
      ...PermissionCore
    }
  }
}

query GetResourceById($id: uuid!) {
  resources_by_pk(id: $id) {
    ...ResourceCore
    permissions(order_by: { action: asc }) {
      ...PermissionCore
    }
  }
}

# Permissions
query GetPermissions($where: permissions_bool_exp, $order_by: [permissions_order_by!]) {
  permissions(where: $where, order_by: $order_by) {
    ...PermissionWithResource
  }
}

query GetPermissionsByResource($resource_name: String!) {
  permissions(
    where: { resource: { name: { _eq: $resource_name } } }
    order_by: { action: asc }
  ) {
    ...PermissionCore
  }
}

# Roles
query GetRoles($where: roles_bool_exp, $order_by: [roles_order_by!]) {
  roles(where: $where, order_by: $order_by) {
    ...RoleWithPermissions
    user_roles_aggregate {
      aggregate {
        count
      }
    }
  }
}

query GetRoleById($id: uuid!) {
  roles_by_pk(id: $id) {
    ...RoleWithPermissions
    user_roles {
      ...UserRoleWithDetails
    }
  }
}

query GetSystemRoles {
  roles(where: { is_system_role: { _eq: true } }, order_by: { priority: asc }) {
    ...RoleCore
  }
}

# User Roles
query GetUserRoles($user_id: uuid!) {
  user_roles(where: { user_id: { _eq: $user_id } }) {
    ...UserRoleWithDetails
  }
}

query GetUsersWithRole($role_id: uuid!) {
  user_roles(where: { role_id: { _eq: $role_id } }) {
    ...UserRoleWithDetails
  }
}

# Feature Flags
query GetFeatureFlags($where: feature_flags_bool_exp) {
  feature_flags(where: $where, order_by: { feature_name: asc }) {
    ...FeatureFlagCore
  }
}

query GetEnabledFeatures($roles: jsonb!) {
  feature_flags(
    where: {
      is_enabled: { _eq: true }
      _or: [
        { allowed_roles: { _eq: [] } }
        { allowed_roles: { _contains: $roles } }
      ]
    }
  ) {
    ...FeatureFlagCore
  }
}

# App Settings
query GetAppSettings {
  app_settings {
    ...AppSettingsCore
  }
}

# Permission Checks
query CheckUserPermission($user_id: uuid!, $resource: String!, $action: String!) {
  user_can_perform_action(
    args: {
      p_user_id: $user_id
      p_resource: $resource
      p_action: $action
    }
  ) {
    can_perform
  }
}

query GetUserEffectivePermissions($user_id: uuid!) {
  get_user_effective_permissions(args: { p_user_id: $user_id }) {
    resource
    action
    granted_by
    source_type
    conditions
  }
}

# Analytics
query GetPermissionAnalytics {
  roles_count: roles_aggregate {
    aggregate {
      count
    }
  }
  
  permissions_count: permissions_aggregate {
    aggregate {
      count
    }
  }
  
  resources_count: resources_aggregate {
    aggregate {
      count
    }
  }
  
  user_roles_count: user_roles_aggregate {
    aggregate {
      count
    }
  }
  
  roles_by_priority: roles(order_by: { priority: asc }) {
    name
    display_name
    priority
    user_roles_aggregate {
      aggregate {
        count
      }
    }
  }
}