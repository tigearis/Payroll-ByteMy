# Audit Domain Mutations

# Log audit event
mutation CreateAuditLog(
  $userId: uuid!
  $action: String!
  $resourceType: String!
  $resourceId: String
  $metadata: jsonb
  $ipAddress: inet
  $userAgent: String
) {
  insertAuditAuditLog(
    objects: [{
      userId: $userId
      action: $action
      resourceType: $resourceType
      resourceId: $resourceId
      metadata: $metadata
      ipAddress: $ipAddress
      userAgent: $userAgent
    }]
  ) {
    returning {
      id
      eventTime
    }
  }
}

# Missing mutation needed by auth logging
mutation CreateAuthEvent(
  $userId: uuid
  $eventType: String!
  $success: Boolean!
  $ipAddress: inet
  $userAgent: String
  $metadata: jsonb
) {
  insertAuditAuthEvents(
    objects: [{
      userId: $userId
      eventType: $eventType
      success: $success
      ipAddress: $ipAddress
      userAgent: $userAgent
      metadata: $metadata
    }]
  ) {
    returning {
      id
      eventTime
    }
  }
}

# Log auth event
mutation LogAuthEvent(
  $eventType: String!
  $userId: uuid
  $metadata: jsonb
  $ipAddress: inet
  $userAgent: String
  $success: Boolean = true
  $failureReason: String
) {
  insertAuditAuthEvents(
    objects: [{
      eventType: $eventType
      userId: $userId
      metadata: $metadata
      ipAddress: $ipAddress
      userAgent: $userAgent
      success: $success
      failureReason: $failureReason
    }]
  ) {
    returning {
      id
      eventTime
    }
  }
}

# Log data access event
mutation LogDataAccessEvent(
  $userId: uuid!
  $resourceType: String!
  $resourceId: String
  $accessType: String!
  $ipAddress: inet
  $metadata: jsonb
) {
  insertAuditDataAccessLog(
    objects: [{
      userId: $userId
      resourceType: $resourceType
      resourceId: $resourceId
      accessType: $accessType
      ipAddress: $ipAddress
      metadata: $metadata
    }]
  ) {
    returning {
      id
      accessedAt
    }
  }
}

# Log permission audit event
mutation LogPermissionAuditEvent(
  $changedByUserId: uuid!
  $targetUserId: uuid
  $changeType: String!
  $reason: String
  $oldPermissions: jsonb
  $newPermissions: jsonb
) {
  insertAuditPermissionChanges(
    objects: [{
      changedByUserId: $changedByUserId
      targetUserId: $targetUserId
      changeType: $changeType
      reason: $reason
      oldPermissions: $oldPermissions
      newPermissions: $newPermissions
    }]
  ) {
    returning {
      id
      changedAt
    }
  }
}

# Delete old audit logs
mutation DeleteOldAuditLogs($beforeDate: timestamptz!) {
  deleteAuditAuditLog(
    where: {eventTime: {_lt: $beforeDate}}
  ) {
    affectedRows
  }
}