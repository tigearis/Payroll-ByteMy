# Audit Domain Fragments

fragment AuditLogCore on audit_audit_log {
  id
  event_time
  user_id
  user_email
  user_role
  action
  resource_type
  resource_id
  old_values
  new_values
  ip_address
  user_agent
  session_id
  request_id
  success
  error_message
  created_at
}

fragment AuditLogWithUser on audit_audit_log {
  ...AuditLogCore
  # Note: Direct user relationship doesn't exist in schema
  # User data is available via user_id and user_email fields
}

fragment DataAccessLogCore on audit_data_access_log {
  id
  accessed_at
  user_id
  resource_type
  resource_id
  access_type
  data_classification
  fields_accessed
  query_executed
  row_count
  ip_address
  session_id
  metadata
}

fragment DataAccessLogWithUser on audit_data_access_log {
  ...DataAccessLogCore
  # Note: Direct user relationship doesn't exist in schema
  # User data is available via user_id field
}

fragment SecurityEventLogCore on audit_auth_events {
  id
  event_time
  event_type
  user_id
  user_email
  ip_address
  user_agent
  success
  failure_reason
  metadata
  created_at
}

fragment SecurityEventLogWithUser on audit_auth_events {
  ...SecurityEventLogCore
  # Note: Direct user relationship doesn't exist in schema
  # User data is available via user_id and user_email fields
}

fragment PermissionChangeCore on audit_permission_changes {
  id
  changed_at
  changed_by_user_id
  target_user_id
  target_role_id
  change_type
  permission_type
  old_permissions
  new_permissions
  reason
  approved_by_user_id
  metadata
}