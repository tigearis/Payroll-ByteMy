# Permissions Domain Mutations

# Resources
mutation CreateSystemResource($object: resourcesInsertInput!) {
  insertResource(object: $object) {
    ...ResourceCore
  }
}

mutation UpdateSystemResource($id: uuid!, $set: resourcesSetInput!) {
  updateResourceById(pkColumns: { id: $id }, _set: $set) {
    ...ResourceCore
  }
}

mutation DeleteSystemResource($id: uuid!) {
  deleteResourceById(id: $id) {
    id
    name
  }
}

# Permissions
mutation CreateSystemPermission($object: permissionsInsertInput!) {
  insertPermission(object: $object) {
    ...PermissionCore
  }
}

mutation UpdateSystemPermission($id: uuid!, $set: permissionsSetInput!) {
  updatePermissionById(pkColumns: { id: $id }, _set: $set) {
    ...PermissionCore
  }
}

mutation DeleteSystemPermission($id: uuid!) {
  deletePermissionById(id: $id) {
    id
    action
  }
}

# Roles
mutation CreateSystemRole($object: rolesInsertInput!) {
  insertRole(object: $object) {
    ...RoleCore
  }
}

mutation UpdateSystemRole($id: uuid!, $set: rolesSetInput!) {
  updateRoleById(pkColumns: { id: $id }, _set: $set) {
    ...RoleCore
  }
}

mutation DeleteSystemRole($id: uuid!) {
  deleteRoleById(id: $id) {
    id
    name
  }
}

# Role Permissions
mutation AssignPermissionToRole($object: rolePermissionsInsertInput!) {
  insertRolePermission(object: $object) {
    ...RolePermissionWithDetails
  }
}

mutation RemovePermissionFromRole($id: uuid!) {
  deleteRolePermissionById(id: $id) {
    id
    roleId
    permissionId
  }
}

mutation UpdateSystemRolePermission($id: uuid!, $set: rolePermissionsSetInput!) {
  updateRolePermissionById(pkColumns: { id: $id }, _set: $set) {
    ...RolePermissionWithDetails
  }
}

# User Roles
mutation AssignSystemRoleToUser($object: userRolesInsertInput!) {
  insertUserRole(object: $object) {
    ...UserRoleWithDetails
  }
}

mutation RemoveSystemRoleFromUser($id: uuid!) {
  deleteUserRoleById(id: $id) {
    id
    userId
    roleId
  }
}

mutation UpdateSystemUserRole($id: uuid!, $set: userRolesSetInput!) {
  updateUserRoleById(pkColumns: { id: $id }, _set: $set) {
    ...UserRoleWithDetails
  }
}

# Feature Flags
mutation CreateFeatureFlag($object: featureFlagsInsertInput!) {
  insertFeatureFlag(object: $object) {
    ...FeatureFlagCore
  }
}

mutation UpdateFeatureFlag($id: uuid!, $set: featureFlagsSetInput!) {
  updateFeatureFlagById(pkColumns: { id: $id }, _set: $set) {
    ...FeatureFlagCore
  }
}

mutation DeleteFeatureFlag($id: uuid!) {
  deleteFeatureFlagById(id: $id) {
    id
    featureName
  }
}

# App Settings
mutation UpdateAppSettings($id: String!, $permissions: jsonb!) {
  updateAppSettingById(
    pkColumns: { id: $id }
    _set: { permissions: $permissions }
  ) {
    ...AppSettingsCore
  }
}
