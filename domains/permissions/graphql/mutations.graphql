# Permissions Domain Mutations

# Resources
mutation CreateResource($object: resources_insert_input!) {
  insertResource(object: $object) {
    ...PermissionsResourceCore
  }
}

mutation UpdateResource($id: uuid!, $set: resources_set_input!) {
  updateResource(pk_columns: { id: $id }, _set: $set) {
    ...PermissionsResourceCore
  }
}

mutation DeleteResource($id: uuid!) {
  deleteResource(id: $id) {
    id
  }
}

# Permissions
mutation CreatePermission($object: permissions_insert_input!) {
  insertPermission(object: $object) {
    ...PermissionsPermissionCore
  }
}

mutation UpdatePermission($id: uuid!, $set: permissions_set_input!) {
  updatePermission(pk_columns: { id: $id }, _set: $set) {
    ...PermissionsPermissionCore
  }
}

mutation DeletePermission($id: uuid!) {
  deletePermission(id: $id) {
    id
  }
}

# Roles
mutation CreateRole($object: roles_insert_input!) {
  insertRole(object: $object) {
    ...PermissionsRoleCore
  }
}

mutation UpdateRole($id: uuid!, $set: roles_set_input!) {
  updateRole(pk_columns: { id: $id }, _set: $set) {
    ...PermissionsRoleCore
  }
}

mutation DeleteRole($id: uuid!) {
  deleteRole(id: $id) {
    id
  }
}

# Role Permissions
mutation AssignPermissionToRole($object: role_permissions_insert_input!) {
  insertRolePermission(object: $object) {
    ...RolePermissionCore
  }
}

mutation RemovePermissionFromRole($roleId: uuid!, $permissionId: uuid!) {
  deleteRolePermissions(
    where: { roleId: { _eq: $roleId }, permissionId: { _eq: $permissionId } }
  ) {
    affected_rows
  }
}

mutation UpdateRolePermission($id: uuid!, $set: role_permissions_set_input!) {
  updateRolePermission(pk_columns: { id: $id }, _set: $set) {
    ...RolePermissionCore
  }
}

# User Roles
mutation AssignRoleToUser($userId: uuid!, $roleId: uuid!) {
  insertUserRole(object: { userId: $userId, roleId: $roleId }) {
    ...UserRoleWithDetails
  }
}

mutation RemoveRoleFromUser($userId: uuid!, $roleId: uuid!) {
  deleteUserRoles(
    where: { userId: { _eq: $userId }, roleId: { _eq: $roleId } }
  ) {
    affected_rows
  }
}

mutation RemoveAllRolesFromUser($userId: uuid!) {
  deleteUserRoles(where: { userId: { _eq: $userId } }) {
    affected_rows
  }
}

mutation ReplaceUserRoles(
  $userId: uuid!
  $objects: [user_roles_insert_input!]!
) {
  deleteUserRoles(where: { userId: { _eq: $userId } }) {
    affected_rows
  }
  insertUserRoles(objects: $objects) {
    returning {
      ...UserRoleWithDetails
    }
  }
}

# Feature Flags
mutation CreateFeatureFlag($object: feature_flags_insert_input!) {
  insert_feature_flags_one(object: $object) {
    ...FeatureFlagCore
  }
}

mutation UpdateFeatureFlag($id: uuid!, $set: feature_flags_set_input!) {
  update_feature_flags_by_pk(pk_columns: { id: $id }, _set: $set) {
    ...FeatureFlagCore
  }
}

mutation ToggleFeatureFlag($id: uuid!, $is_enabled: Boolean!) {
  update_feature_flags_by_pk(
    pk_columns: { id: $id }
    _set: { is_enabled: $is_enabled }
  ) {
    ...FeatureFlagCore
  }
}

mutation DeleteFeatureFlag($id: uuid!) {
  delete_feature_flags_by_pk(id: $id) {
    id
  }
}

# App Settings
mutation UpdateAppSettings($id: String!, $permissions: jsonb!) {
  update_app_settings_by_pk(
    pk_columns: { id: $id }
    _set: { permissions: $permissions }
  ) {
    ...AppSettingsCore
  }
}
