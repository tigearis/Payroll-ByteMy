# Leave Domain Queries
# Security Classification: MEDIUM - Employee leave and HR data
# SOC2 Compliance: Row-level security and audit logging enforced

# Core leave queries
query GetLeave($limit: Int = 50, $offset: Int = 0, $where: LeaveBoolExp) {
  leave(
    limit: $limit
    offset: $offset
    where: $where
    orderBy: { startDate: DESC }
  ) {
    ...LeaveListItem
  }
  leaveAggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query GetLeaveById($id: uuid!) {
  leaveByPk(id: $id) {
    ...LeaveComplete
  }
}

query GetLeaveBasic($id: uuid!) {
  leaveByPk(id: $id) {
    ...LeaveBasic
  }
}

# User-specific leave queries
query GetUserLeave($userId: uuid!) {
  leave(
    where: { userId: { _eq: $userId } }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveWithUser
  }
}

query GetMyLeave($userId: uuid!) {
  leave(
    where: { userId: { _eq: $userId } }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveDetailed
  }
}

query GetUserLeaveById($id: uuid!, $userId: uuid!) {
  leaveByPk(id: $id) {
    ...LeaveWithUser
  }
}

query GetUserLeaveHistory($userId: uuid!, $limit: Int = 100) {
  leave(
    where: { userId: { _eq: $userId } }
    orderBy: { startDate: DESC }
    limit: $limit
  ) {
    ...LeaveListItem
  }
}

# Status-based queries
query GetPendingLeave {
  leave(
    where: { status: { _eq: Pending } }
    orderBy: { startDate: ASC }
  ) {
    ...PendingLeave
  }
}

query GetApprovedLeave {
  leave(
    where: { status: { _eq: Approved } }
    orderBy: { startDate: DESC }
  ) {
    ...ApprovedLeave
  }
}

query GetRejectedLeave {
  leave(
    where: { status: { _eq: Rejected } }
    orderBy: { startDate: DESC }
  ) {
    ...RejectedLeave
  }
}

query GetLeaveByStatus($status: leave_status_enum!) {
  leave(
    where: { status: { _eq: $status } }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveBasic
  }
}

query GetUserPendingLeave($userId: uuid!) {
  leave(
    where: {
      userId: { _eq: $userId }
      status: { _eq: Pending }
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveBasic
  }
}

query GetUserApprovedLeave($userId: uuid!) {
  leave(
    where: {
      userId: { _eq: $userId }
      status: { _eq: Approved }
    }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveBasic
  }
}

# Leave type queries
query GetLeaveByType($leaveType: String!) {
  leave(
    where: { leaveType: { _eq: $leaveType } }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveListItem
  }
}

query GetAnnualLeave {
  leave(
    where: { leaveType: { _eq: "Annual" } }
    orderBy: { startDate: DESC }
  ) {
    ...VacationLeave
  }
}

query GetSickLeave {
  leave(
    where: { leaveType: { _eq: "Sick" } }
    orderBy: { startDate: DESC }
  ) {
    ...SickLeave
  }
}

query GetUnpaidLeave {
  leave(
    where: { leaveType: { _eq: "Unpaid" } }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveBasic
  }
}

query GetOtherLeave {
  leave(
    where: { leaveType: { _eq: "Other" } }
    orderBy: { startDate: DESC }
  ) {
    ...EmergencyLeave
  }
}

# Date range queries
query GetLeaveByDateRange($startDate: date!, $endDate: date!) {
  leave(
    where: {
      _and: [
        { startDate: { _gte: $startDate } }
        { endDate: { _lte: $endDate } }
      ]
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveCalendarItem
  }
}

query GetLeaveInPeriod($startDate: date!, $endDate: date!) {
  leave(
    where: {
      _or: [
        {
          _and: [
            { startDate: { _gte: $startDate, _lte: $endDate } }
          ]
        }
        {
          _and: [
            { endDate: { _gte: $startDate, _lte: $endDate } }
          ]
        }
        {
          _and: [
            { startDate: { _lte: $startDate } }
            { endDate: { _gte: $endDate } }
          ]
        }
      ]
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveCalendarItem
  }
}

query GetUpcomingLeave($limit: Int = 20) {
  leave(
    where: {
      startDate: { _gte: "now()" }
      status: { _eq: Approved }
    }
    orderBy: { startDate: ASC }
    limit: $limit
  ) {
    ...LeaveListItem
  }
}

query GetCurrentLeave {
  leave(
    where: {
      startDate: { _lte: "now()" }
      endDate: { _gte: "now()" }
      status: { _eq: Approved }
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveWithUser
  }
}

# Manager and team queries
query GetTeamLeave($managerId: uuid!) {
  leave(
    where: {
      employee: {
        managerId: { _eq: $managerId }
      }
    }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveWithUser
  }
}

query GetTeamPendingLeave($managerId: uuid!) {
  leave(
    where: {
      employee: {
        managerId: { _eq: $managerId }
      }
      status: { _eq: Pending }
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveWithUser
  }
}

# Dashboard and overview queries
query GetLeaveDashboardStats {
  totalLeave: leaveAggregate {
    aggregate {
      count
    }
  }
  
  pendingLeave: leaveAggregate(
    where: { status: { _eq: Pending } }
  ) {
    aggregate {
      count
    }
  }
  
  approvedLeave: leaveAggregate(
    where: { status: { _eq: Approved } }
  ) {
    aggregate {
      count
    }
  }
  
  currentLeave: leaveAggregate(
    where: {
      startDate: { _lte: "now()" }
      endDate: { _gte: "now()" }
      status: { _eq: Approved }
    }
  ) {
    aggregate {
      count
    }
  }
  
  upcomingLeave: leave(
    where: {
      startDate: { _gte: "now()" }
      status: { _eq: Approved }
    }
    orderBy: { startDate: ASC }
    limit: 5
  ) {
    ...LeaveDashboardCard
  }
}

query GetLeaveOverview {
  leave(orderBy: { startDate: DESC }) {
    ...LeaveListItem
  }
}

# Search and filtering queries
query SearchLeave($searchTerm: String!, $limit: Int = 50) {
  leave(
    where: {
      _or: [
        { reason: { _ilike: $searchTerm } }
        { leaveType: { _ilike: $searchTerm } }
        { employee: { computedName: { _ilike: $searchTerm } } }
      ]
    }
    orderBy: { startDate: DESC }
    limit: $limit
  ) {
    ...LeaveListItem
  }
}

query FilterLeaveByUser($userId: uuid!, $status: leave_status_enum) {
  leave(
    where: {
      userId: { _eq: $userId }
      status: { _eq: $status }
    }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveBasic
  }
}

query FilterLeaveByDateAndType(
  $startDate: date!
  $endDate: date!
  $leaveType: String
) {
  leave(
    where: {
      _and: [
        { startDate: { _gte: $startDate, _lte: $endDate } }
        { leaveType: { _eq: $leaveType } }
      ]
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveListItem
  }
}

# Audit and compliance queries
query GetLeaveForAudit(
  $limit: Int = 100
  $offset: Int = 0
  $where: LeaveBoolExp = {}
) {
  leave(
    limit: $limit
    offset: $offset
    where: $where
    orderBy: { startDate: DESC }
  ) {
    ...LeaveForAudit
  }
}

query GetLeaveApprovalAudit($limit: Int = 50) {
  leave(
    where: { status: { _neq: Pending } }
    orderBy: { startDate: DESC }
    limit: $limit
  ) {
    ...LeaveApprovalAudit
  }
}

query GetUserLeaveAudit($userId: uuid!, $limit: Int = 50) {
  leave(
    where: { userId: { _eq: $userId } }
    orderBy: { startDate: DESC }
    limit: $limit
  ) {
    ...LeaveForAudit
  }
}

# Performance-optimized paginated queries
query GetLeavePaginated(
  $limit: Int = 20
  $offset: Int = 0
  $where: LeaveBoolExp = {}
  $orderBy: [LeaveOrderBy!] = [{ startDate: DESC }]
) {
  leave(
    limit: $limit
    offset: $offset
    where: $where
    orderBy: $orderBy
  ) {
    ...LeaveTableRow
  }

  leaveAggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query GetUserLeavePaginated(
  $userId: uuid!
  $limit: Int = 20
  $offset: Int = 0
  $where: LeaveBoolExp = {}
) {
  leave(
    where: { _and: [{ userId: { _eq: $userId } }, $where] }
    orderBy: { startDate: DESC }
    limit: $limit
    offset: $offset
  ) {
    ...LeaveTableRow
  }

  userLeaveAggregate: leaveAggregate(
    where: { _and: [{ userId: { _eq: $userId } }, $where] }
  ) {
    aggregate {
      count
    }
  }
}

# Quick list queries for performance
query GetLeaveQuickList {
  leave(orderBy: { startDate: DESC }) {
    ...LeaveMinimal
  }
}

query GetMyLeaveQuickList($userId: uuid!) {
  leave(
    where: { userId: { _eq: $userId } }
    orderBy: { startDate: DESC }
  ) {
    ...LeaveMinimal
  }
}

# Calendar view queries
query GetLeaveCalendar($startDate: date!, $endDate: date!) {
  leave(
    where: {
      _and: [
        { startDate: { _lte: $endDate } }
        { endDate: { _gte: $startDate } }
      ]
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveCalendarItem
  }
}

query GetTeamLeaveCalendar($managerId: uuid!, $startDate: date!, $endDate: date!) {
  leave(
    where: {
      _and: [
        { startDate: { _lte: $endDate } }
        { endDate: { _gte: $startDate } }
        { employee: { managerId: { _eq: $managerId } } }
      ]
    }
    orderBy: { startDate: ASC }
  ) {
    ...LeaveCalendarItem
  }
}

# Manager hierarchical queries for leave management
query GetSubordinateUsers($managerId: uuid!) {
  users(
    where: { 
      managerId: { _eq: $managerId }
      isActive: { _eq: true }
    }
    orderBy: { computedName: ASC }
  ) {
    id
    firstName
    lastName
    computedName
    email
    role
    isStaff
    isActive
    managerId
  }
}

query GetManagerTeamForLeave($managerId: uuid!) {
  # Get all users that this manager can create leave for
  users(
    where: {
      _or: [
        # Direct reports
        { managerId: { _eq: $managerId } }
        # Second level reports (reports of reports) - only for org_admin and developer
        { manager: { managerId: { _eq: $managerId } } }
      ]
      isActive: { _eq: true }
    }
    orderBy: { computedName: ASC }
  ) {
    id
    firstName
    lastName
    computedName
    email
    role
    isStaff
    isActive
    managerId
    manager {
      id
      firstName
      lastName
      computedName
      email
      role
    }
  }
}

# Get all active users for developers/admins to create leave
query GetAllUsersForLeave {
  users(
    where: { 
      isActive: { _eq: true }
    }
    orderBy: { computedName: ASC }
  ) {
    id
    firstName
    lastName
    computedName
    email
    role
    isStaff
    isActive
    managerId
    manager {
      id
      firstName
      lastName
      computedName
      email
      role
    }
  }
}