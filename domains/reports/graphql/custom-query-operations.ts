// Import the generated GraphQL documents from types file
import * as types from './generated/graphql';

// Export the GraphQL operations - these are generated by codegen from .graphql files
export const GetUserTablePermissionsDocument = types.GetUserTablePermissionsDocument;
export const SaveCustomQueryTemplateDocument = types.SaveCustomQueryTemplateDocument;
export const GetCustomQueryTemplatesDocument = types.GetCustomQueryTemplatesDocument;
export const GetQueryExecutionHistoryDocument = types.GetQueryExecutionHistoryDocument;
export const GetSchemaMetadataDocument = types.GetSchemaMetadataDocument;

// Also export for backward compatibility with old import names
export const GET_USER_TABLE_PERMISSIONS = GetUserTablePermissionsDocument;
export const SAVE_CUSTOM_QUERY_TEMPLATE = SaveCustomQueryTemplateDocument;
export const GET_CUSTOM_QUERY_TEMPLATES = GetCustomQueryTemplatesDocument;
export const GET_QUERY_EXECUTION_HISTORY = GetQueryExecutionHistoryDocument;
export const GET_SCHEMA_METADATA = GetSchemaMetadataDocument;

// Input types for TypeScript
export interface CustomQueryOptionsInput {
  timeout?: number;
  maxRows?: number;
  allowCached?: boolean;
  cache?: boolean;
  cacheTTL?: number;
}

export interface CustomQueryTemplateInput {
  name: string;
  description?: string;
  query_type: "GraphQL";
  query_text: string;
  parameters?: any; // JSONB field
  is_public?: boolean;
  tags?: string[];
  created_by: string; // UUID of the user
}

export interface CustomQueryTemplateFilterInput {
  createdBy?: string;
  isPublic?: boolean;
  tags?: string[];
  search?: string;
}
