# Users Domain Queries
# Security Classification: CRITICAL - Employee PII and authentication data
# SOC2 Compliance: Strict access controls with audit logging

query GetUsers {
  users(where: { isActive: { _eq: true } }, order_by: { name: asc }) {
    id
    name
    email
    role
    username
    image
    isStaff
    isActive
    managerId
    clerkUserId
  }
}

query GetActiveUsers {
  users(where: { isActive: { _eq: true } }, order_by: { name: asc }) {
    ...UserBasicInfo
  }
}

query GetUserById($id: uuid!) {
  user(id: $id) {
    id
    name
    email
    role
    username
    image
    isStaff
    isActive
    managerId
    clerkUserId
    manager {
      id
      name
      email
      role
    }
  }
}

query GetUserByClerkId($clerkUserId: String!) {
  users(where: { clerkUserId: { _eq: $clerkUserId } }, limit: 1) {
    id
    name
    email
    role
    username
    image
    isStaff
    isActive
    managerId
    clerkUserId
  }
}

query GetUserByEmail($email: String!) {
  users(where: { email: { _eq: $email } }) {
    id
    name
    email
    role
    username
    image
    isStaff
    isActive
    managerId
    clerkUserId
    manager {
      id
      name
      email
      role
    }
  }
}

# Staff-specific queries (replacing old staff domain)
query GetStaffList {
  users(
    where: {
      isActive: { _eq: true }
      role: { _in: ["consultant", "manager", "org_admin"] }
    }
    order_by: { name: asc }
  ) {
    id
    name
    email
    role
    username
    image
    isStaff
    isActive
    managerId
    clerkUserId
    manager {
      id
      name
      email
      role
    }
  }
}

query GetStaffById($id: uuid!) {
  user(id: $id) {
    ...UserForStaff
  }
}

query GetAllUsersList {
  users(where: { isActive: { _eq: true } }, order_by: { name: asc }) {
    id
    name
    email
    role
    username
    image
    isStaff
    isActive
    managerId
    clerkUserId
  }
}

query GetUserProfile($id: uuid!) {
  user(id: $id) {
    ...UserWithProfile
  }
}

query GetUsersWithRoles {
  users(where: { isActive: { _eq: true } }, order_by: { name: asc }) {
    ...UserRoleInfo
  }
}

query GetUserPermissions($id: uuid!) {
  user(id: $id) {
    ...UserPermissionsInfo
  }
}

query SearchUsers($searchTerm: String!) {
  users(
    where: {
      _and: [
        { isActive: { _eq: true } }
        {
          _or: [
            { name: { _ilike: $searchTerm } }
            { email: { _ilike: $searchTerm } }
            { username: { _ilike: $searchTerm } }
          ]
        }
      ]
    }
    order_by: { name: asc }
    limit: 50
  ) {
    ...UserWithProfile
  }
}

# Audit queries - limited fields for compliance
query GetUsersForAudit {
  users(order_by: { createdAt: desc }) {
    ...UserForAudit
  }
}

query GetUserStats {
  usersAggregate {
    aggregate {
      count
    }
  }
  activeUsers: usersAggregate(where: { isActive: { _eq: true } }) {
    aggregate {
      count
    }
  }
  byRole: usersAggregate {
    nodes {
      role
    }
    aggregate {
      count
    }
  }
}

# Authentication helper queries
query GetUserSessionInfo($id: uuid!) {
  user(id: $id) {
    id
    name
    email
    role
    isActive
  }
}

# Extracted from inline GraphQL operations
query GetCurrentUser($currentUserId: uuid!) {
  user(id: $currentUserId) {
    id
    name
    role
    isStaff
    isActive
    managerId
    clerkUserId
  }
}

query GetUserRole($userId: uuid!) {
  user(id: $userId) {
    id
    role
    isStaff
    isActive
  }
}

query GetUserRoleFallback($userId: uuid!) {
  user(id: $userId) {
    id
    role
    isStaff
    isActive
    clerkUserId
  }
}

query GetUsersWithLimit($limit: Int = 10) {
  users(limit: $limit) {
    id
    name
    email
    role
    isStaff
    clerkUserId
  }
}

query GetUserProfileSettings($id: uuid!) {
  user(id: $id) {
    id
    name
    email
    role
    isStaff
    isActive
    clerkUserId
    manager {
      id
      name
      email
    }
  }
}
