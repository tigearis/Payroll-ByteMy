# Permission Management GraphQL Operations

# Get all resources with their available permissions
query GetAllResourcesWithPermissions {
  resources(orderBy: { name: ASC }) {
    id
    name
    displayName
    description
    permissions(orderBy: { action: ASC }) {
      id
      action
      description
      legacyPermissionName
      resource {
        id
        name
        displayName
      }
    }
  }
}

# Get user's current effective permissions (role + overrides)
query GetUserEffectivePermissions($userId: uuid!) {
  # Get user through role assignments
  users(where: { id: { _eq: $userId } }) {
    id
    roleAssignments {
      id
      roleId
      role {
        id
        name
        displayName
        priority
        rolePermissions {
          id
          permission {
            id
            action
            description
            resource {
              id
              name
              displayName
            }
          }
        }
      }
    }
  }
  
  # Get user's permission overrides
  permissionOverrides(where: { userId: { _eq: $userId } }) {
    id
    granted
    reason
    expiresAt
    createdAt
    operation
    resource
    createdByUser {
      id
      firstName
      lastName
      computedName
    }
  }
}

# Get permission audit history for a user
query GetUserPermissionHistory($userId: uuid!, $limit: Int = 50) {
  auditPermissionChanges(
    where: { 
      _or: [
        { targetUserId: { _eq: $userId } }
        { changedByUserId: { _eq: $userId } }
      ]
    }
    orderBy: { changedAt: DESC }
    limit: $limit
  ) {
    id
    changeType
    targetUserId
    changedByUserId
    changedAt
    reason
    oldPermissions
    newPermissions
  }
}

# Create a permission override
mutation CreatePermissionOverride($input: PermissionOverridesInsertInput!) {
  insertPermissionOverrides(objects: [$input]) {
    returning {
      id
      granted
      reason
      expiresAt
      operation
      resource
    }
  }
}

# Update a permission override
mutation UpdatePermissionOverride(
  $id: uuid!
  $updates: PermissionOverridesSetInput!
) {
  updatePermissionOverridesByPk(
    pkColumns: { id: $id }
    _set: $updates
  ) {
    id
    granted
    reason
    expiresAt
    updatedAt
  }
}

# Delete a permission override
mutation DeletePermissionOverride($id: uuid!) {
  deletePermissionOverridesByPk(id: $id) {
    id
  }
}

# Create permission audit log entry
mutation CreatePermissionAuditLog($input: AuditPermissionChangesInsertInput!) {
  insertAuditPermissionChanges(objects: [$input]) {
    returning {
      id
      changedAt
    }
  }
}

# Get all roles with their default permissions (for reference)
query GetRolesWithPermissions {
  roles(orderBy: { priority: ASC }) {
    id
    name
    displayName
    description
    priority
    rolePermissions {
      id
      permission {
        id
        action
        description
        resource {
          id
          name
          displayName
        }
      }
    }
  }
}

# Bulk create permission overrides
mutation BulkCreatePermissionOverrides($overrides: [PermissionOverridesInsertInput!]!) {
  insertPermissionOverrides(objects: $overrides) {
    affectedRows
    returning {
      id
      granted
      operation
      resource
    }
  }
}