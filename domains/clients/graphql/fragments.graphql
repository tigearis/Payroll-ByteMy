# Client Domain Fragments
# Following standardized naming conventions established in Priority 3 technical debt resolution

# ============================================
# Minimal Fragments (1-3 fields)
# ============================================

# NOTE: ClientMinimal is now defined in shared/graphql/fragments.graphql
# Use the shared version for consistency across domains

# Core client fields for basic operations
fragment ClientCore on Clients {
  ...ClientMinimal
  contactPerson
}

# ============================================
# Basic Fragments (4-8 fields)
# ============================================

# Standard client information for most operations
fragment ClientBasic on Clients {
  ...ClientCore
  active
  contactEmail
  contactPhone
  createdAt
  updatedAt
}

# Client summary with key business metrics
fragment ClientSummary on Clients {
  ...ClientBasic
  # Add computed fields when available in schema
}

# Optimized for client list displays
fragment ClientListItem on Clients {
  ...ClientBasic
  # Optimized field selection for list performance
  payrollsAggregate(where: { supersededDate: { _isNull: true } }) {
    aggregate {
      count
    }
  }
}

# ============================================
# Extended Fragments (9+ fields)
# ============================================

# Comprehensive client details
fragment ClientDetailed on Clients {
  ...ClientBasic
  # Extended fields when available in schema
}

# Client with relationship data
fragment ClientWithRelations on Clients {
  ...ClientDetailed
  # Relationship fields to be added when schema supports
}

# Most comprehensive client view
fragment ClientComplete on Clients {
  ...ClientWithRelations
  # All available client data including nested relationships
}

# ============================================
# Specialized Fragments
# ============================================

# Optimized for dashboard card display
fragment ClientCard on Clients {
  ...ClientCore
  updatedAt
}

# Table row format for client tables
fragment ClientTableRow on Clients {
  ...ClientBasic
}

# Audit-compliant fields only
fragment ClientForAudit on Clients {
  id
  name
  active
  createdAt
  updatedAt
}

# Search result format
fragment ClientSearchResult on Clients {
  ...ClientCore
  contactEmail
  contactPhone
}

# ============================================
# Legacy Fragments (for backward compatibility)
# ============================================

# @deprecated Use ClientComplete instead
fragment ClientWithConsultant on Clients {
  ...ClientBasic
}
