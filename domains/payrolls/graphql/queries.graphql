# Payroll Queries

# ================================
# PAYROLL DATE GENERATION QUERIES
# Migrated from app/(dashboard)/payrolls/new/page.tsx
# ================================

# Generate payroll dates for a specific payroll
query GeneratePayrollDates(
  $args: generate_payroll_dates_args!
) {
  generatePayrollDates(args: $args) {
    id
    originalEftDate
    adjustedEftDate
    processingDate
    notes
  }
}

query GetPayrolls {
  payrolls(
    where: { supersededDate: { _is_null: true } }
    order_by: { updatedAt: desc }
  ) {
    id
    name
    clientId
    cycleId
    dateTypeId
    primaryConsultantUserId
    backupConsultantUserId
    managerUserId
    employeeCount
    goLiveDate
    status
    dateValue
    createdAt
    updatedAt
    client {
      id
      name
    }
    payrollCycle {
      id
      name
    }
    payrollDateType {
      id
      name
    }
    primaryConsultant {
      id
      name
    }
    backupConsultant {
      id
      name
    }
    manager {
      id
      name
    }
    payrollDates(order_by: { adjustedEftDate: asc }) {
      id
      originalEftDate
      adjustedEftDate
      processingDate
    }
  }
}

query GetPayrollsFallback {
  payrolls {
    id
  }
}

query GetPayrollById($id: uuid!) {
  payroll(id: $id) {
    id
    name
    clientId
    cycleId
    dateTypeId
    primaryConsultantUserId
    backupConsultantUserId
    managerUserId
    employeeCount
    goLiveDate
    status
    dateValue
    processingDaysBeforeEft
    createdAt
    updatedAt
    supersededDate
    versionNumber
    parentPayrollId
    client {
      id
      name
    }
    payrollCycle {
      id
      name
    }
    payrollDateType {
      id
      name
    }
    primaryConsultant {
      id
      name
    }
    backupConsultant {
      id
      name
    }
    manager {
      id
      name
    }
    payrollDates(order_by: { adjustedEftDate: asc }) {
      id
      originalEftDate
      adjustedEftDate
      processingDate
    }
  }
}

query GetPayrollsByClient($clientId: uuid!) {
  payrolls(
    where: { clientId: { _eq: $clientId }, supersededDate: { _is_null: true } }
    order_by: { updatedAt: desc }
  ) {
    id
    clientId
    employeeCount
    goLiveDate
  }
}

query GetPayrollsByMonth($startDate: date!, $endDate: date!) {
  payrolls(
    where: {
      supersededDate: { _is_null: true }
      payrollDates: { adjustedEftDate: { _gte: $startDate, _lte: $endDate } }
    }
    order_by: { updatedAt: desc }
  ) {
    id
    name
    status
    employeeCount
    processingTime
    client {
      id
      name
    }
    payrollCycle {
      id
      name
    }
    userByPrimaryConsultantUserId: primaryConsultant {
      id
      name
      email
      leaves {
        id
        startDate
        endDate
        leaveType
        reason
        status
      }
    }
    userByBackupConsultantUserId: backupConsultant {
      id
      name
      email
      leaves {
        id
        startDate
        endDate
        leaveType
        reason
        status
      }
    }
  }
  
  payrollDates(
    where: {
      payroll: {
        supersededDate: { _is_null: true }
        payrollDates: { adjustedEftDate: { _gte: $startDate, _lte: $endDate } }
      }
      adjustedEftDate: { _gte: $startDate, _lte: $endDate }
    }
    order_by: { adjustedEftDate: asc }
  ) {
    id
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
    payroll {
      id
      name
      employeeCount
      processingTime
      client {
        id
        name
      }
      userByPrimaryConsultantUserId: primaryConsultant {
        id
        name
        email
        leaves {
          id
          startDate
          endDate
          leaveType
          reason
          status
        }
      }
      userByBackupConsultantUserId: backupConsultant {
        id
        name
        email
        leaves {
          id
          startDate
          endDate
          leaveType
          reason
          status
        }
      }
    }
  }
}

query GetPayrollDates($payrollId: uuid!) {
  payrollDates(
    where: { payrollId: { _eq: $payrollId } }
    order_by: { adjustedEftDate: asc }
  ) {
    id
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
  }
}

query GetPayrollFamilyDates($payrollId: uuid!) {
  payrolls(
    where: {
      _or: [
        { id: { _eq: $payrollId } }
        { parentPayrollId: { _eq: $payrollId } }
      ]
    }
    order_by: { versionNumber: asc }
  ) {
    id
    versionNumber
    payrollDates(order_by: { adjustedEftDate: asc }) {
      ...PayrollDate
    }
  }
}

query GetPayrollsMissingDates {
  payrolls(where: { supersededDate: { _is_null: true } }) {
    id
    name
    status
    client {
      id
      name
    }
    payrollDates_aggregate {
      aggregate {
        count
      }
    }
  }
}

query GetPayrollsSimple {
  payrolls {
    id
    client {
      id
    }
  }
}

query CheckPayrollVersion($id: uuid!) {
  payroll(id: $id) {
    id
    supersededDate
    versionNumber
  }
  latest: payrolls(
    where: { parentPayrollId: { _eq: $id }, supersededDate: { _is_null: true } }
    limit: 1
  ) {
    id
  }
}

query GetVersionCheck($id: uuid!) {
  current: payrolls(where: { id: { _eq: $id } }) {
    id
    supersededDate
    parentPayrollId
    versionNumber
  }
}

query GetLatestInFamily($rootId: uuid!) {
  latest: payrolls(
    where: {
      _or: [{ id: { _eq: $rootId } }, { parentPayrollId: { _eq: $rootId } }]
      supersededDate: { _is_null: true }
    }
    order_by: { versionNumber: desc }
    limit: 1
  ) {
    id
    versionNumber
  }
}

# Extracted from inline GraphQL operations
query GetPayrollDatesById($id: uuid!) {
  payrollDates(
    where: { payrollId: { _eq: $id } }
    order_by: { adjustedEftDate: asc }
  ) {
    id
    originalEftDate
    adjustedEftDate
    processingDate
  }
}

query GetPayrollVersionHistory($payrollId: uuid!) {
  payrolls(
    where: {
      _or: [
        { id: { _eq: $payrollId } }
        { parentPayrollId: { _eq: $payrollId } }
      ]
    }
    order_by: { versionNumber: desc }
  ) {
    id
    versionNumber
    supersededDate
    goLiveDate
  }
}

query GetLatestPayrollVersion($payrollId: uuid!) {
  payrolls(
    where: {
      _or: [
        { id: { _eq: $payrollId } }
        { parentPayrollId: { _eq: $payrollId } }
      ]
      supersededDate: { _is_null: true }
    }
    limit: 1
  ) {
    id
    versionNumber
    parentPayrollId
  }
}

query GeneratePayrollDatesQuery(
  $payrollId: uuid!
  $startDate: date
  $endDate: date
  $maxDates: Int
) {
  generatePayrollDates(
    args: {
      p_payroll_id: $payrollId
      p_start_date: $startDate
      p_end_date: $endDate
      p_max_dates: $maxDates
    }
  ) {
    id
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
    notes
  }
}

query GetUserUpcomingPayrolls(
  $userId: uuid!
  $from_date: date!
  $limit: Int = 10
) {
  payrolls(
    where: {
      _and: [
        { supersededDate: { _is_null: true } }
        {
          _or: [
            { primaryConsultantUserId: { _eq: $userId } }
            { backupConsultantUserId: { _eq: $userId } }
            { managerUserId: { _eq: $userId } }
          ]
        }
        { payrollDates: { adjustedEftDate: { _gte: $from_date } } }
      ]
    }
    order_by: { payrollDates_aggregate: { min: { adjustedEftDate: asc } } }
    limit: $limit
  ) {
    id
    name
    status
    client {
      id
      name
    }
    payrollDates(
      where: { adjustedEftDate: { _gte: $from_date } }
      order_by: { adjustedEftDate: asc }
      limit: 3
    ) {
      id
      adjustedEftDate
      processingDate
      originalEftDate
    }
    primaryConsultant {
      id
      name
    }
    backupConsultant {
      id
      name
    }
    manager {
      id
      name
    }
  }
}

# Migrated from inline operations - Priority 1 fixes

query GetPayrollCycles {
  payroll_cycles {
    id
    name
    description
  }
}

query GetPayrollDateTypes {
  payroll_date_types {
    id
    name
    description
  }
}

# Enhanced payroll report query migrated from app/api/signed/payroll-operations/route.ts

query GeneratePayrollReport($startDate: timestamptz!, $endDate: timestamptz!) {
  payrolls(
    where: {
      _and: [
        { createdAt: { _gte: $startDate } }
        { createdAt: { _lte: $endDate } }
        { status: { _in: ["Approved", "Completed"] } }
      ]
    }
    order_by: { createdAt: desc }
  ) {
    id
    name
    status
    createdAt
    updatedAt
    client {
      id
      name
    }
    primaryConsultant {
      id
      name
      email
    }
  }
}

# Phase 2: Paginated payroll queries for performance optimization

query GetPayrollsPaginated(
  $limit: Int = 20
  $offset: Int = 0
  $where: payrolls_bool_exp = {}
  $orderBy: [payrolls_order_by!] = [{ updatedAt: desc }]
) {
  payrolls(
    limit: $limit
    offset: $offset
    where: { _and: [{ supersededDate: { _is_null: true } }, $where] }
    order_by: $orderBy
  ) {
    ...PayrollListItem
  }

  payrollsAggregate(
    where: { _and: [{ supersededDate: { _is_null: true } }, $where] }
  ) {
    aggregate {
      count
    }
  }
}

query GetPayrollsByClientPaginated(
  $clientId: uuid!
  $limit: Int = 20
  $offset: Int = 0
) {
  payrolls(
    where: { clientId: { _eq: $clientId }, supersededDate: { _is_null: true } }
    order_by: { updatedAt: desc }
    limit: $limit
    offset: $offset
  ) {
    ...PayrollTableRow
  }

  clientPayrollsAggregate: payrollsAggregate(
    where: { clientId: { _eq: $clientId }, supersededDate: { _is_null: true } }
  ) {
    aggregate {
      count
    }
  }
}

query SearchPayrollsPaginated(
  $searchTerm: String!
  $limit: Int = 20
  $offset: Int = 0
) {
  payrolls(
    where: {
      _and: [
        { supersededDate: { _is_null: true } }
        {
          _or: [
            { name: { _ilike: $searchTerm } }
            { client: { name: { _ilike: $searchTerm } } }
          ]
        }
      ]
    }
    order_by: { updatedAt: desc }
    limit: $limit
    offset: $offset
  ) {
    ...PayrollListItem
  }

  searchAggregate: payrollsAggregate(
    where: {
      _and: [
        { supersededDate: { _is_null: true } }
        {
          _or: [
            { name: { _ilike: $searchTerm } }
            { client: { name: { _ilike: $searchTerm } } }
          ]
        }
      ]
    }
  ) {
    aggregate {
      count
    }
  }
}

query GetPayrollsByStatusPaginated(
  $status: payroll_status!
  $limit: Int = 20
  $offset: Int = 0
) {
  payrolls(
    where: { status: { _eq: $status }, supersededDate: { _is_null: true } }
    order_by: { updatedAt: desc }
    limit: $limit
    offset: $offset
  ) {
    ...PayrollListItem
  }

  statusAggregate: payrollsAggregate(
    where: { status: { _eq: $status }, supersededDate: { _is_null: true } }
  ) {
    aggregate {
      count
    }
  }
}

# Phase 2: Optimized payroll queries to reduce over-fetching

query GetPayrollsQuickList {
  # Minimal payroll data for dropdowns and quick lists
  payrolls(
    where: { supersededDate: { _is_null: true } }
    order_by: { name: asc }
  ) {
    ...PayrollMinimal
  }
}

query GetPayrollCard($id: uuid!) {
  # Essential payroll data for cards and previews
  payroll(id: $id) {
    ...PayrollSummary
    client {
      name
    }
    primaryConsultant {
      name
    }
    nextDate: payrollDates(
      where: { adjustedEftDate: { _gte: "now()" } }
      order_by: { adjustedEftDate: asc }
      limit: 1
    ) {
      adjustedEftDate
    }
  }
}

query GetPayrollOptions {
  # Ultra-minimal for form options and selectors
  payrolls(
    where: { supersededDate: { _is_null: true } }
    order_by: { name: asc }
  ) {
    id
    name
  }
}

query GetPayrollDashboardCards($limit: Int = 10) {
  # Optimized for payroll dashboard grid
  payrolls(
    where: { supersededDate: { _is_null: true } }
    order_by: { updatedAt: desc }
    limit: $limit
  ) {
    ...PayrollDashboardCard
  }
}

query GetPayrollCalendarEvents($startDate: date!, $endDate: date!) {
  # Minimal data for calendar view
  payrolls(
    where: {
      supersededDate: { _is_null: true }
      payrollDates: { adjustedEftDate: { _gte: $startDate, _lte: $endDate } }
    }
  ) {
    id
    name
    status
    client {
      name
    }
    calendarDates: payrollDates(
      where: { adjustedEftDate: { _gte: $startDate, _lte: $endDate } }
      order_by: { adjustedEftDate: asc }
    ) {
      adjustedEftDate
      processingDate
    }
  }
}

query GetPayrollStatusCounts {
  # Quick status overview for dashboard
  total: payrollsAggregate(where: { supersededDate: { _is_null: true } }) {
    aggregate {
      count
    }
  }

  active: payrollsAggregate(
    where: { supersededDate: { _is_null: true }, status: { _eq: "Active" } }
  ) {
    aggregate {
      count
    }
  }

  implementation: payrollsAggregate(
    where: {
      supersededDate: { _is_null: true }
      status: { _eq: "Implementation" }
    }
  ) {
    aggregate {
      count
    }
  }

  archived: payrollsAggregate(
    where: { supersededDate: { _is_null: true }, status: { _eq: "Archived" } }
  ) {
    aggregate {
      count
    }
  }
}
