# Payroll Queries

query GetPayrolls {
  payrolls(
    where: { supersededDate: { _is_null: true } }
    order_by: { updatedAt: desc }
  ) {
    id
    name
    clientId
    cycleId
    dateTypeId
    primaryConsultantUserId
    backupConsultantUserId
    managerUserId
    employeeCount
    goLiveDate
    status
    client {
      id
      name
    }
    payrollCycle {
      id
      name
    }
    payrollDateType {
      id
      name
    }
    primaryConsultant {
      id
      name
    }
    backupConsultant {
      id
      name
    }
    manager {
      id
      name
    }
    payrollDates(order_by: { adjustedEftDate: asc }) {
      id
      originalEftDate
      adjustedEftDate
      processingDate
    }
  }
}

query GetPayrollsFallback {
  payrolls {
    id
  }
}

query GetPayrollById($id: uuid!) {
  payroll(id: $id) {
    id
    clientId
    cycleId
    dateTypeId
    primaryConsultantUserId
    backupConsultantUserId
    managerUserId
    employeeCount
    goLiveDate
    client {
      id
    }
    payrollCycle {
      id
    }
    payrollDateType {
      id
    }
    payrollDates(order_by: { adjustedEftDate: asc }) {
      id
      originalEftDate
      adjustedEftDate
      processingDate
    }
  }
}

query GetPayrollsByClient($clientId: uuid!) {
  payrolls(
    where: { clientId: { _eq: $clientId }, supersededDate: { _is_null: true } }
    order_by: { updatedAt: desc }
  ) {
    id
    clientId
    employeeCount
    goLiveDate
  }
}

query GetPayrollsByMonth($startDate: date!, $endDate: date!) {
  payrolls(
    where: {
      supersededDate: { _is_null: true }
      payrollDates: { adjustedEftDate: { _gte: $startDate, _lte: $endDate } }
    }
    order_by: { updatedAt: desc }
  ) {
    ...PayrollWithDates
  }
}

query GetPayrollDates($payrollId: uuid!) {
  payrollDates(
    where: { payrollId: { _eq: $payrollId } }
    order_by: { adjustedEftDate: asc }
  ) {
    id
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
  }
}

query GetPayrollFamilyDates($payrollId: uuid!) {
  payrolls(
    where: {
      _or: [
        { id: { _eq: $payrollId } }
        { parentPayrollId: { _eq: $payrollId } }
      ]
    }
    order_by: { versionNumber: asc }
  ) {
    id
    versionNumber
    payrollDates(order_by: { adjustedEftDate: asc }) {
      ...PayrollDate
    }
  }
}

query GetPayrollsMissingDates {
  payrolls(where: { supersededDate: { _is_null: true } }) {
    id
    name
    status
    client {
      id
      name
    }
    payrollDates_aggregate {
      aggregate {
        count
      }
    }
  }
}

query GetPayrollsSimple {
  payrolls {
    id
    client {
      id
    }
  }
}

query CheckPayrollVersion($id: uuid!) {
  payroll(id: $id) {
    id
    supersededDate
    versionNumber
  }
  latest: payrolls(
    where: { parentPayrollId: { _eq: $id }, supersededDate: { _is_null: true } }
    limit: 1
  ) {
    id
  }
}

# Extracted from inline GraphQL operations
query GetPayrollDatesById($id: uuid!) {
  payrollDates(
    where: { payrollId: { _eq: $id } }
    order_by: { adjustedEftDate: asc }
  ) {
    id
    originalEftDate
    adjustedEftDate
    processingDate
  }
}

query GetPayrollVersionHistory($payrollId: uuid!) {
  payrolls(
    where: {
      _or: [
        { id: { _eq: $payrollId } }
        { parentPayrollId: { _eq: $payrollId } }
      ]
    }
    order_by: { versionNumber: desc }
  ) {
    id
    versionNumber
    supersededDate
    goLiveDate
  }
}

query GetLatestPayrollVersion($payrollId: uuid!) {
  payrolls(
    where: {
      _or: [
        { id: { _eq: $payrollId } }
        { parentPayrollId: { _eq: $payrollId } }
      ]
      supersededDate: { _is_null: true }
    }
    limit: 1
  ) {
    id
    versionNumber
    parentPayrollId
  }
}

query GeneratePayrollDatesQuery(
  $payrollId: uuid!
  $startDate: date
  $endDate: date
  $maxDates: Int
) {
  generatePayrollDates(
    args: {
      p_payroll_id: $payrollId
      p_start_date: $startDate
      p_end_date: $endDate
      p_max_dates: $maxDates
    }
  ) {
    id
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
    notes
  }
}

query GetUserUpcomingPayrolls(
  $userId: uuid!
  $from_date: date!
  $limit: Int = 10
) {
  payrolls(
    where: {
      _and: [
        { supersededDate: { _is_null: true } }
        {
          _or: [
            { primaryConsultantUserId: { _eq: $userId } }
            { backupConsultantUserId: { _eq: $userId } }
            { managerUserId: { _eq: $userId } }
          ]
        }
        { payrollDates: { adjustedEftDate: { _gte: $from_date } } }
      ]
    }
    order_by: { payrollDates_aggregate: { min: { adjustedEftDate: asc } } }
    limit: $limit
  ) {
    id
    name
    status
    client {
      id
      name
    }
    payrollDates(
      where: { adjustedEftDate: { _gte: $from_date } }
      order_by: { adjustedEftDate: asc }
      limit: 3
    ) {
      id
      adjustedEftDate
      processingDate
      originalEftDate
    }
    primaryConsultant {
      id
      name
    }
    backupConsultant {
      id
      name
    }
    manager {
      id
      name
    }
  }
}

# Migrated from inline operations - Priority 1 fixes

query GetPayrollCycles {
  payroll_cycles {
    id
    name
    description
  }
}

query GetPayrollDateTypes {
  payroll_date_types {
    id
    name
    description
  }
}
