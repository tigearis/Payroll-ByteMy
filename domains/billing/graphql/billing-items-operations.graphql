# Billing Items GraphQL Operations

# Fragments
fragment BillingItemCore on BillingItems {
  id
  description
  amount
  quantity
  unitPrice
  totalAmount
  status
  notes
  createdAt
  updatedAt
  approvalDate
  isApproved
  clientId
  staffUserId
  approvedBy
  confirmedAt
  confirmedBy
  payrollId
  serviceId
  serviceName
  hourlyRate
  invoiceId
}

fragment BillingItemWithRelations on BillingItems {
  ...BillingItemCore
  client {
    id
    name
    contactEmail
  }
  staffUser {
    id
    firstName
    lastName
    email
  }
  approvedByUser {
    id
    firstName
    lastName
    email
  }
  payroll {
    id
    name
    status
  }
  service {
    id
    name
    description
    category
    billingUnit
    defaultRate
    currency
    serviceType
  }
}

fragment BillingItemStats on BillingItemsAggregate {
  aggregate {
    count
    sum {
      amount
      totalAmount
      quantity
    }
    avg {
      amount
      totalAmount
      quantity
    }
  }
}

# Queries
query GetBillingItemsAdvanced(
  $limit: Int = 50
  $offset: Int = 0
  $where: BillingItemsBoolExp
  $orderBy: [BillingItemsOrderBy!] = [{ createdAt: DESC }]
) {
  billingItems(
    limit: $limit
    offset: $offset
    where: $where
    orderBy: $orderBy
  ) {
    ...BillingItemWithRelations
  }
}

query GetBillingItemByIdAdvanced($id: uuid!) {
  billingItemsByPk(id: $id) {
    ...BillingItemWithRelations
  }
}

query GetBillingItemsStatsAdvanced(
  $where: BillingItemsBoolExp = {}
) {
  billingItemsAggregate(where: $where) {
    ...BillingItemStats
  }
  
  pending: billingItemsAggregate(
    where: { 
      _and: [
        $where,
        { status: { _eq: "pending" } }
      ]
    }
  ) {
    ...BillingItemStats
  }
  
  approved: billingItemsAggregate(
    where: { 
      _and: [
        $where,
        { status: { _eq: "approved" } }
      ]
    }
  ) {
    ...BillingItemStats
  }
  
  rejected: billingItemsAggregate(
    where: { 
      _and: [
        $where,
        { status: { _eq: "rejected" } }
      ]
    }
  ) {
    ...BillingItemStats
  }
}

query GetBillingItemsByClientAdvanced(
  $clientId: uuid!
  $limit: Int = 50
  $offset: Int = 0
  $orderBy: [BillingItemsOrderBy!] = [{ createdAt: DESC }]
) {
  billingItems(
    where: { clientId: { _eq: $clientId } }
    limit: $limit
    offset: $offset
    orderBy: $orderBy
  ) {
    ...BillingItemWithRelations
  }
}

query GetBillingItemsByUserAdvanced(
  $userId: uuid!
  $limit: Int = 50
  $offset: Int = 0
  $orderBy: [BillingItemsOrderBy!] = [{ createdAt: DESC }]
) {
  billingItems(
    where: { staffUserId: { _eq: $userId } }
    limit: $limit
    offset: $offset
    orderBy: $orderBy
  ) {
    ...BillingItemWithRelations
  }
}

query GetRecentBillingItemsAdvanced(
  $limit: Int = 10
  $days: Int = 30
) {
  billingItems(
    where: {
      createdAt: {
        _gte: "date_trunc('day', now() - interval '$days days')"
      }
    }
    limit: $limit
    orderBy: { createdAt: DESC }
  ) {
    ...BillingItemWithRelations
  }
}

# Mutations
mutation CreateBillingItemAdvanced($input: BillingItemsInsertInput!) {
  insertBillingItemsOne(object: $input) {
    ...BillingItemWithRelations
  }
}

mutation UpdateBillingItemAdvanced(
  $id: uuid!
  $updates: BillingItemsSetInput!
) {
  updateBillingItemsByPk(
    pkColumns: { id: $id }
    _set: $updates
  ) {
    ...BillingItemWithRelations
  }
}

mutation DeleteBillingItemAdvanced($id: uuid!) {
  deleteBillingItemsByPk(id: $id) {
    id
    description
  }
}

mutation BulkUpdateBillingItemsStatusAdvanced(
  $ids: [uuid!]!
  $status: String!
  $approvedBy: uuid
) {
  updateBillingItemsMany(
    updates: [{
      where: { id: { _in: $ids } }
      _set: {
        status: $status
        approvedBy: $approvedBy
        approvalDate: "now()"
        isApproved: true
      }
    }]
  ) {
    affectedRows
  }
}

mutation ApproveBillingItemAdvanced(
  $id: uuid!
  $approvedBy: uuid!
) {
  updateBillingItemsByPk(
    pkColumns: { id: $id }
    _set: {
      status: "approved"
      approvedBy: $approvedBy
      approvalDate: "now()"
      isApproved: true
    }
  ) {
    ...BillingItemWithRelations
  }
}

mutation RejectBillingItemAdvanced(
  $id: uuid!
  $approvedBy: uuid!
  $notes: String
) {
  updateBillingItemsByPk(
    pkColumns: { id: $id }
    _set: {
      status: "rejected"
      approvedBy: $approvedBy
      approvalDate: "now()"
      isApproved: false
      notes: $notes
    }
  ) {
    ...BillingItemWithRelations
  }
}

mutation ArchiveBillingItemAdvanced($id: uuid!) {
  updateBillingItemsByPk(
    pkColumns: { id: $id }
    _set: {
      status: "archived"
    }
  ) {
    ...BillingItemWithRelations
  }
}

# Subscriptions
subscription BillingItemsSubscriptionAdvanced(
  $where: BillingItemsBoolExp
  $limit: Int = 50
) {
  billingItems(
    where: $where
    limit: $limit
    orderBy: { createdAt: DESC }
  ) {
    ...BillingItemWithRelations
  }
}

subscription BillingItemByIdSubscriptionAdvanced($id: uuid!) {
  billingItemsByPk(id: $id) {
    ...BillingItemWithRelations
  }
}

subscription BillingItemsStatsSubscriptionAdvanced(
  $where: BillingItemsBoolExp
) {
  billingItemsAggregate(where: $where) {
    ...BillingItemStats
  }
}

# Payroll Date Completion Operations
mutation CompletePayrollDate($id: uuid!, $completedBy: uuid!) {
  updatePayrollDatesByPk(
    pkColumns: { id: $id }
    _set: { 
      status: "completed"
      completedAt: "now()"
      completedBy: $completedBy
    }
  ) {
    id
    status
    completedAt
    completedBy
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
  }
}

mutation UpdatePayrollDateStatus($id: uuid!, $status: String!, $updatedBy: uuid) {
  updatePayrollDatesByPk(
    pkColumns: { id: $id }
    _set: { 
      status: $status
      updatedAt: "now()"
      completedBy: $updatedBy
    }
  ) {
    id
    status
    completedAt
    completedBy
    payrollId
  }
}

query GetPayrollDatesByStatus($payrollId: uuid!, $status: String) {
  payrollDates(
    where: { 
      payrollId: { _eq: $payrollId }
      _and: { status: { _eq: $status } }
    }
    orderBy: { adjustedEftDate: ASC }
  ) {
    id
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
    status
    completedAt
    completedBy
    notes
    createdAt
    updatedAt
  }
}

query GetPayrollDatesWithStatus($payrollId: uuid!) {
  payrollDates(
    where: { payrollId: { _eq: $payrollId } }
    orderBy: { adjustedEftDate: ASC }
  ) {
    id
    payrollId
    originalEftDate
    adjustedEftDate
    processingDate
    status
    completedAt
    completedBy
    notes
    createdAt
    updatedAt
  }
}

# Additional Queries for Client and User Selection
query GetClientsForBillingItemsAdvanced {
  clients(
    where: { active: { _eq: true } }
    orderBy: { name: ASC }
  ) {
    id
    name
    contactEmail
    active
  }
}

query GetUsersForBillingItemsAdvanced {
  users(
    where: { isActive: { _eq: true } }
    orderBy: [{ firstName: ASC }, { lastName: ASC }]
  ) {
    id
    firstName
    lastName
    email
    role
  }
}

# Audit Queries
query GetBillingItemAuditLogAdvanced(
  $billingItemId: String!
  $limit: Int = 50
  $offset: Int = 0
) {
  auditAuditLog(
    where: {
      _and: [
        { resourceType: { _eq: "billing_items" } }
        { resourceId: { _eq: $billingItemId } }
      ]
    }
    limit: $limit
    offset: $offset
    orderBy: { createdAt: DESC }
  ) {
    id
    action
    oldValues
    newValues
    createdAt
    ipAddress
    userAgent
    userId
    userEmail
    userRole
  }
}