# Core Billing Mutations - Enhanced Semi-Automated System

# Time Entry Mutations - Using notes as placeholder 
mutation CreateMultipleTimeEntries($timeEntries: [notesInsertInput!]!) {
  bulkInsertNotes(objects: $timeEntries) {
    returning {
      id
      content
      entityId
      entityType
      createdAt
    }
    affectedRows
  }
}

# Time Entry Mutations - Placeholder (time_entries table not yet implemented)
# mutation CreateMultipleTimeEntries($timeEntries: [timeEntriesInsertInput!]!) {
#   insertTimeEntry(objects: $timeEntries) {
#     returning {
#       id
#       date
#       hours
#       description
#       billableHours
#       rate
#       amount
#       payrollId
#       userId
#     }
#     affectedRows
#   }
# }

# Payroll Billing Generation
mutation GeneratePayrollBilling($billingItem: billingItemsInsertInput!) {
  insertBillingItem(object: $billingItem) {
    id
    payrollId
    clientId
    totalAmount
    isApproved
    createdAt
  }
}

# Batch Payroll Billing Generation  
mutation CreatePayrollBilling(
  $payrollId: uuid!
  $billingItems: [billingItemsInsertInput!]!
) {
  # Insert billing items
  billingItems: bulkInsertBillingItems(objects: $billingItems) {
    returning {
      id
      payrollId
      clientId
      description
      quantity
      amount
      isApproved
      createdAt
    }
    affectedRows
  }
}

# Create billing item log entry for status changes and tracking
mutation CreateBillingItemLog($input: auditLogsInsertInput!) {
  insertAuditLog(object: $input) {
    id
    userId
    action
    success
    metadata
    eventTime
  }
}

# Service Catalog Management
mutation CreateService($input: billingPlansInsertInput!) {
  insertBillingPlan(object: $input) {
    id
    name
    description
    standardRate
    billingUnit
    category
    isActive
    currency
    createdAt
    updatedAt
  }
}

mutation UpdateService($id: uuid!, $updates: billingPlansSetInput!) {
  updateBillingPlanById(pkColumns: { id: $id }, _set: $updates) {
    id
    name
    description
    standardRate
    billingUnit
    category
    isActive
    currency
    createdAt
    updatedAt
  }
}

mutation DeleteService($id: uuid!) {
  updateBillingPlanById(pkColumns: { id: $id }, _set: { isActive: false }) {
    id
    name
    isActive
    updatedAt
  }
}

# Billing Items Management
mutation CreateBillingItem($input: billingItemsInsertInput!) {
  insertBillingItem(object: $input) {
    ...BillingItemFragment
    client {
      id
      name
    }
    staffUser {
      id
      firstName
      lastName
      computedName
    }
  }
}

mutation UpdateBillingItem($id: uuid!, $updates: billingItemsSetInput!) {
  updateBillingItemById(pkColumns: { id: $id }, _set: $updates) {
    ...BillingItemFragment
    client {
      id
      name
    }
    staffUser {
      id
      firstName
      lastName
      computedName
    }
  }
}

mutation DeleteBillingItem($id: uuid!) {
  deleteBillingItemById(id: $id) {
    id
    description
  }
}

# Get clients for form dropdown
query GetClientsForBilling {
  clients(
    where: { active: { _eq: true } }
    orderBy: { name: ASC }
  ) {
    id
    name
  }
}

# Time Entries Management
mutation CreateTimeEntry($input: timeEntriesInsertInput!) {
  insertTimeEntryOne(object: $input) {
    id
    staffUserId
    clientId
    payrollId
    billingItemId
    workDate
    hoursSpent
    description
    createdAt
    updatedAt
  }
}

mutation UpdateTimeEntry($id: uuid!, $updates: timeEntriesSetInput!) {
  updateTimeEntry(pkColumns: { id: $id }, _set: $updates) {
    id
    staffUserId
    clientId
    payrollId
    billingItemId
    workDate
    hoursSpent
    description
    createdAt
    updatedAt
  }
}

# Client Service Agreements Management
mutation BulkUpdateClientServiceAgreements($clientId: uuid!, $agreements: [clientBillingAssignmentsInsertInput!]!) {
  # First delete existing active agreements for this client
  bulkDeleteClientBillingAssignments(
    where: { 
      clientId: { _eq: $clientId }
      isActive: { _eq: true }
    }
  ) {
    affectedRows
  }
  
  # Then insert new agreements
  bulkInsertClientBillingAssignments(objects: $agreements) {
    returning {
      id
      clientId
      billingPlanId
      customRate
      billingFrequency
      effectiveDate
      isEnabled
      isActive
      startDate
      endDate
      createdAt
      assignedBillingPlan {
        id
        name
        description
        standardRate
        billingUnit
        category
      }
    }
    affectedRows
  }
}

# Payroll Billing Status
mutation UpdatePayrollBillingStatus($payrollId: uuid!, $updates: payrollsSetInput!) {
  updatePayrollById(
    pkColumns: { id: $payrollId }
    _set: $updates
  ) {
    id
    billingStatus
    estimatedRevenue
    actualRevenue
    profitMargin
    updatedAt
  }
}