# Billing Domain - Tier1 Completion Metrics Operations
# Security Classification: HIGH - Financial operations and billing
# Used by API routes for payroll completion tracking and billing generation

# API ROUTE OPERATIONS - Tier1 Completion Metrics

# Check if payroll date exists and completion context
query CheckPayrollDateApiTier1Completion($payrollDateId: uuid!) {
  payrollDates(where: { id: { _eq: $payrollDateId } }) {
    id
    status
    payroll {
      id
      name
      client {
        id
        name
      }
    }
  }
  # Check if context already exists
  existingContext: payrollDateCompletionContext(where: { payrollDateId: { _eq: $payrollDateId } }) {
    id
  }
}

# Create new payroll completion context
mutation CreateCompletionContextApi($input: PayrollDateCompletionContextInsertInput!) {
  insertPayrollDateCompletionContextOne(object: $input) {
    id
    payrollDateId
    completedAt
  }
}

# Update payroll date status to completed
mutation UpdatePayrollDateStatusApi($payrollDateId: uuid!, $completedBy: uuid!) {
  updatePayrollDates(
    where: { id: { _eq: $payrollDateId } }
    _set: { 
      status: "completed",
      completedAt: "now()",
      completedBy: $completedBy
    }
  ) {
    affectedRows
  }
}

# Log completion event
mutation LogCompletionEventApi($input: BillingEventLogInsertInput!) {
  insertBillingEventLogOne(object: $input) {
    id
  }
}

# Check existing completion context for update
query CheckExistingContextApi($payrollDateId: uuid!) {
  payrollDateCompletionContext(where: { payrollDateId: { _eq: $payrollDateId } }) {
    id
  }
  payrollDates(where: { id: { _eq: $payrollDateId } }) {
    id
    payroll {
      id
      name
      client {
        id
        name
      }
    }
  }
}

# Update existing completion context
mutation UpdateCompletionContextApi($payrollDateId: uuid!, $updates: PayrollDateCompletionContextSetInput!) {
  updatePayrollDateCompletionContext(
    where: { payrollDateId: { _eq: $payrollDateId } }
    _set: $updates
  ) {
    affectedRows
    returning {
      id
    }
  }
}

# Delete existing billing items for regeneration
mutation DeleteExistingBillingApi($payrollDateId: uuid!) {
  deleteBillingItems(
    where: { 
      payrollDateId: { _eq: $payrollDateId }
      autoGenerated: { _eq: true }
      billingTier: { _eq: "tier1" }
    }
  ) {
    affectedRows
  }
}

# Get completion context and related data
query GetCompletionContextApi($payrollDateId: uuid!) {
  payrollDateCompletionContext(where: { payrollDateId: { _eq: $payrollDateId } }) {
    id
    payrollDateId
    completedBy
    completedAt
    payslipCount
    employeeCount
    customQuantities
    completedByUser {
      id
      firstName
      lastName
      computedName
    }
  }
  payrollDates(where: { id: { _eq: $payrollDateId } }) {
    id
    originalEftDate
    adjustedEftDate
    status
    payroll {
      id
      name
      client {
        id
        name
      }
    }
    billingItems(
      where: { 
        autoGenerated: { _eq: true }
        billingTier: { _eq: "tier1" }
      }
      orderBy: [{ createdAt: DESC }]
    ) {
      id
      serviceCode
      serviceName
      description
      quantity
      unitPrice
      totalAmount
      status
      approvalLevel
      rateJustification
      createdAt
    }
  }
}