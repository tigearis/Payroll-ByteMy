table:
  name: notes
  schema: public
object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: user_id
array_relationships:
  - name: notes_by_client
    using:
      manual_configuration:
        column_mapping:
          entity_id: id
        insertion_order: null
        remote_table:
          name: clients
          schema: public
  - name: notes_by_payroll
    using:
      manual_configuration:
        column_mapping:
          entity_id: id
        insertion_order: null
        remote_table:
          name: payrolls
          schema: public
insert_permissions:
  - role: consultant
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
        - entity_type
        - entity_id
        - content
        - is_important
        - user_id
    comment: Consultants can create notes
  - role: developer
    permission:
      check: {}
      columns: '*'
    comment: Developer role has full insert access
  - role: manager
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
        - entity_type
        - entity_id
        - content
        - is_important
        - user_id
    comment: Managers can create notes
  - role: org_admin
    permission:
      check: {}
      columns:
        - entity_type
        - entity_id
        - user_id
        - content
        - is_important
    comment: Org Admins can create notes
  - role: viewer
    permission:
      check:
        user_id:
          _eq: X-Hasura-User-Id
      columns:
        - entity_type
        - entity_id
        - content
        - user_id
    comment: Viewers can create basic notes
select_permissions:
  - role: consultant
    permission:
      columns:
        - content
        - created_at
        - entity_id
        - entity_type
        - id
        - updated_at
        - user_id
        - is_important
      filter: {}
      allow_aggregations: true
    comment: Consultants can view all notes on entities they have access to
  - role: developer
    permission:
      columns: '*'
      filter: {}
      allow_aggregations: true
    comment: Developer role has full select access
  - role: manager
    permission:
      columns:
        - id
        - entity_type
        - entity_id
        - user_id
        - content
        - is_important
        - created_at
        - updated_at
      filter: {}
      allow_aggregations: true
    comment: Managers can view all notes
  - role: org_admin
    permission:
      columns:
        - id
        - entity_type
        - entity_id
        - user_id
        - content
        - is_important
        - created_at
        - updated_at
      filter: {}
      allow_aggregations: true
    comment: Org Admins can view all notes
  - role: viewer
    permission:
      columns:
        - id
        - entity_type
        - entity_id
        - user_id
        - content
        - is_important
        - created_at
        - updated_at
      filter: {}
    comment: Viewers can view all notes
update_permissions:
  - role: consultant
    permission:
      columns:
        - content
        - is_important
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
    comment: Consultants can update their own notes
  - role: developer
    permission:
      columns: '*'
      filter: {}
      check: {}
    comment: Developer role has full update access
  - role: manager
    permission:
      columns:
        - content
        - is_important
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
    comment: Managers can update their own notes
  - role: org_admin
    permission:
      columns:
        - content
        - is_important
      filter: {}
      check: {}
    comment: Org Admins can update any notes
  - role: viewer
    permission:
      columns:
        - content
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
    comment: Viewers can update their own note content
delete_permissions:
  - role: consultant
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
    comment: Consultants can delete their own notes
  - role: developer
    permission:
      filter: {}
    comment: Developer role has full delete access
  - role: manager
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
    comment: Managers can delete their own notes
  - role: org_admin
    permission:
      filter: {}
    comment: Org Admins can delete any notes
apollo_federation_config:
  enable: v1
