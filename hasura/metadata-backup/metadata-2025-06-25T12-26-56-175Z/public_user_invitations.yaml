table:
  name: user_invitations
  schema: public
configuration:
  column_config:
    first_name:
      custom_name: firstName
    last_name:
      custom_name: lastName
    invited_role:
      custom_name: invitedRole
    manager_id:
      custom_name: managerId
    clerk_invitation_id:
      custom_name: clerkInvitationId
    clerk_ticket:
      custom_name: clerkTicket
    invitation_metadata:
      custom_name: invitationMetadata
    invited_by:
      custom_name: invitedBy
    invited_at:
      custom_name: invitedAt
    accepted_at:
      custom_name: acceptedAt
    accepted_by:
      custom_name: acceptedBy
    expires_at:
      custom_name: expiresAt
    created_at:
      custom_name: createdAt
    updated_at:
      custom_name: updatedAt
  custom_column_names:
    first_name: firstName
    last_name: lastName
    invited_role: invitedRole
    manager_id: managerId
    clerk_invitation_id: clerkInvitationId
    clerk_ticket: clerkTicket
    invitation_metadata: invitationMetadata
    invited_by: invitedBy
    invited_at: invitedAt
    accepted_at: acceptedAt
    accepted_by: acceptedBy
    expires_at: expiresAt
    created_at: createdAt
    updated_at: updatedAt
  custom_name: userInvitations
  custom_root_fields:
    delete: bulkDeleteUserInvitations
    delete_by_pk: deleteUserInvitationById
    insert: bulkInsertUserInvitations
    insert_one: insertUserInvitation
    select: userInvitations
    select_aggregate: userInvitationsAggregate
    select_by_pk: userInvitationById
    update: bulkUpdateUserInvitations
    update_by_pk: updateUserInvitationById
object_relationships:
  - name: invitedByUser
    using:
      manual_configuration:
        column_mapping:
          invited_by: id
        insertion_order: null
        remote_table:
          name: users
          schema: public
  - name: managerUser
    using:
      manual_configuration:
        column_mapping:
          manager_id: id
        insertion_order: null
        remote_table:
          name: users
          schema: public
  - name: acceptedByUser
    using:
      manual_configuration:
        column_mapping:
          accepted_by: id
        insertion_order: null
        remote_table:
          name: users
          schema: public
insert_permissions:
  - role: developer
    permission:
      check: {}
      columns: '*'
    comment: Developer role has full insert access
  - role: manager
    permission:
      check:
        invited_by:
          _eq: X-Hasura-User-Id
      columns:
        - email
        - first_name
        - last_name
        - invited_role
        - manager_id
        - clerk_invitation_id
        - clerk_ticket
        - invitation_metadata
        - invited_by
        - expires_at
    comment: Managers can create invitations
  - role: org_admin
    permission:
      check: {}
      columns:
        - email
        - first_name
        - last_name
        - invited_role
        - manager_id
        - clerk_invitation_id
        - clerk_ticket
        - invitation_metadata
        - invited_by
        - expires_at
    comment: Org admins can create any invitations
select_permissions:
  - role: consultant
    permission:
      columns:
        - id
        - email
        - first_name
        - last_name
        - invited_role
        - status
        - invited_at
        - accepted_at
        - expires_at
      filter:
        email:
          _eq: X-Hasura-User-Email
    comment: Consultants can view invitations sent to their email
  - role: developer
    permission:
      columns: '*'
      filter: {}
      allow_aggregations: true
    comment: Developer role has full access
  - role: manager
    permission:
      columns:
        - id
        - email
        - first_name
        - last_name
        - invited_role
        - manager_id
        - clerk_invitation_id
        - clerk_ticket
        - invitation_metadata
        - invited_by
        - invited_at
        - accepted_at
        - accepted_by
        - expires_at
        - status
        - created_at
        - updated_at
      filter:
        _or:
          - invited_by:
              _eq: X-Hasura-User-Id
          - manager_id:
              _eq: X-Hasura-User-Id
      allow_aggregations: true
    comment: Managers can view invitations they sent or manage
  - role: org_admin
    permission:
      columns: '*'
      filter: {}
      allow_aggregations: true
    comment: Org admins can view all invitations
  - role: viewer
    permission:
      columns:
        - id
        - email
        - first_name
        - last_name
        - invited_role
        - status
        - invited_at
        - accepted_at
        - expires_at
      filter:
        email:
          _eq: X-Hasura-User-Email
    comment: Viewers can view invitations sent to their email
update_permissions:
  - role: developer
    permission:
      columns: '*'
      filter: {}
      check: {}
    comment: Developer role has full update access
  - role: manager
    permission:
      columns:
        - status
        - accepted_at
        - accepted_by
        - clerk_invitation_id
        - clerk_ticket
        - expires_at
      filter:
        invited_by:
          _eq: X-Hasura-User-Id
      check:
        invited_by:
          _eq: X-Hasura-User-Id
    comment: Managers can update invitations they sent
  - role: org_admin
    permission:
      columns:
        - status
        - accepted_at
        - accepted_by
        - clerk_invitation_id
        - clerk_ticket
        - expires_at
        - invitation_metadata
      filter: {}
      check: {}
    comment: Org admins can update any invitations
delete_permissions:
  - role: developer
    permission:
      filter: {}
    comment: Developer role has full delete access
  - role: org_admin
    permission:
      filter: {}
    comment: Org admins can delete invitations
apollo_federation_config:
  enable: v1
